<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.takeit.mapper.TakeCommonMapper">
    <resultMap type="takeResultMap" id="gridMap">
        <result column="GRID_FORMAT" property="GRID_FORMAT" jdbcType="CLOB" javaType="java.lang.String" />
    </resultMap>

	<!-- Login -->
	<select id="login" parameterType="map" resultType="map">
		SELECT
		    A.CUST_ID USER_ID,
		    A.PASS_WORD PASS_WD,
		    B.COMP_CD,
		    A.CUST_CODE,
		    B.CUST_NM,
		    A.CUST_GBN,
		    A.TRANS_YN,
		    B.BUSI_NO,
		    B.LEDR,
		    B.CMPY_KIND
		FROM
		    SSWEB_USER A
		    INNER JOIN SSAZ2100 B ON A.CUST_CODE = B.CUST_CODE
		WHERE A.CUST_ID = #{USER_ID} AND A.PASS_WORD = #{PASS_WD}
	</select>

	<!-- Personalization -->
	<select id="userGridCheck" parameterType="map" timeout="0" resultType="map" useCache="false">
		SELECT COUNT(*) AS CNT
		FROM USER_GRID_CONFIG
		WHERE PROJECT_CD= #{PROJECT_CD}
			AND USER_CD	= #{USER_CD}
			AND MENU_CD	= #{MENU_CD}
			AND GRID_NO	= #{GRID_NO}
	</select>

	<delete id="userGridDelete" parameterType="map" timeout="0">
		DELETE FROM USER_GRID_CONFIG
		WHERE PROJECT_CD= #{PROJECT_CD}
			AND USER_CD	= #{USER_CD}
			AND MENU_CD	= #{MENU_CD}
			AND GRID_NO	= #{GRID_NO}
	</delete>

	<insert id="userGridInsert" parameterType="map" timeout="0">
		<selectKey keyProperty="GRID_CHECK" resultType="String" order="BEFORE">
			SELECT COUNT(*) AS CNT
			FROM USER_GRID_CONFIG
			WHERE PROJECT_CD= #{PROJECT_CD}
				AND USER_CD	= #{USER_CD}
				AND MENU_CD	= #{MENU_CD}
				AND GRID_NO	= #{GRID_NO}
		</selectKey>

		<choose>
			<when test="GRID_CHECK != null and GRID_CHECK != '' and GRID_CHECK == 0 ">
			  INSERT INTO USER_GRID_CONFIG
				(
					PROJECT_CD
					, USER_CD
					, MENU_CD
					, GRID_NO
					, GRID_FORMAT
					, ORDER_CONFIG
					, FILTER_CONFIG
					, FIT_CONFIG
					, REG_DT
					, REG_CD
				)
				VALUES
				(
				    #{PROJECT_CD}
					, #{USER_CD}
					, #{MENU_CD}
					, #{GRID_NO}
					, #{GRID_FORMAT,jdbcType=CLOB}
					, #{ORDER_CONFIG}
					, #{FILTER_CONFIG}
					, #{FIT_CONFIG}
				    , <include refid="CommonInc.sysdate" />
				    , #{USER_CD}
				)
			</when>
			<otherwise>
			  UPDATE USER_GRID_CONFIG
				SET GRID_FORMAT		= #{GRID_FORMAT,jdbcType=CLOB}
					, ORDER_CONFIG	= #{ORDER_CONFIG}
					, FILTER_CONFIG	= #{FILTER_CONFIG}
					, FIT_CONFIG	= #{FIT_CONFIG}
					, MOD_DT		= <include refid="CommonInc.sysdate" />
					, MOD_CD		= #{USER_CD}
				WHERE PROJECT_CD= #{PROJECT_CD}
					AND USER_CD	= #{USER_CD}
					AND MENU_CD	= #{MENU_CD}
					AND GRID_NO	= #{GRID_NO}
			</otherwise>
		</choose>
	</insert>

	<select id="userGridSelect" parameterType="map" timeout="0" resultMap="gridMap" useCache="false">
		SELECT PROJECT_CD
			, USER_CD
			, MENU_CD
			, GRID_NO
			, GRID_FORMAT
			, ORDER_CONFIG
			, FILTER_CONFIG
			, FIT_CONFIG
			, REG_DT
			, MOD_DT
		FROM USER_GRID_CONFIG
		WHERE PROJECT_CD = #{sProjectCd}
			AND MENU_CD = #{sMenuCd}
			AND USER_CD = #{sUserCd}
	</select>

	<update id="userGridUpdate" parameterType="map" timeout="0">
		UPDATE USER_GRID_CONFIG
		SET GRID_FORMAT		= #{GRID_FORMAT,jdbcType=CLOB}
			, ORDER_CONFIG	= #{ORDER_CONFIG}
			, FILTER_CONFIG	= #{FILTER_CONFIG}
			, FIT_CONFIG	= #{FIT_CONFIG}
			, MOD_DT		= <include refid="CommonInc.sysdate" />
			, MOD_CD		= #{USER_CD}
		WHERE PROJECT_CD= #{PROJECT_CD}
			AND USER_CD	= #{USER_CD}
			AND MENU_CD	= #{MENU_CD}
			AND GRID_NO	= #{GRID_NO}
	</update>

	<!-- Popup -->
	<select id="comSystemCodeGroupSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		SELECT CODE_ID AS CODE,
			CODE_NM AS NAME
		FROM EBIZ_CCODE
		WHERE GROUP_ID = '0000'
			AND USE_YN = 'Y'
		<if test="code != null and code != '' ">
		    AND
			(
				CODE_ID LIKE CONCAT('%' , #{code} , '%') OR CODE_NM LIKE CONCAT('%' , #{code} , '%')
			)
		</if>
		ORDER BY CODE_KEY, CODE_ORD
	</select>

	<select id="comSystemCodeSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		SELECT CODE_ID AS CODE,
			CODE_NM AS NAME
		FROM EBIZ_CCODE
		WHERE USE_YN = 'Y'
		<if test="code != null and code != '' ">
		    AND
			(
				CODE_ID LIKE CONCAT('%' , #{code} , '%') OR CODE_NM LIKE CONCAT('%' , #{code} , '%')
			)
		</if>
		ORDER BY CODE_KEY, CODE_ORD
	</select>

	<select id="comSystemProgramSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		SELECT PROG_ID AS CODE
			, PROG_NM AS NAME
		FROM EBIZ_PROGRAM
		WHERE USE_YN = 'Y'
		AND PROG_TYPE = '03'
		<if test="code != null and code != '' ">
		    AND
			(
				PROG_ID LIKE CONCAT('%' , #{code} , '%') OR PROG_NM LIKE CONCAT('%' , #{code} , '%')
			)
		</if>
		ORDER BY PROG_ID
	</select>

	<select id="comSystemRoleSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		SELECT ROLE_CD AS CODE
			, ROLE_NM AS NAME
		FROM EBIZ_ROLEINFO
		WHERE USE_YN = 'Y'
		<if test="code != null and code != '' ">
		    AND
			(
				ROLE_CD LIKE CONCAT('%' , #{code} , '%') OR ROLE_NM LIKE CONCAT('%' , #{code} , '%')
			)
		</if>
		ORDER BY ROLE_CD
	</select>

	<select id="comSystemSystemSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		SELECT PROG_ID AS CODE,
			PROG_NM AS NAME
		FROM EBIZ_PROGRAM
		WHERE PROG_TYPE = '01'
			AND USE_YN = 'Y'
		<if test="code != null and code != '' ">
		    AND
			(
				PROG_ID LIKE CONCAT('%' , #{code} , '%') OR PROG_NM LIKE CONCAT('%' , #{code} , '%')
			)
		</if>
		ORDER BY PROG_ORDER
	</select>

	<select id="comSystemUserSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		SELECT
		    A.CUST_ID AS CODE
			, B.CUST_NM AS NAME
		FROM SSWEB_USER A
		    INNER JOIN SSAZ2100 B ON A.CUST_CODE = B.CUST_CODE
		WHERE 1 = 1
		<if test="code != null and code != '' ">
		    AND
			(
				A.CUST_ID LIKE CONCAT('%' , #{code} , '%') OR B.CUST_NM LIKE CONCAT('%' , #{code} , '%')
			)
		</if>
	</select>

	<!-- Role -->
	<select id="menuSearchSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		SELECT p.PROG_ID, p.PROG_NM, p.PROG_PREFIX, p.MENU_URL, LTRIM (SYS_CONNECT_BY_PATH (p.PROG_NM, ' > '), ' > ') AS PROG_PATH
		FROM EBIZ_PROGRAM p
		WHERE p.DISPLAY_YN = 'Y'
			AND p.USE_YN = 'Y'
			AND p.PROG_TYPE = '03'
			AND p.PROG_NM LIKE CONCAT('%' , #{sProgNm} , '%')
			AND p.PROG_ID IN (
				SELECT roleprog.PROG_ID
				FROM EBIZ_USER_ROLE userRole
					INNER JOIN EBIZ_ROLE_PROGRAM roleprog ON userRole.ROLE_CD = roleprog.ROLE_CD
				WHERE userRole.USER_ID =  #{sessionUserId}
			)
		START WITH p.P_PROG_ID = '0'
		CONNECT BY PRIOR PROG_ID = P_PROG_ID
		ORDER BY p.PROG_ORDER
	</select>

	<select id="userButtonRoleSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		SELECT MAX(roleprog.R_READ) as R_READ,
		       MAX(roleprog.R_INPUT) as R_INPUT,
		       MAX(roleprog.R_SAVE) as R_SAVE,
		       MAX(roleprog.R_DELETE) as R_DELETE,
		       MAX(roleprog.R_PRINT) as R_PRINT,
		       MAX(roleprog.R_EXCEL) as R_EXCEL
		FROM EBIZ_USER_ROLE userRole
		   INNER JOIN EBIZ_ROLE_PROGRAM roleprog ON userRole.ROLE_CD = roleprog.ROLE_CD
		   INNER JOIN EBIZ_PROGRAM prog ON roleprog.PROG_ID = prog.PROG_ID
		WHERE roleprog.USE_YN = 'Y'
			AND prog.USE_YN = 'Y'
			AND userRole.USER_ID =  #{sessionUserId}
			AND roleprog.PROG_ID = #{sProgId}
		group by userRole.USER_ID, roleprog.PROG_ID, prog.PROG_NM, prog.PROG_DEPTH, roleprog.R_READ, roleprog.R_INPUT, roleprog.R_SAVE, roleprog.R_DELETE, roleprog.R_PRINT, roleprog.R_EXCEL
		order by roleprog.PROG_ID ASC
	</select>

	<select id="userCommonButtonSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		SELECT MAX(roleprog.R_READ) as R_READ,
		       MAX(roleprog.R_INPUT) as R_INPUT,
		       MAX(roleprog.R_SAVE) as R_SAVE,
		       MAX(roleprog.R_DELETE) as R_DELETE,
		       MAX(roleprog.R_PRINT) as R_PRINT,
		       MAX(roleprog.R_EXCEL) as R_EXCEL
		FROM EBIZ_USER_ROLE userRole
		   INNER JOIN EBIZ_ROLE_PROGRAM roleprog ON userRole.role_cd = roleprog.role_cd
		   INNER JOIN EBIZ_PROGRAM prog ON roleprog.prog_id = prog.prog_id
		WHERE roleprog.USE_YN = 'Y'
			AND prog.USE_YN = 'Y'
			AND userRole.USER_ID = #{sessionUserId}
			AND roleprog.PROG_ID = #{sProgId}
		group by userRole.USER_ID, roleprog.PROG_ID, prog.PROG_NM, prog.PROG_DEPTH, roleprog.R_READ, roleprog.R_INPUT, roleprog.R_SAVE, roleprog.R_DELETE, roleprog.R_PRINT, roleprog.R_EXCEL
		order by roleprog.PROG_ID asc
	</select>

	<select id="userHideMenuSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		SELECT p.PROG_ID,
		       p.SYSTEM_DIV,
		       p.P_PROG_ID,
		       p.PROG_DEPTH AS LEV,
		       p.PROG_NM,
		       p.PROG_TYPE,
		       p.MENU_URL,
		       p.PROG_ORDER,
		       p.DISPLAY_YN,
		       p.MANUAL_URL,
		       p.PROG_DESC,
		       p.PROG_PREFIX
		FROM EBIZ_USER_ROLE ur
		      INNER JOIN EBIZ_ROLE_PROGRAM rp ON ur.ROLE_CD = rp.ROLE_CD
		      INNER JOIN EBIZ_PROGRAM p ON rp.PROG_ID = p.PROG_ID
		WHERE p.USE_YN 				= 'Y'
		      AND p.DISPLAY_YN 		= 'N'
			  AND p.SYSTEM_TYPE 	= '01'
			  AND p.PROG_PREFIX 	!= 'Dash'
		      AND ur.USER_ID 		=  #{sessionUserId}
		GROUP BY p.PROG_ID,
		       p.SYSTEM_DIV,
		       p.P_PROG_ID,
		       p.PROG_DEPTH,
		       p.PROG_NM,
		       p.PROG_TYPE,
		       p.MENU_URL,
		       p.PROG_ORDER,
		       p.DISPLAY_YN,
		       p.MANUAL_URL,
		       p.PROG_DESC,
		       p.PROG_PREFIX
		ORDER BY p.PROG_ORDER
	</select>

	<select id="userMenuSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		SELECT p.PROG_ID,
		       p.SYSTEM_DIV,
		       p.P_PROG_ID,
		       p.PROG_DEPTH AS LEV,
		       p.PROG_NM,
		       p.PROG_TYPE,
		       p.MENU_URL,
		       p.PROG_ORDER,
		       p.DISPLAY_YN,
		       p.MANUAL_URL,
		       p.PROG_DESC,
		       p.PROG_PREFIX
		FROM EBIZ_USER_ROLE ur
		      INNER JOIN EBIZ_ROLE_PROGRAM rp ON ur.ROLE_CD = rp.ROLE_CD
		      INNER JOIN EBIZ_PROGRAM p ON rp.PROG_ID = p.PROG_ID
		WHERE p.USE_YN 			= 'Y'
		      AND p.DISPLAY_YN 	= 'Y'
			  AND p.SYSTEM_TYPE = '01'
		      AND ur.USER_ID 	= #{sessionUserId}
		GROUP BY p.PROG_ID,
		       p.SYSTEM_DIV,
		       p.P_PROG_ID,
		       p.PROG_DEPTH,
		       p.PROG_NM,
		       p.PROG_TYPE,
		       p.MENU_URL,
		       p.PROG_ORDER,
		       p.DISPLAY_YN,
		       p.MANUAL_URL,
		       p.PROG_DESC,
		       p.PROG_PREFIX
		ORDER BY p.PROG_ORDER
	</select>

	<delete id="userMyMenuDelete" parameterType="map" timeout="0">
		DELETE FROM EBIZ_USER_MYMENU
		WHERE USER_ID = #{session_id}
		<if test="prog_id != null and prog_id != '' ">
		    AND PROG_ID = #{prog_id}
		</if>
	</delete>

	<insert id="userMyMenuInsert" parameterType="map" timeout="0">
		INSERT INTO EBIZ_USER_MYMENU
		(
		    USER_ID,
		    PROG_ID,
		    REG_DT,
		    REG_USER
		)
		VALUES
		(
		    #{session_id},
		    #{prog_id},
		    <include refid="CommonInc.sysdate" />,
		    #{reg_user}
		)
	</insert>

	<select id="userMyMenuSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		SELECT UM.PROG_ID,
		       P.PROG_NM
		FROM EBIZ_USER_MYMENU UM
		      INNER JOIN EBIZ_PROGRAM P ON UM.PROG_ID = P.PROG_ID
		WHERE p.USE_YN = 'Y'
			AND um.USER_ID = #{sessionUserId}
	</select>

	<update id="userMyMenuUpdate" parameterType="map" timeout="0">
		UPDATE EBIZ_USER_MYMENU
		SET REG_DT	= #{reg_dt},
			REG_USER= #{reg_user}
		WHERE USER_ID=#{session_id} AND PROG_ID=#{prog_id}
	</update>

	<select id="userProgramRoleCheck" parameterType="map" timeout="0" resultType="map" useCache="false">
		SELECT COUNT(*) AS CNT
		FROM EBIZ_USER_ROLE A
		      INNER JOIN EBIZ_ROLE_PROGRAM B ON A.ROLE_CD = B.ROLE_CD
		WHERE A.USER_ID 	= #{sessionUserId}
		      AND B.PROG_ID = #{sProgId}
		      AND B.USE_YN 	= 'Y'
	</select>

	<select id="progDomainSelect" parameterType="map" timeout="0" resultType="takeResultMap" useCache="false">
		SELECT
			  PC.COMPONENT_ID AS LABLE_ID
			, MD.ML_LANG_TXT  AS LABLE_NM
		FROM PROGRAM_COMPONENT PC
			INNER JOIN MULTILANGUAGE_DETAIL MD ON PC.ML_CD = MD.ML_CD
		WHERE MD.LANG_CD = #{sLangCd}
		AND (PC.PROGRAM_CD = #{sProgId}
               OR (PC.PROGRAM_CD = (SELECT PROGRAM_CD FROM PROJECT_MENU WHERE USE_YN = 'Y' AND MENU_CD = #{sProgId} AND PROJECT_CD = #{__tcsProjectCd}))
            )
	</select>

	<select id="progDomainLangSelect" parameterType="map" timeout="0" resultType="takeResultMap" useCache="false">
		SELECT
		      B.ML_CD       AS MSG_ID
			, B.ML_LANG_TXT AS MSG_NM
			, A.ML_NM       AS MSG_KEY
		FROM MULTILANGUAGE_INFO A
		   INNER JOIN MULTILANGUAGE_DETAIL B ON A.ML_CD = B.ML_CD
		WHERE A.ML_GROUP = '03'
          AND B.LANG_CD = #{sLangCd}
        <if test="@kr.co.takeit.util.MybatisUtil@notEmpty(sProgId)">
		UNION ALL
		SELECT
		      B.ML_CD       AS MSG_ID
			, B.ML_LANG_TXT AS MSG_NM
			, A.MESSAGE_NM  AS MSG_KEY
		FROM PROGRAM_MESSAGE A
		   LEFT OUTER JOIN MULTILANGUAGE_DETAIL B ON A.ML_CD = B.ML_CD
		WHERE B.LANG_CD = #{sLangCd}
		AND (A.PROGRAM_CD = #{sProgId}
                 OR A.PROGRAM_CD = (SELECT PROGRAM_CD FROM PROJECT_MENU WHERE USE_YN = 'Y' AND MENU_CD = #{sProgId} AND PROJECT_CD = #{__tcsProjectCd})
              )
        </if>
	</select>
</mapper>