<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
*
* @filename mappers/safety/SafetyMapper.xml
* @author 	safety
* @since 	2023.01.19
* @version 	1.0
* @see
*
* << 변경 이력(Modification Information) >>
*
* 변경번호 : #1
* 변경일자 : 2023.01.19
* 변경사람 : safety
* 변경내용 : 신규 생성
 -->
<mapper namespace="safety">

	<select id="odrSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		<![CDATA[
		/*
		*
		* safety.odrSelect 
		* TB_ODR 조회
		* @author dooresoft
		* @since 2023.02.08
		*/
		]]>
        SELECT  ODR_ID                                            -- 차수ID
              , ODR_YR                                            -- 차수연도
              , ODR_DIV_CD                                        -- 차수구분코드
              , ODR                                               -- 차수
              , CERT_FLD_CD                                       -- 인증분야코드
              , THEMA                                             -- 테마
              , TOTQY                                             -- 총수량
              , BGNG_YMD                                          -- 시작일자
              , PROGRS_STTUS_CD                                   -- 진행상태코드
        FROM TB_ODR A
        WHERE 1 = 1
        <if test=" SEARCH_ODR_ID != null and SEARCH_ODR_ID != '' " >
        AND ODR_ID = #{SEARCH_ODR_ID}
        </if>
        <if test=" CERT_FLD_CD != null and CERT_FLD_CD != '' " >
        AND CERT_FLD_CD = #{CERT_FLD_CD}
        </if>
        <if test=" ODR_DIV_CD != null and ODR_DIV_CD != '' " >
        AND ODR_DIV_CD = #{ODR_DIV_CD}
        </if>
        <if test=" ODR_YR != null and ODR_YR != '' " >
        AND ODR_YR = #{ODR_YR}
        </if>
        <if test=" TEST_INST_CD != null and TEST_INST_CD != '' " >
		AND ODR_ID IN (SELECT DISTINCT A.ODR_ID
					   FROM   TB_ODR_GDS A, TB_TEST_POSBL_INST B
					   WHERE  A.DETAIL_GDS_ID = B.DETAIL_GDS_ID
					   AND    B.TEST_INST_CD = #{TEST_INST_CD}
					   UNION  
					   SELECT DISTINCT ODR_ID
					   FROM    VW_ODR_GDS
					   WHERE  TEST_INST_CD = #{TEST_INST_CD}
					   <![CDATA[
					   AND    (IFNULL(POSBL_QY, 0) <> 0 OR IFNULL(PLAN_QY, 0) <> 0)
					   ]]>
					  )
		AND '02' <![CDATA[<=]]> (SELECT PROGRS_STTUS_CD FROM TB_ODR WHERE ODR_ID = A.ODR_ID) <!-- 시험기관검토중 이후 진행조회 -->  
		</if>			
        ORDER BY ODR_YR, BGNG_YMD DESC, ODR
	</select>

	<insert id="odrInsert" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.odrInsert 
		* TB_ODR 등록
		* @author dooresoft
		* @since 2023.02.08
		*/
		]]>
		INSERT INTO TB_ODR (
                ODR_ID                                            -- 차수ID
              , ODR_YR                                            -- 차수연도
              , ODR_DIV_CD                                        -- 차수구분코드
              , ODR                                               -- 차수
              , CERT_FLD_CD                                       -- 인증분야코드
              , THEMA                                             -- 테마
              , TOTQY                                             -- 총수량
              , BGNG_YMD                                          -- 시작일자
              , PROGRS_STTUS_CD                                   -- 진행상태코드
              , REG_DT                                            -- 등록일시
              , RGTR_ID)                                          -- 등록자ID
		VALUES (
                #{ODR_ID}                                         -- 차수ID
              , #{ODR_YR}                                         -- 차수연도
              , #{ODR_DIV_CD}                                     -- 차수구분코드
              , #{ODR}                                            -- 차수
              , #{CERT_FLD_CD}                                    -- 인증분야코드
              , #{THEMA}                                          -- 테마
              , #{TOTQY}                                          -- 총수량
              , #{BGNG_YMD}                                       -- 시작일자
              , #{PROGRS_STTUS_CD}                                -- 진행상태코드
              , NOW()                                             -- 등록일시
              , #{_sessionUserCd}                                 -- 등록자ID
		)
	</insert>

	<update id="odrUpdate" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.odrUpdate 
		* TB_ODR 수정
		* @author dooresoft
		* @since 2023.02.08
		*/
		]]>
		UPDATE TB_ODR
		SET    MDFCN_DT = NOW()
		     , MDFR_ID = #{_sessionUserCd}
		<if test=" ODR_YR != null and ODR_YR != '' ">
		     , ODR_YR = #{ODR_YR}                                                              -- 차수연도
		</if>
		<if test=" ODR_DIV_CD != null and ODR_DIV_CD != '' ">
		     , ODR_DIV_CD = #{ODR_DIV_CD}                                                      -- 차수구분코드
		</if>
		<if test=" ODR != null and ODR != '' ">
		     , ODR = #{ODR}                                                                    -- 차수
		</if>
		<if test=" CERT_FLD_CD != null and CERT_FLD_CD != '' ">
		     , CERT_FLD_CD = #{CERT_FLD_CD}                                                    -- 인증분야코드
		</if>
		<if test=" THEMA != null and THEMA != '' ">
		     , THEMA = #{THEMA}                                                                -- 테마
		</if>
		<if test=" TOTQY != null and TOTQY != '' ">
		     , TOTQY = #{TOTQY}                                                                -- 총수량
		</if>
		<if test=" BGNG_YMD != null and BGNG_YMD != '' ">
		     , BGNG_YMD = #{BGNG_YMD}                                                          -- 시작일자
		</if>
		<if test=" PROGRS_STTUS_CD != null and PROGRS_STTUS_CD != '' ">
		     , PROGRS_STTUS_CD = #{PROGRS_STTUS_CD}                                            -- 진행상태코드
		</if>
		WHERE  ODR_ID = #{ODR_ID}
	</update>

	<delete id="odrDelete" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.odrDelete 
		* TB_ODR 삭제
		* @author dooresoft
		* @since 2023.02.08
		*/
		]]>
		DELETE FROM TB_ODR
		WHERE  1 = 1
		AND ODR_ID = #{ODR_ID}
	</delete>
	
	<select id="odrCheckKey" parameterType="map" timeout="0" resultType="map" useCache="false">
		<![CDATA[
		/*
		*
		* safety.odrCheckKey 
		* TB_ODR 조회
		* @author dooresoft
		* @since 2023.02.08
		*/
		]]>
        SELECT ODR_YR
              ,ODR_DIV_CD
              ,ODR
              ,CERT_FLD_CD
        FROM   TB_ODR
	</select>	
	
	<select id="schdulSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		<![CDATA[
		/*
		*
		* safety.schdulSelect 
		* TB_SCHDUL 조회
		* @author dooresoft
		* @since 2023.02.08
		*/
		]]>
        SELECT  SCHDUL_ID                                         -- 일정ID
              , ODR_ID                                            -- 차수ID
              , SCHDUL_CD                                         -- 일정코드
              , SCHDUL_NM                                         -- 일정명
              , PLAN_YMD                                          -- 계획일자
              , RM                                                -- 비고
              , SN                                                -- 순번              
        FROM TB_SCHDUL A, CODE_INFO B
        WHERE A.SCHDUL_CD = B.CODE_ID
        AND   B.GROUP_ID = 'SCHDUL_CD'
        <if test=" ODR_ID != null and ODR_ID != '' " >
        AND ODR_ID = #{ODR_ID}
        </if>
        ORDER BY SN, PLAN_YMD
	</select>
	
	<insert id="schdulSelectInsert" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.schdulSelectInsert 
		* TB_SCHDUL 등록
		* @author dooresoft
		* @since 2023.02.08
		*/
		]]>	
		INSERT INTO TB_SCHDUL
		     (	SCHDUL_ID                                         -- 일정ID
              , ODR_ID                                            -- 차수ID
              , SCHDUL_CD                                         -- 일정코드
              , SCHDUL_NM                                         -- 일정명
              , PLAN_YMD                                          -- 계획일자
              , RM                                                -- 비고
              , SN												  -- 순번		  
		      , REG_DT                                            -- 등록일시
              , RGTR_ID)                                          -- 등록자ID
		SELECT  FN_GET_KEY('TB_SCHDUL', 'SCH')
	          , #{ODR_ID}
	          , CODE_ID
	          , CODE_NM
	          , NULL
			  , NULL
			  , CODE_ORDER
			  , NOW()
			  , #{_sessionUserCd}                               
		FROM    CODE_INFO 
		WHERE   GROUP_ID = 'SCHDUL_CD' 
		AND     USE_YN = 'Y' 
		AND     CODE_ID <![CDATA[<>]]> '00000'
	
	</insert>

	<insert id="schdulInsert" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.schdulInsert 
		* TB_SCHDUL 등록
		* @author dooresoft
		* @since 2023.02.08
		*/
		]]>
		INSERT INTO TB_SCHDUL (
                SCHDUL_ID                                         -- 일정ID
              , ODR_ID                                            -- 차수ID
              , SCHDUL_CD                                         -- 일정코드
              , SCHDUL_NM                                         -- 일정명
              , PLAN_YMD                                          -- 계획일자
              , RM                                                -- 비고
              , SN                                                -- 순번              
              , REG_DT                                            -- 등록일시
              , RGTR_ID)                                          -- 등록자ID
		VALUES (
                FN_GET_KEY('TB_SCHDUL', 'SCH')                    -- 일정ID
              , #{ODR_ID}                                         -- 차수ID
              , #{SCHDUL_CD}                                      -- 일정코드
              , #{SCHDUL_NM}                                      -- 일정명
              , #{PLAN_YMD}                                       -- 계획일자
              , #{RM}                                             -- 비고
              , #{SN}                                             -- 순번              
              , NOW()                                             -- 등록일시
              , #{_sessionUserCd}                                 -- 등록자ID
		)
	</insert>

	<update id="schdulUpdate" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.schdulUpdate 
		* TB_SCHDUL 수정
		* @author dooresoft
		* @since 2023.02.08
		*/
		]]>
		UPDATE TB_SCHDUL
		SET    MDFCN_DT =NOW()
		     , MDFR_ID = #{_sessionUserCd}
		<if test=" ODR_ID != null and ODR_ID != '' ">
		     , ODR_ID = #{ODR_ID}                                                              -- 차수ID
		</if>
		<if test=" SCHDUL_CD != null and SCHDUL_CD != '' ">
		     , SCHDUL_CD = #{SCHDUL_CD}                                                        -- 일정코드
		</if>
		<if test=" SCHDUL_NM != null and SCHDUL_NM != '' ">
		     , SCHDUL_NM = #{SCHDUL_NM}                                                        -- 일정명
		</if>
		<if test=" PLAN_YMD != null and PLAN_YMD != '' ">
		     , PLAN_YMD = #{PLAN_YMD}                                                          -- 계획일자
		</if>
		<if test=" RM != null and RM != '' ">
		     , RM = #{RM}                                                                      -- 비고
		</if>
		<if test=" SN != null and SN != '' ">
		     , SN = #{SN}                                                                      -- 순번
		</if>		
		WHERE  SCHDUL_ID = #{SCHDUL_ID}
	</update>

	<delete id="schdulDelete" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.schdulDelete 
		* TB_SCHDUL 삭제
		* @author dooresoft
		* @since 2023.02.08
		*/
		]]>
		DELETE FROM TB_SCHDUL
		WHERE  1 = 1
		AND SCHDUL_ID = #{SCHDUL_ID}
	</delete>	
	
	<select id="selectId" parameterType="map" timeout="0" resultType="map" useCache="false">
		<![CDATA[
		/*
		 *
		 * safety.selectId
		 * ODR_ID값 생성
		 * @author dooresoft
		 * @since 2023.02.24
		 */
		]]>
		SELECT FN_GET_KEY(#{PARAM1}, #{PARAM2}) RETURN_VALUE
	</select>
	
	
	<select id="odrGdsList" parameterType="map" timeout="0" resultType="map" useCache="false">		
		<![CDATA[
		/*
		*
		* safety.odrGdsList 
		* TB_ODR_GDS 조회
		* @author dooresoft
		* @since 2023.02.14
		*/
		]]>
        SELECT A.DETAIL_GDS_ID
	   	     , FN_GET_COM_NM('GDS_CD', A.GDS_CD) GDS_NM
	   	     , A.GDS_CD
	   		 , A.CERT_FLD_CD
	   		 , A.CERT_KND_CD
	   		 , A.DETAIL_GDS_NM
	   		 , A.STTY_PRDUCT_CL_CD
	   		 , #{ODR_ID} ODR_ID
	   		 , CASE WHEN B.DETAIL_GDS_ID IS NULL THEN 0  ELSE 1 END CHK
        FROM   TB_GDS A LEFT OUTER JOIN TB_ODR_GDS  B ON A.DETAIL_GDS_ID = B.DETAIL_GDS_ID AND B.ODR_ID = #{ODR_ID}
        WHERE 1 = 1
       <if test=" CERT_FLD_CD != null and CERT_FLD_CD != '' " >        
        AND   A.CERT_FLD_CD = #{CERT_FLD_CD}
        </if>
        <if test=" USE_YN != null and USE_YN != '' " >
        AND   A.USE_YN = #{USE_YN}
        </if>
		<if test=" GDS_NM != null and GDS_NM != '' " >
        AND   FN_GET_COM_NM('GDS_CD', A.GDS_CD) LIKE CONCAT('%', #{GDS_NM}, '%')
        </if>
        <if test=" DETAIL_GDS_NM != null and DETAIL_GDS_NM != '' " >
        AND   A.DETAIL_GDS_NM LIKE CONCAT('%', #{DETAIL_GDS_NM}, '%')
        </if>
        ORDER BY FN_GET_COM_SN('CERT_KND_CD', A.CERT_KND_CD),  A.SN
	</select>
	
	<select id="odrGdsInstList" parameterType="map" timeout="0" resultType="map" useCache="false">		
		<![CDATA[
		/*
		*
		* safety.odrGdsInstList 
		* 시험가능기관 리스트 조회
		* @author dooresoft
		* @since 2023.02.14
		*/
		]]>	
		SELECT A.TEST_INST_CD, B.CODE_NM
		FROM (
			SELECT DISTINCT B.TEST_INST_CD
			FROM   TB_ODR_GDS A, TB_TEST_POSBL_INST B
			WHERE  A.DETAIL_GDS_ID = B.DETAIL_GDS_ID
			AND    A.ODR_ID = #{ODR_ID}
			UNION  
			SELECT DISTINCT TEST_INST_CD
			FROM   VW_ODR_GDS
			WHERE  ODR_ID = #{ODR_ID}
			<![CDATA[
			AND    (IFNULL(POSBL_QY, 0) <> 0 OR IFNULL(PLAN_QY, 0) <> 0)
			]]>		
		) A, CODE_INFO B
		WHERE A.TEST_INST_CD = B.CODE_ID
		AND     B.GROUP_ID = 'TEST_INST_CD'
		ORDER BY CAST(B.CODE_ORDER AS UNSIGNED)	
	</select>	
	
	<select id="odrGdsSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		<![CDATA[
		/*
		*
		* safety.odrGdsSelect 
		* TB_ODR_GDS 조회
		* @author dooresoft
		* @since 2023.02.14
		*/
		]]>
		<![CDATA[
        SELECT  A.ODR_ID                                            -- 차수ID
        	  , B.GDS_CD                                            -- 폼목코드
        	  , @ROW_NO := IF(@PRE_CD = B.GDS_CD, @ROW_NO + 1, 1) AS ROW_ODR 
        	  , @PRE_CD := B.GDS_CD AS PRE_GDS_CD
        	  , CASE WHEN @ROW_NO = 1 THEN A.GDS_PLAN_QY ELSE 0 END AS GDS_PLAN_TOT_QY
        	  , FN_GET_COM_NM('GDS_CD', B.GDS_CD) GDS_NM            -- 품목명
              , A.DETAIL_GDS_ID                                     -- 세부품목ID
              , B.DETAIL_GDS_NM                                     -- 세부품목명
              , B.CERT_FLD_CD										-- 인증분야코드
              , FN_GET_COM_NM('CERT_FLD_CD', B.CERT_FLD_CD) CERT_FLD_NM        -- 인증분야명
              , B.CERT_KND_CD										-- 인증종류코드
              , FN_GET_COM_NM('CERT_KND_CD', B.CERT_KND_CD) CERT_KND_NM        -- 인증코드명
              , A.GDS_PLAN_QY                                       -- 품목계획수량
              , A.GOAL_QY                                           -- 목표수량
              , A.POSBL_QY                                          -- 가능수량
              , A.PLAN_QY                                           -- 계획수량
              , CASE WHEN (SELECT COUNT(*) FROM TB_TEST_POSBL_INST SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.TEST_INST_CD = 'KCL') > 0 
                       OR (SELECT COUNT(*) FROM VW_ODR_GDS SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.ODR_ID = A.ODR_ID AND SA.TEST_INST_CD = 'KCL' AND  (SA.POSBL_QY > 0 OR SA.PLAN_QY > 0)) > 0
                THEN 1 ELSE 0 END KCL_EDIT_YN
              , A.KCL_POSBL_QY                                      -- KCL가능수량
              , A.KCL_PLAN_QY                                       -- KCL계획수량
              , A.KCL_POSBL_YN_CD                                   -- KCL가능여부코드
              , A.KCL_IMPRTY_BGNDE                                  -- KCL불가시작일
              , A.KCL_IMPRTY_ENDDE                                  -- KCL불가종료일
              , A.KCL_RM                                            -- KCL비고              
              , CASE WHEN (SELECT COUNT(*) FROM TB_TEST_POSBL_INST SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.TEST_INST_CD = 'KTR') > 0
                       OR (SELECT COUNT(*) FROM VW_ODR_GDS SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.ODR_ID = A.ODR_ID AND SA.TEST_INST_CD = 'KTR' AND  (SA.POSBL_QY > 0 OR SA.PLAN_QY > 0)) > 0
                THEN 1 ELSE 0 END KTR_EDIT_YN
              , A.KTR_POSBL_QY                                      -- KTR가능수량
              , A.KTR_PLAN_QY                                       -- KTR계획수량
              , A.KTR_POSBL_YN_CD                                   -- KTR가능여부코드
              , A.KTR_IMPRTY_BGNDE                                  -- KTR불가시작일
              , A.KTR_IMPRTY_ENDDE                                  -- KTR불가종료일
              , A.KTR_RM                                            -- KTR비고              
              , CASE WHEN (SELECT COUNT(*) FROM TB_TEST_POSBL_INST SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.TEST_INST_CD = 'KTC') > 0 
              		   OR (SELECT COUNT(*) FROM VW_ODR_GDS SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.ODR_ID = A.ODR_ID AND SA.TEST_INST_CD = 'KTC' AND  (SA.POSBL_QY > 0 OR SA.PLAN_QY > 0)) > 0
              	THEN 1 ELSE 0 END KTC_EDIT_YN
              , A.KTC_POSBL_QY                                      -- KTC가능수량
              , A.KTC_PLAN_QY                                       -- KTC계획수량
              , A.KTC_POSBL_YN_CD                                   -- KTC가능여부코드
              , A.KTC_IMPRTY_BGNDE                                  -- KTC불가시작일
              , A.KTC_IMPRTY_ENDDE                                  -- KTC불가종료일
              , A.KTC_RM                                            -- KTC비고              
              , CASE WHEN (SELECT COUNT(*) FROM TB_TEST_POSBL_INST SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.TEST_INST_CD = 'KATRI') > 0
              		   OR (SELECT COUNT(*) FROM VW_ODR_GDS SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.ODR_ID = A.ODR_ID AND SA.TEST_INST_CD = 'KATRI' AND  (SA.POSBL_QY > 0 OR SA.PLAN_QY > 0)) > 0 
              	THEN 1 ELSE 0 END KATRI_EDIT_YN
              , A.KATRI_POSBL_QY                                    -- KATRI_가능수량
              , A.KATRI_PLAN_QY                                     -- KATRI_계획수량
              , A.KATRI_POSBL_YN_CD                                 -- KATRI가능여부코드
              , A.KATRI_IMPRTY_BGNDE                                -- KATRI불가시작일
              , A.KATRI_IMPRTY_ENDDE                                -- KATRI불가종료일
              , A.KATRI_RM                                          -- KATRI비고              
              , CASE WHEN (SELECT COUNT(*) FROM TB_TEST_POSBL_INST SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.TEST_INST_CD = 'FITI') > 0 
              		   OR (SELECT COUNT(*) FROM VW_ODR_GDS SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.ODR_ID = A.ODR_ID AND SA.TEST_INST_CD = 'FITI' AND  (SA.POSBL_QY > 0 OR SA.PLAN_QY > 0)) > 0
              	THEN 1 ELSE 0 END FITI_EDIT_YN
              , A.FITI_POSBL_QY                                     -- FITI_가능수량
              , A.FITI_PLAN_QY                                      -- FITI_계획수량
              , A.FITI_POSBL_YN_CD                                  -- FITI가능여부코드
              , A.FITI_IMPRTY_BGNDE                                 -- FITI불가시작일
              , A.FITI_IMPRTY_ENDDE                                 -- FITI불가종료일
              , A.FITI_RM                                           -- FITI비고              
              , CASE WHEN (SELECT COUNT(*) FROM TB_TEST_POSBL_INST SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.TEST_INST_CD = 'KOTITI') > 0
              		   OR (SELECT COUNT(*) FROM VW_ODR_GDS SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.ODR_ID = A.ODR_ID AND SA.TEST_INST_CD = 'KOTITI' AND  (SA.POSBL_QY > 0 OR SA.PLAN_QY > 0)) > 0 
              	THEN 1 ELSE 0 END KOTITI_EDIT_YN
              , A.KOTITI_POSBL_QY                                   -- KOTITI_가능수량
              , A.KOTITI_PLAN_QY                                    -- KOTITI_계획수량
              , A.KOTITI_POSBL_YN_CD                                -- KOTITI가능여부코드
              , A.KOTITI_IMPRTY_BGNDE                               -- KOTITI불가시작일
              , A.KOTITI_IMPRTY_ENDDE                               -- KOTITI불가종료일
              , A.KOTITI_RM                                         -- KOTITI비고              
              , CASE WHEN (SELECT COUNT(*) FROM TB_TEST_POSBL_INST SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.TEST_INST_CD = 'KTL') > 0
              		   OR (SELECT COUNT(*) FROM VW_ODR_GDS SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.ODR_ID = A.ODR_ID AND SA.TEST_INST_CD = 'KTL' AND  (SA.POSBL_QY > 0 OR SA.PLAN_QY > 0)) > 0 
              	THEN 1 ELSE 0 END KTL_EDIT_YN
              , A.KTL_POSBL_QY                                      -- KTL_가능수량
              , A.KTL_PLAN_QY                                       -- KTL_계획수량
              , A.KTL_POSBL_YN_CD                                   -- KTL가능여부코드
              , A.KTL_IMPRTY_BGNDE                                  -- KTL불가시작일
              , A.KTL_IMPRTY_ENDDE                                  -- KTL불가종료일
              , A.KTL_RM                                            -- KTL비고              
              , CASE WHEN (SELECT COUNT(*) FROM TB_TEST_POSBL_INST SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.TEST_INST_CD = 'INST_1') > 0
              		   OR (SELECT COUNT(*) FROM VW_ODR_GDS SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.ODR_ID = A.ODR_ID AND SA.TEST_INST_CD = 'INST_1' AND  (SA.POSBL_QY > 0 OR SA.PLAN_QY > 0)) > 0 
              	THEN 1 ELSE 0 END INST_1_EDIT_YN
              , A.INST_1_POSBL_QY                                   -- 기관1_가능수량
              , A.INST_1_PLAN_QY                                    -- 기관1_계획수량
              , A.INST_1_POSBL_YN_CD                                -- 기관1가능여부코드
              , A.INST_1_IMPRTY_BGNDE                               -- 기관1불가시작일
              , A.INST_1_IMPRTY_ENDDE                               -- 기관1불가종료일
              , A.INST_1_RM                                         -- 기관1비고              
              , CASE WHEN (SELECT COUNT(*) FROM TB_TEST_POSBL_INST SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.TEST_INST_CD = 'INST_2') > 0 
              		   OR (SELECT COUNT(*) FROM VW_ODR_GDS SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.ODR_ID = A.ODR_ID AND SA.TEST_INST_CD = 'INST_2' AND  (SA.POSBL_QY > 0 OR SA.PLAN_QY > 0)) > 0
              	THEN 1 ELSE 0 END INST_2_EDIT_YN
              , A.INST_2_POSBL_QY                                   -- 기관2_가능수량
              , A.INST_2_PLAN_QY                                    -- 기관2_계획수량
              , A.INST_2_POSBL_YN_CD                                -- 기관2가능여부코드
              , A.INST_2_IMPRTY_BGNDE                               -- 기관2불가시작일
              , A.INST_2_IMPRTY_ENDDE                               -- 기관2불가종료일
              , A.INST_2_RM                                         -- 기관2비고             
              , CASE WHEN (SELECT COUNT(*) FROM TB_TEST_POSBL_INST SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.TEST_INST_CD = 'INST_3') > 0 
              		   OR (SELECT COUNT(*) FROM VW_ODR_GDS SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.ODR_ID = A.ODR_ID AND SA.TEST_INST_CD = 'INST_3' AND  (SA.POSBL_QY > 0 OR SA.PLAN_QY > 0)) > 0
              	THEN 1 ELSE 0 END INST_3_EDIT_YN
              , A.INST_3_POSBL_QY                                   -- 기관3_가능수량
              , A.INST_3_PLAN_QY                                    -- 기관3_계획수량
              , A.INST_3_POSBL_YN_CD                                -- 기관3가능여부코드
              , A.INST_3_IMPRTY_BGNDE                               -- 기관3불가시작일
              , A.INST_3_IMPRTY_ENDDE                               -- 기관3불가종료일
              , A.INST_3_RM                                         -- 기관3비고              
              , CASE WHEN (SELECT COUNT(*) FROM TB_TEST_POSBL_INST SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.TEST_INST_CD = 'INST_4') > 0 
              		   OR (SELECT COUNT(*) FROM VW_ODR_GDS SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.ODR_ID = A.ODR_ID AND SA.TEST_INST_CD = 'INST_4' AND  (SA.POSBL_QY > 0 OR SA.PLAN_QY > 0)) > 0	
              	THEN 1 ELSE 0 END INST_4_EDIT_YN
              , A.INST_4_POSBL_QY                                   -- 기관4_가능수량
              , A.INST_4_PLAN_QY                                    -- 기관4_계획수량
              , A.INST_4_POSBL_YN_CD                                -- 기관4가능여부코드
              , A.INST_4_IMPRTY_BGNDE                               -- 기관4불가시작일
              , A.INST_4_IMPRTY_ENDDE                               -- 기관4불가종료일
              , A.INST_4_RM                                         -- 기관4비고              
              , CASE WHEN (SELECT COUNT(*) FROM TB_TEST_POSBL_INST SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.TEST_INST_CD = 'INST_5') > 0
              		   OR (SELECT COUNT(*) FROM VW_ODR_GDS SA WHERE SA.DETAIL_GDS_ID = A.DETAIL_GDS_ID AND SA.ODR_ID = A.ODR_ID AND SA.TEST_INST_CD = 'INST_5' AND  (SA.POSBL_QY > 0 OR SA.PLAN_QY > 0)) > 0 
              	THEN 1 ELSE 0 END INST_5_EDIT_YN
              , A.INST_5_POSBL_QY                                   -- 기관5_가능수량
              , A.INST_5_PLAN_QY                                    -- 기관5_계획수량
              , A.INST_5_POSBL_YN_CD                                -- 기관5가능여부코드
              , A.INST_5_IMPRTY_BGNDE                               -- 기관5불가시작일
              , A.INST_5_IMPRTY_ENDDE                               -- 기관5불가종료일
              , A.INST_5_RM                                         -- 기관5비고
        ]]>              
        FROM    TB_ODR_GDS A, TB_GDS B, (SELECT @PRE_CD := '')  X, (SELECT @ROW_NO := 0) Y 
        WHERE   1 = 1
        AND     A.DETAIL_GDS_ID = B.DETAIL_GDS_ID
        <if test=" ODR_ID != null and ODR_ID != '' " >
        AND     A.ODR_ID = #{ODR_ID}
        </if>
        <if test=" DETAIL_GDS_ID != null and DETAIL_GDS_ID != '' " >
        AND     A.DETAIL_GDS_ID = #{DETAIL_GDS_ID}
        </if>
        <if test=" TEST_INST_CD != null and TEST_INST_CD != '' " >
        AND     A.DETAIL_GDS_ID IN (SELECT DISTINCT B.DETAIL_GDS_ID
									FROM   TB_ODR_GDS A, TB_TEST_POSBL_INST B
									WHERE  A.DETAIL_GDS_ID = B.DETAIL_GDS_ID
									AND    A.ODR_ID = #{ODR_ID}
									AND    TEST_INST_CD = #{TEST_INST_CD}
									UNION  
									SELECT DISTINCT DETAIL_GDS_ID
									FROM   VW_ODR_GDS
									WHERE  ODR_ID = #{ODR_ID}
									AND    TEST_INST_CD = #{TEST_INST_CD}
									<![CDATA[
									AND    (IFNULL(POSBL_QY, 0) <> 0 OR IFNULL(PLAN_QY, 0) <> 0)
									]]>)  
        </if>
        ORDER BY FN_GET_COM_SN('CERT_KND_CD', B.CERT_KND_CD), FN_GET_COM_SN('GDS_CD', B.GDS_CD), B.SN 
	</select>

	<insert id="odrGdsInsert" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.odrGdsInsert 
		* TB_ODR_GDS 등록
		* @author dooresoft
		* @since 2023.02.14
		*/
		]]>
		INSERT INTO TB_ODR_GDS (
                ODR_ID                                            -- 차수ID
              , DETAIL_GDS_ID                                     -- 세부품목ID
              , GDS_PLAN_QY                                       -- 품목계획수량
              , GOAL_QY                                           -- 목표수량
              , POSBL_QY                                          -- 가능수량
              , PLAN_QY                                           -- 계획수량
              , KCL_POSBL_QY                                      -- KCL가능수량
              , KCL_PLAN_QY                                       -- KCL계획수량
              , KCL_POSBL_YN_CD                                   -- KCL가능여부코드
              , KCL_IMPRTY_BGNDE                                  -- KCL불가시작일
              , KCL_IMPRTY_ENDDE                                  -- KCL불가종료일
              , KCL_RM                                            -- KCL비고
              , KTR_POSBL_QY                                      -- KTR가능수량
              , KTR_PLAN_QY                                       -- KTR계획수량
              , KTR_POSBL_YN_CD                                   -- KTR가능여부코드
              , KTR_IMPRTY_BGNDE                                  -- KTR불가시작일
              , KTR_IMPRTY_ENDDE                                  -- KTR불가종료일
              , KTR_RM                                            -- KTR비고
              , KTC_POSBL_QY                                      -- KTC가능수량
              , KTC_PLAN_QY                                       -- KTC계획수량
              , KTC_POSBL_YN_CD                                   -- KTC가능여부코드
              , KTC_IMPRTY_BGNDE                                  -- KTC불가시작일
              , KTC_IMPRTY_ENDDE                                  -- KTC불가종료일
              , KTC_RM                                            -- KTC비고
              , KATRI_POSBL_QY                                    -- KATRI가능수량
              , KATRI_PLAN_QY                                     -- KATRI계획수량
              , KATRI_POSBL_YN_CD                                 -- KATRI가능여부코드
              , KATRI_IMPRTY_BGNDE                                -- KATRI불가시작일
              , KATRI_IMPRTY_ENDDE                                -- KATRI불가종료일
              , KATRI_RM                                          -- KATRI비고
              , FITI_POSBL_QY                                     -- FITI가능수량
              , FITI_PLAN_QY                                      -- FITI계획수량
              , FITI_POSBL_YN_CD                                  -- FITI가능여부코드
              , FITI_IMPRTY_BGNDE                                 -- FITI불가시작일
              , FITI_IMPRTY_ENDDE                                 -- FITI불가종료일
              , FITI_RM                                           -- FITI비고
              , KOTITI_POSBL_QY                                   -- KOTITI가능수량
              , KOTITI_PLAN_QY                                    -- KOTITI계획수량
              , KOTITI_POSBL_YN_CD                                -- KOTITI가능여부코드
              , KOTITI_IMPRTY_BGNDE                               -- KOTITI불가시작일
              , KOTITI_IMPRTY_ENDDE                               -- KOTITI불가종료일
              , KOTITI_RM                                         -- KOTITI비고
              , KTL_POSBL_QY                                      -- KTL가능수량
              , KTL_PLAN_QY                                       -- KTL계획수량
              , KTL_POSBL_YN_CD                                   -- KTL가능여부코드
              , KTL_IMPRTY_BGNDE                                  -- KTL불가시작일
              , KTL_IMPRTY_ENDDE                                  -- KTL불가종료일
              , KTL_RM                                            -- KTL비고
              , INST_1_POSBL_QY                                   -- 기관1가능수량
              , INST_1_PLAN_QY                                    -- 기관1계획수량
              , INST_1_POSBL_YN_CD                                -- 기관1가능여부코드
              , INST_1_IMPRTY_BGNDE                               -- 기관1불가시작일
              , INST_1_IMPRTY_ENDDE                               -- 기관1불가종료일
              , INST_1_RM                                         -- 기관1비고
              , INST_2_POSBL_QY                                   -- 기관2가능수량
              , INST_2_PLAN_QY                                    -- 기관2계획수량
              , INST_2_POSBL_YN_CD                                -- 기관2가능여부코드
              , INST_2_IMPRTY_BGNDE                               -- 기관2불가시작일
              , INST_2_IMPRTY_ENDDE                               -- 기관2불가종료일
              , INST_2_RM                                         -- 기관2비고
              , INST_3_POSBL_QY                                   -- 기관3가능수량
              , INST_3_PLAN_QY                                    -- 기관3계획수량
              , INST_3_POSBL_YN_CD                                -- 기관3가능여부코드
              , INST_3_IMPRTY_BGNDE                               -- 기관3불가시작일
              , INST_3_IMPRTY_ENDDE                               -- 기관3불가종료일
              , INST_3_RM                                         -- 기관3비고
              , INST_4_POSBL_QY                                   -- 기관4가능수량
              , INST_4_PLAN_QY                                    -- 기관4계획수량
              , INST_4_POSBL_YN_CD                                -- 기관4가능여부코드
              , INST_4_IMPRTY_BGNDE                               -- 기관4불가시작일
              , INST_4_IMPRTY_ENDDE                               -- 기관4불가종료일
              , INST_4_RM                                         -- 기관4비고
              , INST_5_POSBL_QY                                   -- 기관5가능수량
              , INST_5_PLAN_QY                                    -- 기관5계획수량
              , INST_5_POSBL_YN_CD                                -- 기관5가능여부코드
              , INST_5_IMPRTY_BGNDE                               -- 기관5불가시작일
              , INST_5_IMPRTY_ENDDE                               -- 기관5불가종료일
              , INST_5_RM                                         -- 기관5비고
              , REG_DT                                            -- 등록일시
              , RGTR_ID)                                          -- 등록자ID
		VALUES (
                #{ODR_ID}                                         -- 차수ID
              , #{DETAIL_GDS_ID}                                  -- 세부품목ID
              , #{GDS_PLAN_QY}                                    -- 품목계획수량
              , #{GOAL_QY}                                        -- 목표수량
              , #{POSBL_QY}                                       -- 가능수량
              , #{PLAN_QY}                                        -- 계획수량
              , #{KCL_POSBL_QY}                                   -- KCL가능수량
              , #{KCL_PLAN_QY}                                    -- KCL계획수량
              , #{KCL_POSBL_YN_CD}                                -- KCL가능여부코드
              , #{KCL_IMPRTY_BGNDE}                               -- KCL불가시작일
              , #{KCL_IMPRTY_ENDDE}                               -- KCL불가종료일
              , #{KCL_RM}                                         -- KCL비고
              , #{KTR_POSBL_QY}                                   -- KTR가능수량
              , #{KTR_PLAN_QY}                                    -- KTR계획수량
              , #{KTR_POSBL_YN_CD}                                -- KTR가능여부코드
              , #{KTR_IMPRTY_BGNDE}                               -- KTR불가시작일
              , #{KTR_IMPRTY_ENDDE}                               -- KTR불가종료일
              , #{KTR_RM}                                         -- KTR비고
              , #{KTC_POSBL_QY}                                   -- KTC가능수량
              , #{KTC_PLAN_QY}                                    -- KTC계획수량
              , #{KTC_POSBL_YN_CD}                                -- KTC가능여부코드
              , #{KTC_IMPRTY_BGNDE}                               -- KTC불가시작일
              , #{KTC_IMPRTY_ENDDE}                               -- KTC불가종료일
              , #{KTC_RM}                                         -- KTC비고
              , #{KATRI_POSBL_QY}                                 -- KATRI가능수량
              , #{KATRI_PLAN_QY}                                  -- KATRI계획수량
              , #{KATRI_POSBL_YN_CD}                              -- KATRI가능여부코드
              , #{KATRI_IMPRTY_BGNDE}                             -- KATRI불가시작일
              , #{KATRI_IMPRTY_ENDDE}                             -- KATRI불가종료일
              , #{KATRI_RM}                                       -- KATRI비고
              , #{FITI_POSBL_QY}                                  -- FITI가능수량
              , #{FITI_PLAN_QY}                                   -- FITI계획수량
              , #{FITI_POSBL_YN_CD}                               -- FITI가능여부코드
              , #{FITI_IMPRTY_BGNDE}                              -- FITI불가시작일
              , #{FITI_IMPRTY_ENDDE}                              -- FITI불가종료일
              , #{FITI_RM}                                        -- FITI비고
              , #{KOTITI_POSBL_QY}                                -- KOTITI가능수량
              , #{KOTITI_PLAN_QY}                                 -- KOTITI계획수량
              , #{KOTITI_POSBL_YN_CD}                             -- KOTITI가능여부코드
              , #{KOTITI_IMPRTY_BGNDE}                            -- KOTITI불가시작일
              , #{KOTITI_IMPRTY_ENDDE}                            -- KOTITI불가종료일
              , #{KOTITI_RM}                                      -- KOTITI비고
              , #{KTL_POSBL_QY}                                   -- KTL가능수량
              , #{KTL_PLAN_QY}                                    -- KTL계획수량
              , #{KTL_POSBL_YN_CD}                                -- KTL가능여부코드
              , #{KTL_IMPRTY_BGNDE}                               -- KTL불가시작일
              , #{KTL_IMPRTY_ENDDE}                               -- KTL불가종료일
              , #{KTL_RM}                                         -- KTL비고
              , #{INST_1_POSBL_QY}                                -- 기관1가능수량
              , #{INST_1_PLAN_QY}                                 -- 기관1계획수량
              , #{INST_1_POSBL_YN_CD}                             -- 기관1가능여부코드
              , #{INST_1_IMPRTY_BGNDE}                            -- 기관1불가시작일
              , #{INST_1_IMPRTY_ENDDE}                            -- 기관1불가종료일
              , #{INST_1_RM}                                      -- 기관1비고
              , #{INST_2_POSBL_QY}                                -- 기관2가능수량
              , #{INST_2_PLAN_QY}                                 -- 기관2계획수량
              , #{INST_2_POSBL_YN_CD}                             -- 기관2가능여부코드
              , #{INST_2_IMPRTY_BGNDE}                            -- 기관2불가시작일
              , #{INST_2_IMPRTY_ENDDE}                            -- 기관2불가종료일
              , #{INST_2_RM}                                      -- 기관2비고
              , #{INST_3_POSBL_QY}                                -- 기관3가능수량
              , #{INST_3_PLAN_QY}                                 -- 기관3계획수량
              , #{INST_3_POSBL_YN_CD}                             -- 기관3가능여부코드
              , #{INST_3_IMPRTY_BGNDE}                            -- 기관3불가시작일
              , #{INST_3_IMPRTY_ENDDE}                            -- 기관3불가종료일
              , #{INST_3_RM}                                      -- 기관3비고
              , #{INST_4_POSBL_QY}                                -- 기관4가능수량
              , #{INST_4_PLAN_QY}                                 -- 기관4계획수량
              , #{INST_4_POSBL_YN_CD}                             -- 기관4가능여부코드
              , #{INST_4_IMPRTY_BGNDE}                            -- 기관4불가시작일
              , #{INST_4_IMPRTY_ENDDE}                            -- 기관4불가종료일
              , #{INST_4_RM}                                      -- 기관4비고
              , #{INST_5_POSBL_QY}                                -- 기관5가능수량
              , #{INST_5_PLAN_QY}                                 -- 기관5계획수량
              , #{INST_5_POSBL_YN_CD}                             -- 기관5가능여부코드
              , #{INST_5_IMPRTY_BGNDE}                            -- 기관5불가시작일
              , #{INST_5_IMPRTY_ENDDE}                            -- 기관5불가종료일
              , #{INST_5_RM}                                      -- 기관5비고
              , NOW()                                             -- 등록일시
              , #{_sessionUserCd}                                 -- 등록자ID
		)
	</insert>

	<update id="odrGdsUpdate" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.odrGdsUpdate 
		* TB_ODR_GDS 수정
		* @author dooresoft
		* @since 2023.02.14
		*/
		]]>
		UPDATE TB_ODR_GDS
		SET    MDFCN_DT =NOW()
		     , MDFR_ID = #{_sessionUserCd}
		<if test=" GDS_PLAN_QY != null ">
		     , GDS_PLAN_QY = CASE WHEN LENGTH(#{GDS_PLAN_QY}) = 0 THEN NULL ELSE #{GDS_PLAN_QY} END                                    -- 품목계획수량
		</if>
		<if test=" GOAL_QY != null ">
		     , GOAL_QY = CASE WHEN LENGTH(#{GOAL_QY}) = 0 THEN NULL ELSE #{GOAL_QY} END                                                -- 목표수량
		</if>
		<if test=" POSBL_QY != null ">
		     , POSBL_QY = CASE WHEN LENGTH(#{POSBL_QY}) = 0 THEN NULL ELSE #{POSBL_QY} END                                             -- 가능수량
		</if>
		<if test=" PLAN_QY != null ">
		     , PLAN_QY = CASE WHEN LENGTH(#{PLAN_QY}) = 0 THEN NULL ELSE #{PLAN_QY} END                                                -- 계획수량
		</if>
		<if test=" KCL_POSBL_QY != null ">
		     , KCL_POSBL_QY = CASE WHEN LENGTH(#{KCL_POSBL_QY}) = 0 THEN NULL ELSE #{KCL_POSBL_QY} END                                 -- KCL가능수량
		</if>
		<if test=" KCL_PLAN_QY != null ">
		     , KCL_PLAN_QY = CASE WHEN LENGTH(#{KCL_PLAN_QY}) = 0 THEN NULL ELSE #{KCL_PLAN_QY} END                                    -- KCL계획수량
		</if>
		<if test=" KCL_POSBL_YN_CD != null and KCL_POSBL_YN_CD != '' ">
		     , KCL_POSBL_YN_CD = #{KCL_POSBL_YN_CD}                                            											-- KCL가능여부코드
		</if>
		<if test=" KCL_IMPRTY_BGNDE != null ">
		     , KCL_IMPRTY_BGNDE = CASE WHEN LENGTH(#{KCL_IMPRTY_BGNDE}) = 0 THEN NULL ELSE #{KCL_IMPRTY_BGNDE} END                      -- KCL불가시작일
		</if>
		<if test=" KCL_IMPRTY_ENDDE != null ">
		     , KCL_IMPRTY_ENDDE = CASE WHEN LENGTH(#{KCL_IMPRTY_ENDDE}) = 0 THEN NULL ELSE #{KCL_IMPRTY_ENDDE} END                      -- KCL불가종료일
		</if>
		<if test=" KCL_RM != null ">
		     , KCL_RM = CASE WHEN LENGTH(#{KCL_RM}) = 0 THEN NULL ELSE #{KCL_RM} END                                                    -- KCL비고
		</if>
		<if test=" KTR_POSBL_QY != null ">
		     , KTR_POSBL_QY = CASE WHEN LENGTH(#{KTR_POSBL_QY}) = 0 THEN NULL ELSE #{KTR_POSBL_QY} END                                 -- KTR가능수량
		</if>
		<if test=" KTR_PLAN_QY != null ">
		     , KTR_PLAN_QY = CASE WHEN LENGTH(#{KTR_PLAN_QY}) = 0 THEN NULL ELSE #{KTR_PLAN_QY} END                                    -- KTR계획수량
		</if>
		<if test=" KTR_POSBL_YN_CD != null and KTR_POSBL_YN_CD != '' ">
		     , KTR_POSBL_YN_CD = #{KTR_POSBL_YN_CD}                                            											-- KTR가능여부코드
		</if>
		<if test=" KTR_IMPRTY_BGNDE != null ">
		     , KTR_IMPRTY_BGNDE = CASE WHEN LENGTH(#{KTR_IMPRTY_BGNDE}) = 0 THEN NULL ELSE #{KTR_IMPRTY_BGNDE} END  			        -- KTR불가시작일
		</if>
		<if test=" KTR_IMPRTY_ENDDE != null ">
		     , KTR_IMPRTY_ENDDE = CASE WHEN LENGTH(#{KTR_IMPRTY_ENDDE}) = 0 THEN NULL ELSE #{KTR_IMPRTY_ENDDE} END                      -- KTR불가종료일
		</if>
		<if test=" KTR_RM != null ">
		     , KTR_RM = CASE WHEN LENGTH(#{KTR_RM}) = 0 THEN NULL ELSE #{KTR_RM} END                                                    -- KTR비고
		</if>
		<if test=" KTC_POSBL_QY != null ">
		     , KTC_POSBL_QY = CASE WHEN LENGTH(#{KTC_POSBL_QY}) = 0 THEN NULL ELSE #{KTC_POSBL_QY} END                                 -- KTC가능수량
		</if>
		<if test=" KTC_PLAN_QY != null ">
		     , KTC_PLAN_QY = CASE WHEN LENGTH(#{KTC_PLAN_QY}) = 0 THEN NULL ELSE #{KTC_PLAN_QY} END                                    -- KTC계획수량
		</if>
		<if test=" KTC_POSBL_YN_CD != null and KTC_POSBL_YN_CD != '' ">
		     , KTC_POSBL_YN_CD = #{KTC_POSBL_YN_CD}                                          											  -- KTC가능여부코드
		</if>
		<if test=" KTC_IMPRTY_BGNDE != null ">
		     , KTC_IMPRTY_BGNDE = CASE WHEN LENGTH(#{KTC_IMPRTY_BGNDE}) = 0 THEN NULL ELSE #{KTC_IMPRTY_BGNDE} END                      -- KTC불가시작일
		</if>
		<if test=" KTC_IMPRTY_ENDDE != null ">
		     , KTC_IMPRTY_ENDDE = CASE WHEN LENGTH(#{KTC_IMPRTY_ENDDE}) = 0 THEN NULL ELSE #{KTC_IMPRTY_ENDDE} END                      -- KTC불가종료일
		</if>
		<if test=" KTC_RM != null ">
		     , KTC_RM = CASE WHEN LENGTH(#{KTC_RM}) = 0 THEN NULL ELSE #{KTC_RM} END                                               	    -- KTC비고
		</if>
		<if test=" KATRI_POSBL_QY != null ">
		     , KATRI_POSBL_QY = CASE WHEN LENGTH(#{KATRI_POSBL_QY}) = 0 THEN NULL ELSE #{KATRI_POSBL_QY} END                           -- KATRI가능수량
		</if>
		<if test=" KATRI_PLAN_QY != null ">
		     , KATRI_PLAN_QY = CASE WHEN LENGTH(#{KATRI_PLAN_QY}) = 0 THEN NULL ELSE #{KATRI_PLAN_QY} END                              -- KATRI계획수량
		</if>
		<if test=" KATRI_POSBL_YN_CD != null and KATRI_POSBL_YN_CD != '' ">
		     , KATRI_POSBL_YN_CD = #{KATRI_POSBL_YN_CD}                                       											 -- KATRI가능여부코드
		</if>
		<if test=" KATRI_IMPRTY_BGNDE != null ">
		     , KATRI_IMPRTY_BGNDE = CASE WHEN LENGTH(#{KATRI_IMPRTY_BGNDE}) = 0 THEN NULL ELSE #{KATRI_IMPRTY_BGNDE} END               -- KATRI불가시작일
		</if>
		<if test=" KATRI_IMPRTY_ENDDE != null ">
		     , KATRI_IMPRTY_ENDDE = CASE WHEN LENGTH(#{KATRI_IMPRTY_ENDDE}) = 0 THEN NULL ELSE #{KATRI_IMPRTY_ENDDE} END                -- KATRI불가종료일
		</if>
		<if test=" KATRI_RM != null ">
		     , KATRI_RM = CASE WHEN LENGTH(#{KATRI_RM}) = 0 THEN NULL ELSE #{KATRI_RM} END                                              -- KATRI비고
		</if>
		<if test=" FITI_POSBL_QY != null ">
		     , FITI_POSBL_QY = CASE WHEN LENGTH(#{FITI_POSBL_QY}) = 0 THEN NULL ELSE #{FITI_POSBL_QY} END                              -- FITI가능수량
		</if>
		<if test=" FITI_PLAN_QY != null ">
		     , FITI_PLAN_QY = CASE WHEN LENGTH(#{FITI_PLAN_QY}) = 0 THEN NULL ELSE #{FITI_PLAN_QY} END                                 -- FITI계획수량
		</if>
		<if test=" FITI_POSBL_YN_CD != null and FITI_POSBL_YN_CD != '' ">
		     , FITI_POSBL_YN_CD = #{FITI_POSBL_YN_CD}                                 											         -- FITI가능여부코드
		</if>
		<if test=" FITI_IMPRTY_BGNDE != null ">
		     , FITI_IMPRTY_BGNDE = CASE WHEN LENGTH(#{FITI_IMPRTY_BGNDE}) = 0 THEN NULL ELSE #{FITI_IMPRTY_BGNDE} END                    -- FITI불가시작일
		</if>
		<if test=" FITI_IMPRTY_ENDDE != null ">
		     , FITI_IMPRTY_ENDDE = CASE WHEN LENGTH(#{FITI_IMPRTY_ENDDE}) = 0 THEN NULL ELSE #{FITI_IMPRTY_ENDDE} END                    -- FITI불가종료일
		</if>
		<if test=" FITI_RM != null ">
		     , FITI_RM = CASE WHEN LENGTH(#{FITI_RM}) = 0 THEN NULL ELSE #{FITI_RM} END                                                   -- FITI비고
		</if>
		<if test=" KOTITI_POSBL_QY != null ">
		     , KOTITI_POSBL_QY = CASE WHEN LENGTH(#{KOTITI_POSBL_QY}) = 0 THEN NULL ELSE #{KOTITI_POSBL_QY} END                        -- KOTITI가능수량
		</if>
		<if test=" KOTITI_PLAN_QY != null ">
		     , KOTITI_PLAN_QY = CASE WHEN LENGTH(#{KOTITI_PLAN_QY}) = 0 THEN NULL ELSE #{KOTITI_PLAN_QY} END                           -- KOTITI계획수량
		</if>
		<if test=" KOTITI_POSBL_YN_CD != null and KOTITI_POSBL_YN_CD != '' ">
		     , KOTITI_POSBL_YN_CD = #{KOTITI_POSBL_YN_CD}       										                               -- KOTITI가능여부코드
		</if>
		<if test=" KOTITI_IMPRTY_BGNDE != null ">
		     , KOTITI_IMPRTY_BGNDE = CASE WHEN LENGTH(#{KOTITI_IMPRTY_BGNDE}) = 0 THEN NULL ELSE #{KOTITI_IMPRTY_BGNDE} END            -- KOTITI불가시작일
		</if>
		<if test=" KOTITI_IMPRTY_ENDDE != null ">
		     , KOTITI_IMPRTY_ENDDE = CASE WHEN LENGTH(#{KOTITI_IMPRTY_ENDDE}) = 0 THEN NULL ELSE #{KOTITI_IMPRTY_ENDDE} END             -- KOTITI불가종료일
		</if>
		<if test=" KOTITI_RM != null ">
		     , KOTITI_RM = CASE WHEN LENGTH(#{KOTITI_RM}) = 0 THEN NULL ELSE #{KOTITI_RM} END                                           -- KOTITI비고
		</if>
		<if test=" KTL_POSBL_QY != null ">
		     , KTL_POSBL_QY = CASE WHEN LENGTH(#{KTL_POSBL_QY}) = 0 THEN NULL ELSE #{KTL_POSBL_QY} END                                 -- KTL가능수량
		</if>
		<if test=" KTL_PLAN_QY != null ">
		     , KTL_PLAN_QY = CASE WHEN LENGTH(#{KTL_PLAN_QY}) = 0 THEN NULL ELSE #{KTL_PLAN_QY} END                                    -- KTL계획수량
		</if>
		<if test=" KTL_POSBL_YN_CD != null and KTL_POSBL_YN_CD != '' ">
		     , KTL_POSBL_YN_CD = #{KTL_POSBL_YN_CD}                                            											-- KTL가능여부코드
		</if>
		<if test=" KTL_IMPRTY_BGNDE != null ">
		     , KTL_IMPRTY_BGNDE = CASE WHEN LENGTH(#{KTL_IMPRTY_BGNDE}) = 0 THEN NULL ELSE #{KTL_IMPRTY_BGNDE} END                     -- KTL불가시작일
		</if>
		<if test=" KTL_IMPRTY_ENDDE != null ">
		     , KTL_IMPRTY_ENDDE = CASE WHEN LENGTH(#{KTL_IMPRTY_ENDDE}) = 0 THEN NULL ELSE #{KTL_IMPRTY_ENDDE} END                      -- KTL불가종료일
		</if>
		<if test=" KTL_RM != null ">
		     , KTL_RM = CASE WHEN LENGTH(#{KTL_RM}) = 0 THEN NULL ELSE #{KTL_RM} END                                                    -- KTL비고
		</if>
		<if test=" INST_1_POSBL_QY != null ">
		     , INST_1_POSBL_QY = CASE WHEN LENGTH(#{INST_1_POSBL_QY}) = 0 THEN NULL ELSE #{INST_1_POSBL_QY} END                        -- 기관1가능수량
		</if>
		<if test=" INST_1_PLAN_QY != null ">
		     , INST_1_PLAN_QY = CASE WHEN LENGTH(#{INST_1_PLAN_QY}) = 0 THEN NULL ELSE #{INST_1_PLAN_QY} END                           -- 기관1계획수량
		</if>
		<if test=" INST_1_POSBL_YN_CD != null and INST_1_POSBL_YN_CD != '' ">
		     , INST_1_POSBL_YN_CD = #{INST_1_POSBL_YN_CD}                             											         -- 기관1가능여부코드
		</if>
		<if test=" INST_1_IMPRTY_BGNDE != null ">
		     , INST_1_IMPRTY_BGNDE = CASE WHEN LENGTH(#{INST_1_IMPRTY_BGNDE}) = 0 THEN NULL ELSE #{INST_1_IMPRTY_BGNDE} END             -- 기관1불가시작일
		</if>
		<if test=" INST_1_IMPRTY_ENDDE != null ">
		     , INST_1_IMPRTY_ENDDE = CASE WHEN LENGTH(#{INST_1_IMPRTY_ENDDE}) = 0 THEN NULL ELSE #{INST_1_IMPRTY_ENDDE} END              -- 기관1불가종료일
		</if>
		<if test=" INST_1_RM != null ">
		     , INST_1_RM = CASE WHEN LENGTH(#{INST_1_RM}) = 0 THEN NULL ELSE #{INST_1_RM} END                                            -- 기관1비고
		</if>
		<if test=" INST_2_POSBL_QY != null ">
		     , INST_2_POSBL_QY = CASE WHEN LENGTH(#{INST_2_POSBL_QY}) = 0 THEN NULL ELSE #{INST_2_POSBL_QY} END                        -- 기관2가능수량
		</if>
		<if test=" INST_2_PLAN_QY != null ">
		     , INST_2_PLAN_QY = CASE WHEN LENGTH(#{INST_2_PLAN_QY}) = 0 THEN NULL ELSE #{INST_2_PLAN_QY} END                           -- 기관2계획수량
		</if>
		<if test=" INST_2_POSBL_YN_CD != null and INST_2_POSBL_YN_CD != '' ">
		     , INST_2_POSBL_YN_CD = #{INST_2_POSBL_YN_CD}                            											         -- 기관2가능여부코드
		</if>
		<if test=" INST_2_IMPRTY_BGNDE != null ">
		     , INST_2_IMPRTY_BGNDE = CASE WHEN LENGTH(#{INST_2_IMPRTY_BGNDE}) = 0 THEN NULL ELSE #{INST_2_IMPRTY_BGNDE} END             -- 기관2불가시작일
		</if>
		<if test=" INST_2_IMPRTY_ENDDE != null ">
		     , INST_2_IMPRTY_ENDDE = CASE WHEN LENGTH(#{INST_2_IMPRTY_ENDDE}) = 0 THEN NULL ELSE #{INST_2_IMPRTY_ENDDE} END    		     -- 기관2불가종료일
		</if>
		<if test=" INST_2_RM != null ">
		     , INST_2_RM = CASE WHEN LENGTH(#{INST_2_RM}) = 0 THEN NULL ELSE #{INST_2_RM} END                                            -- 기관2비고
		</if>
		<if test=" INST_3_POSBL_QY != null ">
		     , INST_3_POSBL_QY = CASE WHEN LENGTH(#{INST_3_POSBL_QY}) = 0 THEN NULL ELSE #{INST_3_POSBL_QY} END                        -- 기관3가능수량
		</if>
		<if test=" INST_3_PLAN_QY != null ">
		     , INST_3_PLAN_QY = CASE WHEN LENGTH(#{INST_3_PLAN_QY}) = 0 THEN NULL ELSE #{INST_3_PLAN_QY} END                           -- 기관3계획수량
		</if>
		<if test=" INST_3_POSBL_YN_CD != null and INST_3_POSBL_YN_CD != '' ">
		     , INST_3_POSBL_YN_CD = #{INST_3_POSBL_YN_CD}                                     											 -- 기관3가능여부코드
		</if>
		<if test=" INST_3_IMPRTY_BGNDE != null ">
		     , INST_3_IMPRTY_BGNDE = CASE WHEN LENGTH(#{INST_3_IMPRTY_BGNDE}) = 0 THEN NULL ELSE #{INST_3_IMPRTY_BGNDE} END              -- 기관3불가시작일
		</if>
		<if test=" INST_3_IMPRTY_ENDDE != null ">
		     , INST_3_IMPRTY_ENDDE = CASE WHEN LENGTH(#{INST_3_IMPRTY_ENDDE}) = 0 THEN NULL ELSE #{INST_3_IMPRTY_ENDDE} END              -- 기관3불가종료일
		</if>
		<if test=" INST_3_RM != null ">
		     , INST_3_RM = CASE WHEN LENGTH(#{INST_3_RM}) = 0 THEN NULL ELSE #{INST_3_RM} END                                            -- 기관3비고
		</if>
		<if test=" INST_4_POSBL_QY != null ">
		     , INST_4_POSBL_QY = CASE WHEN LENGTH(#{INST_4_POSBL_QY}) = 0 THEN NULL ELSE #{INST_4_POSBL_QY} END                        -- 기관4가능수량
		</if>
		<if test=" INST_4_PLAN_QY != null ">
		     , INST_4_PLAN_QY = CASE WHEN LENGTH(#{INST_4_PLAN_QY}) = 0 THEN NULL ELSE #{INST_4_PLAN_QY} END                           -- 기관4계획수량
		</if>
		<if test=" INST_4_POSBL_YN_CD != null and INST_4_POSBL_YN_CD != '' ">
		     , INST_4_POSBL_YN_CD = #{INST_4_POSBL_YN_CD}                                     											 -- 기관4가능여부코드
		</if>
		<if test=" INST_4_IMPRTY_BGNDE != null ">
		     , INST_4_IMPRTY_BGNDE = CASE WHEN LENGTH(#{INST_4_IMPRTY_BGNDE}) = 0 THEN NULL ELSE #{INST_4_IMPRTY_BGNDE} END             -- 기관4불가시작일
		</if>
		<if test=" INST_4_IMPRTY_ENDDE != null ">
		     , INST_4_IMPRTY_ENDDE = CASE WHEN LENGTH(#{INST_4_IMPRTY_ENDDE}) = 0 THEN NULL ELSE #{INST_4_IMPRTY_ENDDE} END             -- 기관4불가종료일
		</if>
		<if test=" INST_4_RM != null ">
		     , INST_4_RM = CASE WHEN LENGTH(#{INST_4_RM}) = 0 THEN NULL ELSE #{INST_4_RM} END				                            -- 기관4비고
		</if>
		<if test=" INST_5_POSBL_QY != null ">
		     , INST_5_POSBL_QY = CASE WHEN LENGTH(#{INST_5_POSBL_QY}) = 0 THEN NULL ELSE #{INST_5_POSBL_QY} END                        -- 기관5가능수량
		</if>
		<if test=" INST_5_PLAN_QY != null ">
		     , INST_5_PLAN_QY = CASE WHEN LENGTH(#{INST_5_PLAN_QY}) = 0 THEN NULL ELSE #{INST_5_PLAN_QY} END                           -- 기관5계획수량
		</if>
		<if test=" INST_5_POSBL_YN_CD != null and INST_5_POSBL_YN_CD != '' ">
		     , INST_5_POSBL_YN_CD = #{INST_5_POSBL_YN_CD}                                      -- 기관5가능여부코드
		</if>
		<if test=" INST_5_IMPRTY_BGNDE != null ">
		     , INST_5_IMPRTY_BGNDE = CASE WHEN LENGTH(#{INST_5_IMPRTY_BGNDE}) = 0 THEN NULL ELSE #{INST_5_IMPRTY_BGNDE} END             -- 기관5불가시작일
		</if>
		<if test=" INST_5_IMPRTY_ENDDE != null ">
		     , INST_5_IMPRTY_ENDDE = CASE WHEN LENGTH(#{INST_5_IMPRTY_ENDDE}) = 0 THEN NULL ELSE #{INST_5_IMPRTY_ENDDE} END             -- 기관5불가종료일
		</if>
		<if test=" INST_5_RM != null ">
		     , INST_5_RM = CASE WHEN LENGTH(#{INST_5_RM}) = 0 THEN NULL ELSE #{INST_5_RM} END                                           -- 기관5비고
		</if>
		WHERE  ODR_ID = #{ODR_ID}
		AND    DETAIL_GDS_ID = #{DETAIL_GDS_ID}
	</update> 

	<delete id="odrGdsDelete" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.odrGdsDelete 
		* TB_ODR_GDS 삭제
		* @author dooresoft
		* @since 2023.02.14
		*/
		]]>
		DELETE FROM TB_ODR_GDS
		WHERE  1 = 1
		AND ODR_ID = #{ODR_ID}
		AND DETAIL_GDS_ID = #{DETAIL_GDS_ID}
	</delete>
	
	<insert id="mkInstDdln" parameterType="map" timeout="0">
        <![CDATA[
		/*
		*
		* safety.mkInstDdln 
		* 기관마감정보 등록
		* @author dooresoft
		* @since 2023.02.28
		*/
		]]>
		<![CDATA[
			{ CALL SP_MK_INST_DDLN(#{ODR_ID}, #{_sessionUserCd}) }
		]]>
	</insert>	
	
	<select id="instDdlnSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		<![CDATA[
		/*
		*
		* safety.instDdlnSelect 
		* TB_INST_DDLN 조회
		* @author dooresoft
		* @since 2023.02.28
		*/
		]]>
        SELECT  ODR_ID                                            -- 차수ID
              , TEST_INST_CD                                      -- 시험기관코드
              , FN_GET_COM_NM('TEST_INST_CD', TEST_INST_CD) AS TEST_INST_NM -- 시험기관명
              , PROGRS_STTUS_CD                                   -- 진행상태코드
        FROM TB_INST_DDLN
        WHERE 1 = 1
        <if test=" ODR_ID != null and ODR_ID != '' " >
        AND ODR_ID = #{ODR_ID}
        </if>
        <if test=" TEST_INST_CD != null and TEST_INST_CD != '' " >
        AND TEST_INST_CD = #{TEST_INST_CD}
        </if>
        ORDER BY FN_GET_COM_SN('TEST_INST_CD', TEST_INST_CD)
	</select>	
	
	<update id="instDdlnUpdate" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.instDdlnUpdate 
		* TB_INST_DDLN 수정
		* @author dooresoft
		* @since 2023.02.28
		*/
		]]>
		UPDATE TB_INST_DDLN
		SET    MDFCN_DT =NOW()
		     , MDFR_ID = #{_sessionUserCd}
		<if test=" PROGRS_STTUS_CD != null and PROGRS_STTUS_CD != '' ">
		     , PROGRS_STTUS_CD = #{PROGRS_STTUS_CD}                                            -- 진행상태코드
		</if>
		WHERE  ODR_ID = #{ODR_ID}
		AND    TEST_INST_CD = #{TEST_INST_CD}
	</update>
	
	<select id="odrComboList" parameterType="map" timeout="0" resultType="map" useCache="false">
		<![CDATA[
		/*
		*
		* safety.odrComboList 
		* 차수 콤보 조회
		* @author dooresoft
		* @since 2023.03.03
		*/
		]]>
		SELECT ODR_ID CODE
        	,  CONCAT(FN_GET_COM_NM('ODR_DIV_CD', ODR_DIV_CD), '-', ODR, '-', FN_GET_COM_NM('CERT_FLD_CD', CERT_FLD_CD)) NAME 
        	,  CERT_FLD_CD
        	,  ODR_DIV_CD
		FROM   TB_ODR
		WHERE  ODR_YR = #{ODR_YR}
		ORDER BY BGNG_YMD DESC
	</select>
	
	<select id="selectOdrProgrs" parameterType="map" timeout="0" resultType="map" useCache="false">
		<![CDATA[
		/*
		 *
		 * safety.selectOdrProgrs
		 * 차수 진행상태 조회
		 * @author dooresoft
		 * @since 2023.03.03
		 */
		]]>
		SELECT PROGRS_STTUS_CD AS RETURN_VALUE
		FROM   TB_ODR
		WHERE  ODR_ID = #{PARAM1}
	</select>
	
	
	<select id="selectOdrGdsCombo" parameterType="map" timeout="0" resultType="map" useCache="false">
		<![CDATA[
		/*
		 *
		 * safety.selectOdrGdsCombo
		 * 차수에 해당하는 품목 조회
		 * @author dooresoft
		 * @since 2023.03.03
		 */
		]]>
		SELECT DISTINCT B.GDS_CD AS CODE
		      ,C.CODE_NM AS NAME
		FROM   TB_ODR_GDS A, TB_GDS B, CODE_INFO C
		WHERE  A.DETAIL_GDS_ID = B.DETAIL_GDS_ID
		AND    B.GDS_CD = C.CODE_ID
		AND    C.GROUP_ID = 'GDS_CD'
		AND    A.ODR_ID = #{ODR_ID}
		ORDER BY CAST(C.CODE_ORDER AS UNSIGNED)
		 
	</select>
	
	<select id="selectOdrDetailGdsCombo" parameterType="map" timeout="0" resultType="map" useCache="false">
		<![CDATA[
		/*
		 *
		 * safety.selectOdrDetailGdsCombo
		 * 차수에 해당하는 세부품목 조회
		 * @author dooresoft
		 * @since 2023.03.03
		 */
		]]>
		
		SELECT B.DETAIL_GDS_ID AS CODE
		     , B.DETAIL_GDS_NM AS NAME
		     , B.GDS_CD
		FROM   TB_ODR_GDS A, TB_GDS B, CODE_INFO C
		WHERE  A.DETAIL_GDS_ID = B.DETAIL_GDS_ID
		AND    B.GDS_CD = C.CODE_ID
		AND    C.GROUP_ID = 'GDS_CD'
		AND    A.ODR_ID = #{ODR_ID}
		ORDER BY CAST(C.CODE_ORDER AS UNSIGNED), B.SN
		 
	</select>
	
	<select id="odrTestItemSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		<![CDATA[
		/*
		*
		* safety.odrTestItemSelect 
		* 세부품목별 시험항목 조회
		* @author dooresoft
		* @since 2023.03.06
		*/
		]]>
        SELECT  A.ODR_ID                                            -- 차수ID
              , A.DETAIL_GDS_ID                                     -- 세부품목ID
              , A.TEST_ID                                           -- 시험ID
        FROM TB_ODR_TEST A, TB_GDS B 
        WHERE 1 = 1
        ANS   A.DETAIL_GDS_ID = B.DETAIL_GDS_ID
        <if test=" ODR_ID != null and ODR_ID != '' " >
        AND ODR_ID = #{ODR_ID}
        </if>
        <if test=" DETAIL_GDS_ID != null and DETAIL_GDS_ID != '' " >
        AND DETAIL_GDS_ID = #{DETAIL_GDS_ID}
        </if>
        <if test=" TEST_ID != null and TEST_ID != '' " >
        AND TEST_ID = #{TEST_ID}
        </if>
        ORDER BY B.SN
	</select>	
	
	<select id="odrTestSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		<![CDATA[
		/*
		*
		* safety.odrTestSelect 
		* TB_ODR_TEST 조회
		* @author dooresoft
		* @since 2023.03.06
		*/
		]]>
        SELECT  A.ODR_ID                                            -- 차수ID
              , A.DETAIL_GDS_ID                                     -- 세부품목ID
              , A.TEST_ID                                           -- 시험ID
        FROM TB_ODR_TEST A, TB_GDS B 
        WHERE 1 = 1
        ANS   A.DETAIL_GDS_ID = B.DETAIL_GDS_ID
        <if test=" ODR_ID != null and ODR_ID != '' " >
        AND ODR_ID = #{ODR_ID}
        </if>
        <if test=" DETAIL_GDS_ID != null and DETAIL_GDS_ID != '' " >
        AND DETAIL_GDS_ID = #{DETAIL_GDS_ID}
        </if>
        <if test=" TEST_ID != null and TEST_ID != '' " >
        AND TEST_ID = #{TEST_ID}
        </if>
        ORDER BY B.SN
	</select>

	<insert id="odrTestInsert" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.odrTestInsert 
		* TB_ODR_TEST 등록
		* @author dooresoft
		* @since 2023.03.06
		*/
		]]>
		INSERT INTO TB_ODR_TEST (
                ODR_ID                                            -- 차수ID
              , DETAIL_GDS_ID                                     -- 세부품목ID
              , TEST_ID                                           -- 시험ID
              , REG_DT                                            -- 등록일시
              , RGTR_ID)                                          -- 등록자ID
		VALUES (
                #{ODR_ID}                                         -- 차수ID
              , #{DETAIL_GDS_ID}                                  -- 세부품목ID
              , #{TEST_ID}                                        -- 시험ID
              , NOW()                                             -- 등록일시
              , #{_sessionUserCd}                                 -- 등록자ID
		)
	</insert>

	<update id="odrTestUpdate" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.odrTestUpdate 
		* TB_ODR_TEST 수정
		* @author dooresoft
		* @since 2023.03.06
		*/
		]]>
		UPDATE TB_ODR_TEST
		SET    MDFCN_DT =NOW()
		     , MDFR_ID = #{_sessionUserCd}
		WHERE  ODR_ID = #{ODR_ID}
		AND    DETAIL_GDS_ID = #{DETAIL_GDS_ID}
		AND    TEST_ID = #{TEST_ID}
	</update>

	<delete id="odrTestDelete" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.odrTestDelete 
		* TB_ODR_TEST 삭제
		* @author dooresoft
		* @since 2023.03.06
		*/
		]]>
		DELETE FROM TB_ODR_TEST
		WHERE  1 = 1
		AND ODR_ID = #{ODR_ID}
		AND DETAIL_GDS_ID = #{DETAIL_GDS_ID}
		AND TEST_ID = #{TEST_ID}
	</delete>	
	

	<select id="odrTestGrpSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		<![CDATA[
		/*
		*
		* safety.odrTestGrpSelect 
		* 안전성조사계획 세부품목별 시험항목 조회
		* @author dooresoft
		* @since 2023.03.06
		*/
		]]>
		SELECT FN_GET_COM_NM('TEST_DIV_CD', B.TEST_DIV_CD) TEST_DIV_NM 
        	 , FN_GET_COM_NM('TEST_ITEM_CD', B.TEST_ITEM_CD) TEST_ITEM_NM
          	 , A.ODR_ID
        FROM   TB_ODR_TEST A, TB_TEST_ITEM B  
		WHERE A.TEST_ID = B.TEST_ID
		AND   A.ODR_ID = #{ODR_ID}
		AND      DETAIL_GDS_ID = #{DETAIL_GDS_ID}
		GROUP BY B.TEST_DIV_CD, B.TEST_ITEM_CD, A.ODR_ID
		ORDER BY FN_GET_COM_SN('TEST_DIV_CD', B.TEST_DIV_CD), FN_GET_COM_SN('TEST_ITEM_CD', B.TEST_ITEM_CD)
	
	</select>
	
	<insert id="odrTestDetailGdsInsert" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.odrTestDetailGdsInsert 
		* TB_ODR_TEST 등록
		* @author dooresoft
		* @since 2023.03.06
		*/
		]]>
		INSERT INTO TB_ODR_TEST (
                ODR_ID                                            -- 차수ID
              , DETAIL_GDS_ID                                     -- 세부품목ID
              , TEST_ID                                           -- 시험ID
              , REG_DT                                            -- 등록일시
              , RGTR_ID)                                          -- 등록자ID
        SELECT  #{ODR_ID}
              , #{DETAIL_GDS_ID}
              , TEST_ID
 			  , NOW()
 			  , #{_sessionUserCd}
        FROM  (    
				SELECT TEST_ID
			    FROM   TB_GDS_TEST
			    WHERE  DETAIL_GDS_ID = #{DETAIL_GDS_ID}
			    AND    '02' = #{TEST_DIV_CD}
			    UNION
			    SELECT TEST_ID
			    FROM   TB_TEST_ITEM
			    WHERE  TEST_DIV_CD = #{TEST_DIV_CD}
			    AND    '03' = (SELECT CERT_FLD_CD FROM TB_GDS  WHERE DETAIL_GDS_ID = #{DETAIL_GDS_ID})) A
	</insert>
	
	<delete id="odrTestDetailGdsDelete" parameterType="map" timeout="0">
		<![CDATA[
		/*
		*
		* safety.odrTestDetailGdsDelete 
		* TB_ODR_TEST 삭제 (세부품목별로 삭제)
		* @author dooresoft
		* @since 2023.03.06
		*/
		]]>
		DELETE FROM TB_ODR_TEST
		WHERE  1 = 1
		AND ODR_ID = #{ODR_ID}
		AND DETAIL_GDS_ID = #{DETAIL_GDS_ID}
	</delete>	
	
	<select id="odrTestGrpALLSelect" parameterType="map" timeout="0" resultType="map" useCache="false">
		<![CDATA[
		/*
		*
		* safety.odrTestGrpALLSelect 
		* 안전성조사계획 세부품목별 시험항목 선택 조회
		* @author dooresoft
		* @since 2023.03.07
		*/
		]]>
		SELECT FN_GET_COM_NM('TEST_DIV_CD', B.TEST_DIV_CD) TEST_DIV_NM
	         , FN_GET_COM_NM('TEST_ITEM_CD', B.TEST_ITEM_CD) TEST_ITEM_NM
			 , #{ODR_ID} ODR_ID
			 , #{DETAIL_GDS_ID} DETAIL_GDS_ID
			 , B.TEST_DIV_CD
			 , B.TEST_ITEM_CD
			 , CASE WHEN (SELECT COUNT(*) FROM TB_ODR_TEST WHERE ODR_ID = #{ODR_ID} AND DETAIL_GDS_ID = #{DETAIL_GDS_ID} AND TEST_ID = A.TEST_ID) > 0 THEN 1 ELSE 0 END CHK 
		FROM (
			   SELECT TEST_ID
			   FROM   TB_GDS_TEST
			   WHERE  DETAIL_GDS_ID = #{DETAIL_GDS_ID}
			   UNION
			   SELECT TEST_ID
			   FROM   TB_TEST_ITEM
			   WHERE  TEST_DIV_CD = '01'
			   AND    '03' = (SELECT CERT_FLD_CD FROM TB_GDS  WHERE DETAIL_GDS_ID = #{DETAIL_GDS_ID})) A 
			 , TB_TEST_ITEM B
		WHERE  A.TEST_ID = B.TEST_ID
		GROUP BY B.TEST_DIV_CD, B.TEST_ITEM_CD
		ORDER BY FN_GET_COM_SN('TEST_DIV_CD', B.TEST_DIV_CD), B.SN  
	</select>
	
	
</mapper>