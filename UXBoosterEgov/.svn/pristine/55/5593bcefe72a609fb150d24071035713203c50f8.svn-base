<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="smpQuery" width="1280" height="720" titletext="New Form" onload="Form_onload">
    <Layouts>
      <Layout height="720" mobileorientation="landscape" width="1280">
        <Edit id="edtRowCnt" taborder="4" left="287" top="10" width="70" height="30" value="0" text="0" textAlign="right" onchanged="edtRowCnt_onchanged"/>
        <TextArea id="txtQuery" taborder="0" left="10" top="edtRowCnt:5" width="36.88%" bottom="10" font="14px/normal &quot;Verdana&quot;" onkeydown="txtQuery_onkeydown" minwidth="480" maxwidth=""/>
        <Button id="btnExec" taborder="1" text="쿼리실행" left="txtQuery:-89" top="10" width="90" height="30" onclick="btnExec_onclick"/>
        <Grid id="grdResult" taborder="2" left="txtQuery:10" top="45" right="10" bottom="10" binddataset="dsResult" onvscroll="grdResult_onvscroll" cellsizingtype="col" cellmovingtype="col" wheelscrollrow="1" autosizingtype="col" autosizebandtype="allband">
          <Formats>
            <Format id="default"/>
          </Formats>
        </Grid>
        <CheckBox id="chkAll" taborder="5" text="페이징 사용여부" left="10" top="10" width="110" height="30" onchanged="chkAll_onchanged"/>
        <Static id="staRowCnt" taborder="3" left="chkAll:30" top="10" width="132" height="30" text="한 페이지에 보여줄 행 수"/>
        <Static id="staTotal" taborder="6" left="txtQuery:10" top="10" width="132" height="30" text="Total count : " usedecorate="true"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[/**
*  SYSTEM FORM NAME
*
*  @MenuPath    1Depth > 2Depth
*  @FileName    *.xfdl 
*  @Creator     홍길동
*  @CreateDate  yyyy.MM.DD 
*  @Version     1.0
*  @Desction    설명
* 
************** 소스 수정 이력 *************************************************
*    Date          Modifier            Description
*******************************************************************************
*  YYYY.MM.DD      홍길동             최초 생성 
*******************************************************************************
*/

//공통 라이브러리 호출

/*********************************************************
 * 1.1 FORM 변수 선언 영역
 ********************************************************/
this.fv_nMinRow = 50;

/*********************************************************
* 1.2 FORM EVENT 영역(onload등)
********************************************************/
/**
* Form_onload 최초 로드시 발생되는 이벤트 (필수)
*/
this.Form_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
    if (take.formOnLoad(this, true)) //공통 온로드(필수) : 최초 온로드시 공통으로 호출되는 함수 --> 필수
    {    
        this.edtRowCnt.set_value(this.fv_nMinRow);
    }
}

/****************************************************************************************
* 2 필수 FUNCTION 영역 (fnSearch, fnSave, fnAddRow, fnDelRow, fnExcel, fnPrint)
****************************************************************************************/
//N/A

/*********************************************************
 * 3 각 COMPONENT 별 EVENT 영역
 ********************************************************/
//chkAll_onchanged : 전체 행 체크 변경이벤트
this.chkAll_onchanged = function(obj:nexacro.CheckBox,e:nexacro.CheckBoxChangedEventInfo)
{
    this.edtRowCnt.set_enable(!e.postvalue);
    this.edtPageNo.set_enable(!e.postvalue);
};

//btnExec_onclick : 쿼리 실행 버튼 클릭 이벤트
this.btnExec_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
    var sQuery = take.nvl(this.txtQuery.value,"");
    
    this.dsQuery.setColumn(0, "QUERY_STR", sQuery);
    
    if (sQuery!="")
    {   
        take.debug(this, "Query : " + sQuery);
        this.fnSearch(true);
    } else {
        take.alert(this, "Info", "Query를 입력해 주세요.");
        this.txtQuery.setFocus();
        return false;
    }
};

this.grdResult_onvscroll = function(obj:nexacro.Grid,e:nexacro.ScrollEventInfo)
{
    var bAllChk = take.isEmpty(this.chkAll.value)?false:this.chkAll.value;
    
    if (!bAllChk)
    {    
        if ((e.type == "lastover")      || 
            (e.type == "tracklastover") || 
            (e.type == "wheellastover") || 
            (e.type == "selectlastover")) 
        {
            var objDs;
            var nRowTotalCnt;
            
            objDs = this.dsResult;        
            
            nRowTotalCnt = take.nvl(take.nvl(objDs.getColumn(0,"tcnt"),objDs.getColumn(0,"TCNT")),0);
            
            if (objDs.rowcount==nRowTotalCnt)
            {
                take.alert(this, "Info", "더이상 조회할 데이터가 없습니다.");
                take.debug("grdResult_onvscroll", " 더이상 조회할 데이터가 없습니다.");
                return;
            }
            
            objDs.pageno++;
            
            this.fnSearch(false);
        }
    }
};

this.edtRowCnt_onchanged = function(obj:nexacro.Edit,e:nexacro.ChangeEventInfo)
{
	if (parseInt(e.postvalue)<this.fv_nMinRow)
    {
        take.alert(this, "Info", "최소 Row("+this.fv_nMinRow +") 보다 작은 값을 설정할 수 없습니다.");
        obj.setFocus();
        return false;
    }
};

this.txtQuery_onkeydown = function(obj:nexacro.TextArea,e:nexacro.KeyEventInfo)
{
	if (e.ctrlkey && e.keycode==13)
    {
        var sQuery = take.nvl(take.nvl(this.txtQuery.getSelectedText(), this.txtQuery.value),"");
        
        this.dsQuery.setColumn(0, "QUERY_STR", sQuery);
        
        if (sQuery!="")
        {   
            take.debug(this, "Query : " + sQuery);
            this.fnSearch(true);
        } else {
            take.alert(this, "Info", "Query를 입력해 주세요.");
            this.txtQuery.setFocus();
            return false;
        }
    }
};

this.dsResultTemp_onload = function(obj:nexacro.NormalDataset,e:nexacro.DSLoadEventInfo)
{
// 	if (e.reason==0)
//     {
//         if (obj.rowcount>0)
//         {
//             this.dsResult.appendData(obj, true);
//         }
//     }
};

/*********************************************************
 * 4 사용자 FUNCTION 영역
 ********************************************************/
/**
 * fnInit : 초기화 함수 검색조건 초기화 
 * @return {N/A}    N/A
 * @example this.fnInit();
 */
this.fnSearch = function(bInit)
{    
    var sParam="", sRowCnt, sPageNo, sOutDs;
    var bAllChk;
    var objDs;
    
    objDs = this.dsResult;
    
    bAllChk = take.isEmpty(this.chkAll.value)?false:this.chkAll.value;
    sRowCnt = take.nvl(this.edtRowCnt.value, this.fv_nMinRow);
    
    if (parseInt(sRowCnt)<this.fv_nMinRow )
    {
        take.alert(this, "Info", "최소 Row("+this.fv_nMinRow +") 보다 작은 값을 설정할 수 없습니다.");
        this.edtRowCnt.setFocus();
        return false;
    }
    
    if (bInit==false)
    {
        if (bAllChk)
        {
            //전체행 체크시 페이징 초기화
            if (take.confirm(this, "Info", "전체행 조회로 변경되었습니다.\n페이징 초기화를 진행하시겠습니까.? "))
            {
                bInit=true;
            } else {
                this.chkAll.set_value(false);
                return false;
            }
        }
        
        if (parseInt(sRowCnt)!=objDs.rowcnt)
        {
            //페이지 카운트 값 변경시 페이징 초기화
            if (take.confirm(this, "Info", "행수가 변경되었습니다.\n페이징 초기화를 진행하시겠습니까.? "))
            {
                bInit=true;
            } else {
                this.edtRowCnt.set_value(objDs.rowcnt);
                return false;
            }
        }
    }
    
    //페이지 초기화 여부
    if (bInit) //초기화
    {
        objDs.clear();
        objDs.rowcnt = null;
        objDs.pageno = null;
        
        sOutDs = "dsResult=dsResult";
        
        if (bAllChk==false)
        {
            sPageNo = "1";
            
            objDs.rowcnt = parseInt(sRowCnt);
            objDs.pageno = parseInt(sPageNo);
            
            sParam += "sRowCnt='"  + sRowCnt + "'";
            sParam += " sPageNo='" + sPageNo + "'";
            sParam += " sAllYn='false'";
        } else {            
            sParam += "sAllYn='true'";
        }
    } else {
        sOutDs = "dsResultTemp=dsResult";        
        sParam += "sRowCnt='"  + objDs.rowcnt + "'";
        sParam += " sPageNo='"  + objDs.pageno + "'";
        sParam += " sAllYn='false'";
    }
    
	take.transaction(
        this,
		"QueryExec",
		"SVC_LOC::sample/queryExec.do",
		"dsQuery=dsQuery",  //(Server=UI)
		sOutDs, //(UI=Server)
		sParam,
		function (sId, nErr, sMsg)
        {
            if (bInit)
            {
                //trace(this.dsResult.saveXML());
                this.grdResult.setBindDataset(this.dsResult);
                this.grdResult.createFormat();
                this.grdResult.setTakeGrid("select");
            } else {
                this.dsResult.appendData(this.dsResultTemp, true);
            }
            
            if (bAllChk)
            {
                this.staTotal.set_text("Total count : </fc v='blue'>" + this.dsResult.rowcount + "</fc>");
            } else {
                this.staTotal.set_text("Total count : </fc v='blue'>" + take.nvl(take.nvl(this.dsResult.getColumn(0,'TCNT'),this.dsResult.getColumn(0,'tcnt')),"0") + "</fc>")
            }
        },
        true);
}

/*********************************************************
 * 5 TRANSACTION OR CALLBACK 콜백 처리부분
 ********************************************************/
//N/A

]]></Script>
    <Objects>
      <Dataset id="dsQuery">
        <ColumnInfo>
          <Column id="QUERY_STR" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsResult"/>
      <Dataset id="dsResultTemp" onload="dsResultTemp_onload"/>
    </Objects>
  </Form>
</FDL>
