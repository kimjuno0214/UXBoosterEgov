<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="SM020P02" width="510" height="230" titletext="참여자 목록" background="white" onload="Form_onload">
    <Layouts>
      <Layout height="230" mobileorientation="landscape" width="510">
        <Div id="divSurveyItemReg" taborder="0" left="10" top="10" bottom="10" text="" right="10">
          <Layouts>
            <Layout>
              <Grid id="grdLegend" taborder="0" left="0" top="0" oncellclick="divTimeLineReg_grdFile_oncellclick" right="0" bottom="0" autofittype="col" binddataset="dsList">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="300"/>
                      <Column size="100"/>
                    </Columns>
                    <Rows>
                      <Row size="32" band="head"/>
                      <Row size="30"/>
                    </Rows>
                    <Band id="head">
                      <Cell displaytype="normal" edittype="normal" text="참여여부"/>
                      <Cell col="1" text="참여자"/>
                    </Band>
                    <Band id="body">
                      <Cell edittype="none" displaytype="normal" text="expr:CNT&gt;0 ? &quot;참여&quot; : &quot;미참여&quot;"/>
                      <Cell col="1" text="bind:TARGET_NM" edittype="none" textAlign="center"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="TARGET_SEQ" type="STRING" size="256"/>
          <Column id="SURVEY_SEQ" type="STRING" size="256"/>
          <Column id="TARGET_NM" type="STRING" size="256"/>
          <Column id="CNT" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/**
*  SYSTEM FORM NAME
*
*  @MenuPath    1Depth > 2Depth
*  @FileName    SM020P02.xfdl 
*  @Creator     김대승
*  @CreateDate  2021.04.06 
*  @Version     1.0
*  @Desction    설명
* 
************** 소스 수정 이력 *************************************************
*    Date          Modifier            Description
*******************************************************************************
*  2021.04.06      김대승             최초 생성 
*******************************************************************************
*/

//공통 라이브러리 호출

/*********************************************************
 * 1.1 FORM 변수 선언 영역
 ********************************************************/
this.fv_sSurveySeq = take.nvl(this.parent.sSurveySeq, "");

/*********************************************************
* 1.2 FORM EVENT 영역(onload등)
********************************************************/
/**
* Form_onload 최초 로드시 발생되는 이벤트 (필수)
*/
this.Form_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
   if (take.formOnLoad(this)) //공통 온로드(필수) : 최초 온로드시 공통으로 호출되는 함수 --> 필수
   {    
        this.fnInit();
   }
}

/****************************************************************************************
* 2 필수 FUNCTION 영역 (fnInit, fnSearch, fnSave, fnAddRow, fnDelRow, fnExcel, fnPrint)
****************************************************************************************/
/**
 * fnInit : 초기화 함수 검색조건 초기화 및 온로드 세팅
 * @return {N/A}    N/A
 * @example this.fnInit();
 */
this.fnInit = function()
{
	this.fnSearch();
}
/**
 * fnSearch : 조회 transaction (필수) --> 공통 조회에서 호출할 디폴트값 세팅 필요
 * @param  {String} sTranId 트랜젝션 아이디
 * @return {N/A}    N/A
 * @example this.fnSearch("ID");
 */
this.fnSearch = function(sTranId)
{
    //공통 조회에서 호출할 디폴트값 세팅 필요
    if (take.nvl(sTranId, "")=="") sTranId = "surveyTargetUser";
	
	var sParam = "sSurveySeq='"+ this.fv_sSurveySeq + "'";
    take.tranSelect
	(
		this,
		sTranId,
		"SurveyManagementMapper.surveyTargetUser",
		"",
		"dsList",
		sParam,
		"fnCallBack"
	);
}

/**
 * fnSave : 저장 transaction (필수) -->공통 저장에서 호출할 디폴트값 세팅 필요
 * @param  {String} sTranId 트랜젝션 아이디
 * @return {N/A}    N/A
 * @example this.fnSave("ID");
 */
this.fnSave = function(sTranId)
{    
    //공통 조회에서 호출할 디폴트값 세팅 필요
    if (take.nvl(sTranId, "")=="") sTranId = "Save transation id";
    //take.tranSave(this, sTranId, "NAMESPACE", "sInDs", "sOutDs", "sParam", "fnCallBack");
}

/**
 * fnAddRow : 행 추가 함수 (필수)--> 공통 행추가에서 호출할 디폴트값 세팅 필요
 * @param  {String} sGridId 그리드 아이디
 * @param  {Number} nRow    addRow 리턴값(추가된 행 위치)
 * @example this.fnAddRow(sGrdId, nRow);
 */
this.fnAddRow = function(sGrdId, nRow)
{
    //공통 행추가에서 호출할 디폴트값 세팅
    if (take.nvl(sGrdId, "")=="") sGrdId = "Grid00";
    
    //Script
}

/**
 * fnDelRow : 행 삭제 함수 (필수) --> 공통 행삭제에서 호출할 디폴트값 세팅 필요
 * @param  {String} sGridId 그리드 아이디
 * @param  {Number, Array} arrnRow    deleteRow 리턴값
 * @return {N/A} N/A
 * @example this.fnDelRow(sGrdId, nRow); 
 */
this.fnDelRow = function(sGrdId, arrnRow)
{    
    //공통 행추가에서 호출할 디폴트값 세팅
    if (take.nvl(sGrdId, "")=="") sGrdId = "Grid00";
    
    //Script
}

/**
 * fnExcel : 엑셀 다운로드 함수 (필수) --> 공통 엑셀 다운로드에서 호출할 디폴트값 세팅 필요
 * @param  {String} sGridId 그리드 아이디
 * @return {N/A} N/A
 * @example this.fnExcel(sGrdId, nRow); 
 */
this.fnExcel = function(sGrdId)
{
    //ExportExcelGrid 파일명, 시트명, 타이틀명
	//this.Grid00.ExportExcelGrid("testExcelFile", "userList", "");
}

/**
 * fnPrint : 출력 함수 (필수)
 * @param  {N/A} N/A
 * @return {N/A} N/A
 * @example this.fnPrint(); 
 */
this.fnPrint = function()
{    
    //출력없음
    return false;
}

/*********************************************************
 * 3 각 COMPONENT 별 EVENT 영역
 ********************************************************/
//component_onclick : ~ 버튼 클릭

this.component_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
    //Script
};

/*********************************************************
 * 4 사용자 FUNCTION 영역
 ********************************************************/
/**
 * fnUserFunction : 사용자 함수
 * @param  {String} sParam 문자형 인자
 * @param  {Number} nParam 숫자형 인자
 * @example this.fnUserFunction(sParam, nParam);
 */
this.fnUserFunction = function(sParam, nParam)
{    
    //Script
}

/*********************************************************
 * 5 TRANSACTION OR CALLBACK 콜백 처리부분
 ********************************************************/
/**
* fnCallback : transaction callBack
* @param  : sId      - 서비스 아이디 (공통 콜백에서 넘어옴)
* @param  : nErrCd   - 에러코드 (공통 콜백에서 넘어옴)
* @param  : sErrMsg  - 에러메세지 (공통 콜백에서 넘어옴)
* @return : N/A
* @example :  
*/
this.fnCallBack = function(sId, nErrCd, sErrMsg)
{
    //Transaction 에러는 공통에서 처리
    
    //Transaction은 성공이나 실제 처리된게 없을 경우 처리
    if( sErrMsg == "SUCC" )
    {
        //Success Script      
    } else {
        //Etc Script
    }   
    
    switch(sId)
    {
        case "surveyTargetUser" : //조회 콜백
            trace(this.dsList.saveXML());
            break;
        case "Transation id 02" :  //조회 콜백
            //Script
            break;
        case "Transation id 03" : //조회 콜백
            //Script
            break;
        case "Save transation id 01" :  //저장 콜백
            //Script
            break;
        case "Save transation id 01" :  //저장 콜백
            //Script
            break;
        default :
            break;
    }        
} ]]></Script>
  </Form>
</FDL>
