(function()
{
    return function()
    {
        if (!this._is_form)
            return;
        
        var obj = null;
        
        this.on_create = function()
        {
            this.set_name("CM010P03");
            this.set_titletext("공지사항 작성");
            this.set_cssclass("fm_work");
            this.set_background("#ffffff");
            if (Form == this.constructor)
            {
                this._setFormPosition(873,609);
            }
            
            // Object(Dataset, ExcelExportObject) Initialize
            obj = new Dataset("dsNotiTarget", this);
            obj._setContents("<ColumnInfo><Column id=\"TARGET_CD\" type=\"STRING\" size=\"256\"/><Column id=\"TARGET_NM\" type=\"STRING\" size=\"256\"/><Column id=\"PROJECT_CD\" type=\"STRING\" size=\"256\"/><Column id=\"MENU_CD\" type=\"STRING\" size=\"256\"/><Column id=\"BOARD_SEQ\" type=\"STRING\" size=\"256\"/><Column id=\"TARGET_TYPE\" type=\"STRING\" size=\"256\"/></ColumnInfo>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsNotice", this);
            obj._setContents("<ColumnInfo><Column id=\"PROJECT_CD\" type=\"STRING\" size=\"255\"/><Column id=\"MENU_CD\" type=\"STRING\" size=\"255\"/><Column id=\"BOARD_SEQ\" type=\"STRING\" size=\"255\"/><Column id=\"BOARD_TITLE\" type=\"STRING\" size=\"255\"/><Column id=\"IMPORT_YN\" type=\"STRING\" size=\"255\"/><Column id=\"POPUP_YN\" type=\"STRING\" size=\"255\"/><Column id=\"POPUP_START_DT\" type=\"STRING\" size=\"255\"/><Column id=\"POPUP_END_DT\" type=\"STRING\" size=\"255\"/><Column id=\"BOARD_ATTACH\" type=\"STRING\" size=\"255\"/><Column id=\"REG_DT\" type=\"STRING\" size=\"255\"/><Column id=\"REG_CD\" type=\"STRING\" size=\"255\"/><Column id=\"MOD_DT\" type=\"STRING\" size=\"255\"/><Column id=\"MOD_CD\" type=\"STRING\" size=\"255\"/><Column id=\"BOARD_TXT\" type=\"STRING\" size=\"255\"/></ColumnInfo>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsSearch", this);
            obj._setContents("<ColumnInfo><Column id=\"PROJECT_CD\" type=\"STRING\" size=\"256\"/><Column id=\"MENU_CD\" type=\"STRING\" size=\"256\"/><Column id=\"BOARD_SEQ\" type=\"STRING\" size=\"256\"/></ColumnInfo>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsPushInfo", this);
            obj._setContents("<ColumnInfo><Column id=\"PROJECT_CD\" type=\"STRING\" size=\"256\"/><Column id=\"BOARD_TITLE\" type=\"STRING\" size=\"256\"/><Column id=\"MENU_CD\" type=\"STRING\" size=\"256\"/><Column id=\"TOKEN_VAL\" type=\"STRING\" size=\"256\"/><Column id=\"USER_NM\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row/></Rows>");
            this.addChild(obj.name, obj);
            
            // UI Components Initialize
            obj = new Static("Static01","20","60",null,"31","20",null,null,null,null,null,this);
            obj.set_taborder("0");
            obj.set_cssclass("sta_WF_th01L");
            this.addChild(obj.name, obj);

            obj = new Edit("edtTitle","27","65",null,"21","130",null,null,null,null,null,this);
            obj.set_taborder("1");
            obj.set_displaynulltext("제목을 입력해 주세요.");
            this.addChild(obj.name, obj);

            obj = new Static("Static02","20","90",null,null,"20","250",null,null,null,null,this);
            obj.set_taborder("2");
            obj.set_cssclass("sta_WF_th01L");
            this.addChild(obj.name, obj);

            obj = new Static("Static22","0",null,null,"10","0","790",null,null,null,null,this);
            obj.set_taborder("3");
            obj.set_text("10");
            obj.set_background("red");
            obj.set_visible("false");
            obj.set_textAlign("center");
            this.addChild(obj.name, obj);

            obj = new Static("Static00","0","20","20",null,null,"0",null,null,null,null,this);
            obj.set_taborder("4");
            obj.set_text("10");
            obj.set_background("red");
            obj.set_visible("false");
            obj.set_textAlign("center");
            obj.set_opacity("0.3");
            this.addChild(obj.name, obj);

            obj = new Static("Static03","0","0",null,"20","0",null,null,null,null,null,this);
            obj.set_taborder("5");
            obj.set_text("10");
            obj.set_background("red");
            obj.set_visible("false");
            obj.set_textAlign("center");
            obj.set_opacity("0.3");
            this.addChild(obj.name, obj);

            obj = new CheckBox("chkImportYn","edtTitle:3","65","102","22",null,null,null,null,null,null,this);
            obj.set_taborder("6");
            obj.set_text("중요공지 여부");
            obj.set_falsevalue("N");
            obj.set_truevalue("Y");
            this.addChild(obj.name, obj);

            obj = new Div("divPopOption","20","Static02:9",null,"43","20",null,null,null,null,null,this);
            obj.set_taborder("7");
            obj.set_cssclass("div_WF_replyBox01");
            this.addChild(obj.name, obj);

            obj = new CheckBox("chkPopYn","7","10","104","21",null,null,null,null,null,null,this.divPopOption.form);
            obj.set_taborder("0");
            obj.set_text("팝업공지 여부");
            obj.set_falsevalue("N");
            obj.set_truevalue("Y");
            this.divPopOption.addChild(obj.name, obj);

            obj = new Calendar("calPopStartDt","121","10","90","21",null,null,null,null,null,null,this.divPopOption.form);
            obj.set_taborder("1");
            obj.set_dateformat("yyyy-MM-dd");
            this.divPopOption.addChild(obj.name, obj);

            obj = new Static("Static00","calPopStartDt:0","10","15","21",null,null,null,null,null,null,this.divPopOption.form);
            obj.set_taborder("3");
            obj.set_text("~");
            obj.set_cssclass("sta_WF_textC");
            this.divPopOption.addChild(obj.name, obj);

            obj = new Calendar("calPopEndDt","Static00:0","10","90","21",null,null,null,null,null,null,this.divPopOption.form);
            obj.set_taborder("2");
            obj.set_dateformat("yyyy-MM-dd");
            this.divPopOption.addChild(obj.name, obj);

            obj = new Static("staPopTarget","364","10","50","21",null,null,null,null,null,null,this.divPopOption.form);
            obj.set_taborder("4");
            obj.set_text("공지대상");
            this.divPopOption.addChild(obj.name, obj);

            obj = new Edit("edtPopTarget","424","10","141","21",null,null,null,null,null,null,this.divPopOption.form);
            obj.set_taborder("5");
            obj.set_readonly("true");
            this.divPopOption.addChild(obj.name, obj);

            obj = new Button("btnSchPopTarget","568","10","46","21",null,null,null,null,null,null,this.divPopOption.form);
            obj.set_taborder("6");
            obj.set_text("찾기");
            obj.set_cssclass("btn_WF_search03");
            this.divPopOption.addChild(obj.name, obj);

            obj = new WebBrowser("wbWebEditor","27","101",null,null,"30","260",null,null,null,null,this);
            obj.set_taborder("8");
            this.addChild(obj.name, obj);

            obj = new Button("btnSave",null,"30","46","25","20",null,null,null,null,null,this);
            obj.set_taborder("10");
            obj.set_text("저장");
            obj.set_visible("true");
            obj.set_cssclass("btn_WF_save02");
            this.addChild(obj.name, obj);

            obj = new Button("btnDelete",null,"30","46","25","btnSave:3",null,null,null,null,null,this);
            obj.set_taborder("9");
            obj.set_text("삭제");
            obj.set_visible("false");
            obj.set_cssclass("btn_WF_cancel02");
            this.addChild(obj.name, obj);

            obj = new Static("Static04","20","360",null,"10","20",null,null,null,null,null,this);
            obj.set_taborder("11");
            obj.set_text("10");
            obj.set_background("red");
            obj.set_visible("false");
            obj.set_textAlign("center");
            obj.set_opacity("0.3");
            this.addChild(obj.name, obj);

            obj = new Button("btnPrev",null,"30","46","25","btnDelete:3",null,null,null,null,null,this);
            obj.set_taborder("12");
            obj.set_text("이전");
            obj.set_visible("false");
            obj.set_cssclass("=");
            this.addChild(obj.name, obj);

            obj = new Div("divFile","20",null,null,"137","20","63",null,null,null,null,this);
            obj.set_taborder("13");
            obj.set_url("frm::com/comFileSYS.xfdl");
            obj.set_text("");
            this.addChild(obj.name, obj);

            obj = new Static("Static00_00","853","20","20",null,null,"0",null,null,null,null,this);
            obj.set_taborder("14");
            obj.set_text("10");
            obj.set_background("red");
            obj.set_visible("false");
            obj.set_textAlign("center");
            obj.set_opacity("0.3");
            this.addChild(obj.name, obj);

            obj = new Static("Static05_00","20",null,null,"20","20","43",null,null,null,null,this);
            obj.set_taborder("15");
            obj.set_text("10");
            obj.set_background("red");
            obj.set_visible("false");
            obj.set_textAlign("center");
            obj.set_opacity("0.3");
            this.addChild(obj.name, obj);

            obj = new Static("Static05","20",null,null,"20","20","0",null,null,null,null,this);
            obj.set_taborder("16");
            obj.set_text("10");
            obj.set_background("red");
            obj.set_visible("false");
            obj.set_textAlign("center");
            obj.set_opacity("0.3");
            this.addChild(obj.name, obj);

            obj = new Button("btnClose",null,"divFile:20","58","23","20",null,null,null,null,null,this);
            obj.set_taborder("17");
            obj.set_cssclass("btn_WF_cancel01");
            obj.set_text("닫기");
            this.addChild(obj.name, obj);
            // Layout Functions
            //-- Default Layout : this.divPopOption.form
            obj = new Layout("default","",0,0,this.divPopOption.form,function(p){});
            this.divPopOption.form.addLayout(obj.name, obj);

            //-- Default Layout : this.divFile
            obj = new Layout("default","",0,0,this.divFile.form,function(p){});
            this.divFile.form.addLayout(obj.name, obj);

            //-- Default Layout : this
            obj = new Layout("default","",873,609,this,function(p){});
            obj.set_mobileorientation("landscape");
            this.addLayout(obj.name, obj);
            
            // BindItem Information
            obj = new BindItem("item0","edtTitle","value","dsNotice","BOARD_TITLE");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item1","chkImportYn","value","dsNotice","IMPORT_YN");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item2","divPopOption.form.chkPopYn","value","dsNotice","POPUP_YN");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item3","divPopOption.form.calPopStartDt","value","dsNotice","POPUP_START_DT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item4","divPopOption.form.calPopEndDt","value","dsNotice","POPUP_END_DT");
            this.addChild(obj.name, obj);
            obj.bind();
            
            // TriggerItem Information

        };
        
        this.loadPreloadList = function()
        {
            this._addPreloadList("fdl","frm::com/comFileSYS.xfdl");
        };
        
        // User Script
        this.registerScript("CM010P03.xfdl", function() {
        /**
        *  SYSTEM FORM NAME
        *
        *  @MenuPath    1Depth > 2Depth
        *  @FileName    *.xfdl
        *  @Creator     홍길동
        *  @CreateDate  yyyy.MM.DD
        *  @Version     1.0
        *  @Desction    설명
        *
        ************** 소스 수정 이력 *************************************************
        *    Date          Modifier            Description
        *******************************************************************************
        *  YYYY.MM.DD      홍길동             최초 생성
        *******************************************************************************
        */

        //공통 라이브러리 호출

        /*********************************************************
         * 1.1 FORM 변수 선언 영역
         ********************************************************/
        this.fv_bWebOnload = false;
        this.fv_sProjectCd = nexacro.getApplication().av_sProjectCd;
        this.fv_sMenuCd = take.nvl(this.parent.sMenuCd, "");
        this.fv_sBoardSeq = take.nvl(this.parent.sBoardSeq, "");
        this.fv_sAttachCd = take.nvl(this.parent.sBoardAttach, "");
        this.fv_objGdsUserInfo  = nexacro.getApplication().gdsUserInfo;
        this.fv_divFile;

        /*********************************************************
        * 1.2 FORM EVENT 영역(onload등)
        ********************************************************/
        /**
        * Form_onload 최초 로드시 발생되는 이벤트 (필수)
        */
        this.CM010P03_onload = function(obj, e)
        {
           if (take.formOnLoad(this, true)) //공통 온로드(필수) : 최초 온로드시 공통으로 호출되는 함수 --> 필수
           {
                //Script
        		this.wbWebEditor.set_url(take.getSvcUrl() + "editor/SummerNote/summer.html");
        		this.setTimer(1,100);

        		if( "" != this.fv_sBoardSeq )
        		{
        			this.btnPrev.set_visible(true);
        			this.btnDelete.set_visible(true);
        		}

        		// 첨부파일 활성화
        		this.fv_divFile = this.divFile.form;
        		this.fv_divFile.fn_setSaveBtnEnable(false);
        		this.fv_divFile.fn_setAtchFileTypeCd("04");
        		this.fv_divFile.fnInitComponent(this);

        		this.fnUISetting(this.opener.fv_objUserParam);
           }
        };

        /*********************************************************
        * 2 필수 FUNCTION 영역 (fnInit, fnSearch, fnSave, fnAddRow, fnDelRow)
        ********************************************************/
        /**
         * fnSearch : 조회 transaction (필수) --> 공통 조회에서 호출할 디폴트값 세팅 필요
         * @param  {String} sTranId 트랜젝션 아이디
         * @return {N/A}    N/A
         * @example this.fnSearch("ID");
         */
        this.fnSearch = function(sTranId)
        {
            //공통 조회에서 호출할 디폴트값 세팅 필요
            if (take.nvl(sTranId, "")=="") sTranId = "Search";

            this.dsSearch.clearData();
        	this.dsSearch.addRow();
        	this.dsSearch.setColumn(0, "PROJECT_CD"	, this.fv_sProjectCd);
        	this.dsSearch.setColumn(0, "MENU_CD"	, this.fv_sMenuCd);
        	this.dsSearch.setColumn(0, "BOARD_SEQ"	, this.fv_sBoardSeq);

        	var sNamespaces = new Array();
        		sNamespaces.push("BoardManagement.boardInfoDetail");
        		sNamespaces.push("BoardManagement.boardTargetList");

        	var sInDs = ["dsSearch"];

        	var sOutDs = new Array();
        		sOutDs.push("dsNotice");
        		sOutDs.push("dsNotiTarget");

        	//Script
        	take.tranSelect(this, "Search", sNamespaces, sInDs, sOutDs, "", "fnCallback");
        };

        /**
         * fnSave : 저장 transaction (필수) -->공통 저장에서 호출할 디폴트값 세팅 필요
         * @param  {String} sTranId 트랜젝션 아이디
         * @return {N/A}    N/A
         * @example this.fnSave("ID");
         */
        this.fnSave = function(sTranId)
        {
            //공통 조회에서 호출할 디폴트값 세팅 필요
            if (take.nvl(sTranId, "")=="") sTranId = "Save";

        	var sContents = this.wbWebEditor.getProperty("window").callMethod("getContents", 1);

        	this.dsNotice.setColumn(0, "PROJECT_CD"	, this.fv_sProjectCd);
        	this.dsNotice.setColumn(0, "MENU_CD"	, this.fv_sMenuCd);
         	this.dsNotice.setColumn(0, "BOARD_TXT"	, sContents);

        	this.dsPushInfo.setColumn(0, "BOARD_TITLE", this.edtTitle.value);
        	this.dsPushInfo.setColumn(0, "PROJECT_CD"	, this.fv_sProjectCd);
        	this.dsPushInfo.setColumn(0, "MENU_CD"		, this.fv_sMenuCd);
        	this.dsPushInfo.setColumn(0, "USER_NM"		, this.fv_objGdsUserInfo.getColumn(0,"USER_NM"));
        	this.dsPushInfo.setColumn(0, "TOKEN_VAL"	, "1");

        	var sCalFrom = this.divPopOption.form.calPopStartDt.value;
        	var sCalTo	 = this.divPopOption.form.calPopEndDt.value;
        	if( !take.isEmpty(sCalFrom) && !take.isEmpty(sCalTo) ){
        		var bFromTo = take.isFromTo(sCalFrom, sCalTo);
        		if( !bFromTo ){
        			take.alert(this, "", "팝업공지일이 잘못되었습니다.");
        			return;
        		}
        	}

        	//공지사항에 "title" 글이 새로 올라왔습니다. (공지사항은 우선 하드코딩 --> 추후에 menu코드 가져와서 변경)
        	//작성자 : 이동건

        	//데이터변경 / 파일 수정 여부
        	if (!take.isDsModified(this.dsNotice)
        		&& !take.isDsModified(this.dsNotiTarget)
        		&& !this.fv_divFile.fn_isUpdate())
        	{
        		take.alert(this, "info", "변경된 내역이 없습니다.");
        		return;
        	}

        	//파일 업로드 / 저장
        	this.fv_divFile.fnUploadSaveFileList(this,
        		function(rtnValue){
        			if(rtnValue.result){
        				take.transaction(this, "Save", "SVC_LOC::cm/boardSave.do", "dsNotice=dsNotice:U dsNotiTarget=dsNotiTarget:U dsPushInfo=dsPushInfo:U", "", "", "fnCallback");
        			}
        		}
        	);
        };

        /**
         * fnDelRow : 행 삭제 함수 (필수) --> 공통 행삭제에서 호출할 디폴트값 세팅 필요
         * @param  {String} sGridId 그리드 아이디
         * @param  {Number, Array} arrnRow    deleteRow 리턴값
         * @return {N/A} N/A
         * @example this.fnDelRow(sGrdId, nRow);
         */
        this.fnDelRow = function(sGrdId, arrnRow)
        {
            //공통 행추가에서 호출할 디폴트값 세팅
            if (take.nvl(sGrdId, "")=="") sGrdId = "";

        	take.transaction(this, "Delete", "SVC_LOC::cm/boardSave.do", "dsNotice=dsNotice", "", "", "fnCallback");
        };

        /*********************************************************
         * 3 각 COMPONENT 별 EVENT 영역
          ********************************************************/
        this.wbWebEditor_onloadcompleted = function(obj,e)
        {
        	if (e.url.indexOf("summer.html") != -1){
        		this.fv_bWebOnload = true;
        	}
        };

        this.wbWebEditor_onsize = function(obj,e)
        {
        	this.wbWebEditor.getProperty("window").callMethod("setHeight", (this.wbWebEditor.getOffsetHeight()-85));
        };

        this.CM010P03_ontimer = function(obj,e)
        {
        	if (e.timerid==1)
        	{
                if (this.fv_bWebOnload == true)
        		{
                    this.killTimer(1);
                    this.wbWebEditor.getProperty("window").callMethod("fnEditorReady", (this.wbWebEditor.getOffsetHeight()-65));

        			if(!take.isEmpty(this.fv_sBoardSeq)){
        				this.fnSearch();
        			}else{
        				this.dsNotice.addRow();

        				//첨부파일 코드가 없을시 기준에 맞게 코드 생성
        				this.fv_divFile.fnSearchAtchFileId(this,
        					function(rtnValue){
        						this.dsNotice.setColumn(0, 'BOARD_ATTACH', rtnValue.resultData);
        						this.fv_divFile.fn_setAtchFileId(rtnValue.resultData);
        						this.fv_divFile.fnSearchFileList(this);
        					}
        				);
        			}
        		}
        	}
        };

        this.btnSave_onclick = function(obj,e)
        {
        	this.fnSave();
        };

        this.btnDelete_onclick = function(obj,e)
        {
        	var bRowDel = take.confirm(this, "question", "삭제 하시겠습니까?");
        	if (!bRowDel) return;

        	this.fnDelRow();
        };

        this.btnPrev_onclick = function(obj,e)
        {
        	this.opener.fnCallPopup(this.fv_sBoardSeq, this.fv_sAttachCd, "CM010P02");
        	this.close();
        };

        this.btnClose_onclick = function(obj,e)
        {
        	this.close();
        };

        // 팝업공지대상자 조회
        this.divPopOption_btnSchPopTarget_onclick = function(obj,e)
        {
        	var arrParam = {};
        	take.openPopup(this, "CM050P01", "frm::mod/CM050P01.xfdl", arrParam, "resizable=false", "fnPopCallback", false);
        };

        /*********************************************************
        * 4 사용자 FUNCTION 영역
        ********************************************************/
        this.fnGoList = function()
        {
        	this.opener.fnSearch();
        	this.close();
        };

        // 초기 ui 세팅
        this.fnUISetting = function(objUserParam)
        {
        	var sAttachYn = "Y";

        	if(objUserParam){
        		if(objUserParam.attach_yn)
        			sAttachYn = take.nvl(objUserParam.attach_yn, "Y");
        	}

        	var nFormHeight = this.getOffsetHeight();
        	if( "N" == sAttachYn )
        	{
        		var nFileHegit = this.divFile.getOffsetHeight();
        		nFormHeight = nFormHeight - nFileHegit;

        		this.divFile.set_height(0);
        	}

        	this.set_height(nFormHeight);
        	this.resetScroll();
        };

        /*********************************************************
         * 5 TRANSACTION OR CALLBACK 콜백 처리부분
         ********************************************************/
        /**
        * fnCallback : transaction callback
        * @param  : sId      - 서비스 아이디 (공통 콜백에서 넘어옴)
        * @param  : nErrCd   - 에러코드 (공통 콜백에서 넘어옴)
        * @param  : sErrMsg  - 에러메세지 (공통 콜백에서 넘어옴)
        * @return : N/A
        * @example :
        */
        this.fnCallback = function(sId, nErrCd, sErrMsg)
        {
            //Transaction 에러는 공통에서 처리

            //Transaction은 성공이나 실제 처리된게 없을 경우 처리
            if( sErrMsg == "SUCC" )
            {
                //Success Script
            } else {
                //Etc Script
            }

            switch(sId)
            {
                case "Save" : //저장 콜백
                    //Script
        			take.alert(this, "", "저장이 완료되었습니다.");
        			this.fnGoList();
                    break;
        		case "Delete" : //삭제 콜백
        			take.alert(this, "", "삭제가 완료되었습니다.");
        			this.fnGoList();

        			break;
                case "Search" :  //조회 콜백
                    //Script
        			var sContents = this.dsNotice.getColumn(0, "BOARD_TXT");
        			//20210118 정해원 게시판 내용 조회 불가
        			//callMethod의 파라미터에 html태그 있을 경우 호출 안 됨
        			//this.wbWebEditor.getProperty("window").callMethod("setContents", sContents);
        			var docWeb = this.wbWebEditor.getProperty("document").getProperty("all");
        				docWeb.getProperty("inputData").setProperty("value", take.nvl(sContents, ""));

        			this.wbWebEditor.getProperty("window").callMethod("setContents");

        			//첨부파일 조회
        			var atchFileId = this.dsNotice.getColumn(0, 'BOARD_ATTACH');
        			this.fv_divFile.fn_setAtchFileId(atchFileId);
        			this.fv_divFile.fnSearchFileList();

        			var sTargets = "";
        			for( var i=0; i<this.dsNotiTarget.rowcount; i++ )
        			{
        				var sTargetNm = this.dsNotiTarget.getColumn(i, "TARGET_NM");
        				sTargets += "," + sTargetNm;
        			}
        			this.divPopOption.form.edtPopTarget.set_value(sTargets.substring(1));

                    break;
                default :
                    break;
            }
        };

        this.fnPopCallback = function(sPopId, sRtn)
        {
            switch(sPopId)
            {
                case "CM050P01" : // 공지대상추가 콜백
        			if( "" == take.nvl(sRtn, "") ) return false;

        			this.dsNotiTarget.deleteAll();
        			this.divPopOption.form.edtPopTarget.set_value("");

        			var arrTarget = sRtn.split("::");
        			var nTargetCnt = arrTarget.length;
        			var sPopTargets = take.nvl(this.divPopOption.form.edtPopTarget.value, "");

        			for( var i=0; i<nTargetCnt; i++ )
        			{
        				var arrInfo = arrTarget[i].split(",");
        				var sTargetCd = arrInfo[0];
        				var sTargetNm = arrInfo[1];
        				var sTargetType = arrInfo[2];

        				if( i > 0 ) sPopTargets += ",";

        				sPopTargets += sTargetNm;

        				var nRow = this.dsNotiTarget.addRow();
        				this.dsNotiTarget.setColumn(nRow, "TARGET_CD", sTargetCd);
        				this.dsNotiTarget.setColumn(nRow, "TARGET_NM", sTargetNm);
        				this.dsNotiTarget.setColumn(nRow, "TARGET_TYPE", sTargetType);
        				this.dsNotiTarget.setColumn(nRow, "PROJECT_CD", this.fv_sProjectCd);
        				this.dsNotiTarget.setColumn(nRow, "MENU_CD", this.fv_sMenuCd);
        				this.dsNotiTarget.setColumn(nRow, "BOARD_SEQ", this.dsNotice.getColumn(0, "BOARD_SEQ"));
        			}

        			this.divPopOption.form.edtPopTarget.set_value(sPopTargets);

                    break;
                default :
                    break;
            }
        };


        });
        
        // Regist UI Components Event
        this.on_initEvent = function()
        {
            this.addEventHandler("onload",this.CM010P03_onload,this);
            this.addEventHandler("ontimer",this.CM010P03_ontimer,this);
            this.divPopOption.form.btnSchPopTarget.addEventHandler("onclick",this.divPopOption_btnSchPopTarget_onclick,this);
            this.wbWebEditor.addEventHandler("onloadcompleted",this.wbWebEditor_onloadcompleted,this);
            this.wbWebEditor.addEventHandler("onsize",this.wbWebEditor_onsize,this);
            this.btnSave.addEventHandler("onclick",this.btnSave_onclick,this);
            this.btnDelete.addEventHandler("onclick",this.btnDelete_onclick,this);
            this.btnPrev.addEventHandler("onclick",this.btnPrev_onclick,this);
            this.btnClose.addEventHandler("onclick",this.btnClose_onclick,this);
        };
        this.loadIncludeScript("CM010P03.xfdl");
        this.loadPreloadList();
        
        // Remove Reference
        obj = null;
    };
}
)();
