<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="DRE010M01" width="1659" height="832" titletext="SQLMAP 생성" onload="SYS0010M01_onload">
    <Layouts>
      <Layout height="832" mobileorientation="landscape" width="1659">
        <Div id="divSearch" taborder="0" left="10" top="0" height="43" right="10" cssclass="div_WF_searchBox01" text="" minwidth="1300" maxwidth="">
          <Layouts>
            <Layout>
              <Static id="Static07" taborder="2" text="10" left="332" top="0" width="2" background="rgba(255,0,0,0.4)" visible="false" color="#ff0000" textAlign="center" bottom="0"/>
              <Static id="Static08" taborder="3" text="10" left="665" top="0" width="2" background="rgba(255,0,0,0.4)" visible="false" color="#ff0000" textAlign="center" bottom="0"/>
              <Static id="staWtDivCd" taborder="1" text="테이블명" left="360" top="11" width="80" height="21" cssclass="sta_WF_textR"/>
              <Edit id="shEdtTableName" taborder="0" left="staWtDivCd:10" top="11" width="195" height="21" onkeyup="divSearch_onkeyup" text="tb_arpln_reg_aply"/>
              <Button id="btnExcelUpload" taborder="4" text="생성" top="9" cssclass="btn_WF_DownloadForm" height="21" onclick="fnSearch" width="50" left="shEdtTableName:5"/>
              <Static id="staModelNm" taborder="5" text="namespace" left="20" top="11" width="80" height="21" cssclass="sta_WF_textR"/>
              <Edit id="shEdtNameSpace" taborder="6" left="110" top="11" width="195" height="21"/>
            </Layout>
          </Layouts>
        </Div>
        <Button id="btnShowHide" taborder="2" left="48.16%" top="divSearch:0" width="60" height="10" cssclass="btn_WF_fold01"/>
        <Div id="divDetail" taborder="1" left="10" top="btnShowHide:20" right="10" bottom="10" minwidth="1300" maxwidth="">
          <Layouts>
            <Layout>
              <Static id="staListT" taborder="0" text="SQLMAP" left="0" top="0" height="30" width="450" cssclass="sta_WF_title02"/>
              <TextArea id="TextArea00" taborder="1" left="0" top="30" right="0" bottom="0"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="Static01" taborder="3" text="10" left="0" top="0" width="10" background="rgba(255,0,0,0.4)" bottom="0" visible="false" textAlign="center"/>
        <Static id="Static24" taborder="4" text="10" left="-1" height="20" background="rgba(255,0,0,0.4)" visible="false" right="1" textAlign="center" top="btnShowHide:0"/>
        <Static id="Static22" taborder="5" text="10" left="0" height="10" background="rgba(255,0,0,0.4)" visible="false" right="0" bottom="0" textAlign="center"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="schema" type="STRING" size="256"/>
          <Column id="tableName" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="tableName"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsMain">
        <ColumnInfo>
          <Column id="ARPLN_END_CODE" type="STRING" size="255"/>
          <Column id="EML" type="STRING" size="255"/>
          <Column id="REG_DT" type="STRING" size="255"/>
          <Column id="FRST_RGTR_ID" type="STRING" size="255"/>
          <Column id="FXNUM" type="STRING" size="255"/>
          <Column id="LAST_MDFCN_DT" type="STRING" size="255"/>
          <Column id="LAST_MDFR_ID" type="STRING" size="255"/>
          <Column id="MBTLNUM" type="STRING" size="255"/>
          <Column id="MNGR_NM" type="STRING" size="255"/>
          <Column id="MNGR_TELNO" type="STRING" size="255"/>
          <Column id="OWNR_ADDR_1" type="STRING" size="255"/>
          <Column id="OWNR_ADDR_2" type="STRING" size="255"/>
          <Column id="OWNR_ARPLN_ID" type="STRING" size="255"/>
          <Column id="OWNR_ID" type="STRING" size="255"/>
          <Column id="OWNR_NM" type="STRING" size="255"/>
          <Column id="RM" type="STRING" size="255"/>
          <Column id="SMG_NM" type="STRING" size="255"/>
          <Column id="SMG_TELNO" type="STRING" size="255"/>
          <Column id="TELNO" type="STRING" size="255"/>
          <Column id="USER_ID" type="STRING" size="255"/>
          <Column id="ZIP" type="STRING" size="255"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item1" compid="divSearch.form.shEdtTableName" propid="value" datasetid="dsSearch" columnid="tableName"/>
    </Bind>
    <Script type="xscript5.1"><![CDATA[/**
*  SQLMAP 생성
*
*  @MenuPath    SQLMAP 생성
*  @FileName    SYS0010M01.xfdl 
*  @Creator     doore
*  @CreateDate  2021.12.20
*  @Version     1.0
*  @Desction    SQLMAP 생성
* 
************** 소스 수정 이력 *************************************************
*    date          Modifier            Description
*******************************************************************************
*  2021.12.29      doore               최초 생성 
*******************************************************************************
*/

//공통 라이브러리 호출

/*********************************************************
 * 1.1 FORM 변수 선언 영역
 ********************************************************/
//this.fv_nFormVal = null;     //용도
this.fv_objGdsUserInfo = nexacro.getApplication().gdsUserInfo;
this.fv_sProjectCd = nexacro.getApplication().av_sProjectCd;
this.fv_sMenuCd = "";
this.fv_today = "";

this.fv_objUserParam = null;

/*********************************************************
* 1.2 FORM EVENT 영역(onload)
********************************************************/
/**
* formid_onload 최초 로드시 발생되는 이벤트 (필수)
*/
this.SYS0010M01_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
	if (take.formOnLoad(this)) //공통 온로드(필수) : 최초 온로드시 공통으로 호출되는 함수 --> 필수
   {    
		//this.fnSearch();
		var today = take.getTodayTime();
		this.fv_today = take.toDateString(take.getConvertDate(today.date), "yyyy") + "." +
						take.toDateString(take.getConvertDate(today.date), "MM")   + "." +
						take.toDateString(take.getConvertDate(today.date), "dd");
   }
};


/*********************************************************
 * 2.1 CALLBACK 콜백 처리부분
 ********************************************************/
/**
* fnCallback : transaction callback
* @param  : svcId   - 서비스 아이디 (공통 콜백에서 넘어옴)
* @param  : errCd   - 에러코드 (공통 콜백에서 넘어옴)
* @param  : errMsg   - 에러메세지 (공통 콜백에서 넘어옴)
* @return : N/A
* @example :  
*/
this.fnCallback = function(sId, nErrCd, sErrMsg)
{
    //Transaction 에러는 공통에서 처리
    
    //Transaction은 성공이나 실제 처리된게 없을 경우 처리
    if( sErrMsg == "SUCC" )
    {
        //Success Script      
    } else {
        //Etc Script
    }   
	
    switch(sId)
    {
		case "Search" :
			if (this.dsMain.rowcount > 0) {
				// SELECT
				var priSql = '';
				var paramSql = '';
				var colName = '';
				var colComm = '';
				var tableName = '';
				var tableSche = '';
				var delSql = '';
				var dataSetStr = '';
				
				tableName = this.dsMain.getColumn(i, "TABLE_NAME");
				tableSche = this.dsMain.getColumn(i, "TABLE_SCHEMA");
				var camelStr = this.gFn_getCamelString('1', tableName.substring(3));
			
				var txtArStr = '	<select id="' + camelStr + 'Select" parameterType="map" timeout="0" resultType="map" useCache="false">\n';
				txtArStr += '		<![CDATA[\n';
				txtArStr += '		/*\n';
				txtArStr += '		*\n';
				txtArStr += '		* ' + this.divSearch.form.shEdtNameSpace.value + '.' + camelStr + 'Select \n';
				txtArStr += '		* ' + tableName + ' 조회\n';
				txtArStr += '		* @author dooresoft\n';
				txtArStr += '		* @since ' + this.fv_today + '\n';
				txtArStr += '		*/\n';
				txtArStr += '		]]]]><![CDATA[>\n';
				for(var i = 0; i < this.dsMain.rowcount; i++) {
					colName = this.dsMain.getColumn(i, "COLUMN_NAME");
					colComm = this.dsMain.getColumn(i, "COLUMN_COMMENT");
					
					dataSetStr += '          <Column id="' + colName + '" type="STRING" size="255"/>\n'
				
					if(i == 0 ) txtArStr += '        SELECT  ' + this.gFn_rpad(colName, 50, " ")  + '-- ' + colComm + '\n';
					else {
						if(colName != "REG_DT" && colName != "RGTR_ID" && colName != "MDFCN_DT" && colName != "MDFR_ID")
						txtArStr += '              , ' + this.gFn_rpad(colName, 50, " ")  + '-- ' + colComm + '\n';
					}
					if(this.dsMain.getColumn(i, "COLUMN_KEY") == "PRI") {
							priSql  = '        <if test=" ' + colName + ' != null and ' + colName + ' != \'\' " >\n';
							priSql += '        AND ' + colName + ' = #{' + colName + '}\n' ;
							priSql += '        </if>\n' ;
							
							delSql += '		AND ' + colName + ' = #{' + colName + '}\n' ;
					}
				}
				//txtArStr += '        FROM ' + tableSche + '.' + tableName + '\n';
				txtArStr += '        FROM ' + tableName + '\n';
				txtArStr += '        WHERE 1 = 1\n';
				txtArStr += priSql;
				txtArStr += '        ORDER BY\n';
				txtArStr += '	</select>\n';
				
				txtArStr += '\n';
				// INSERT
				txtArStr += '	<insert id="' + camelStr + 'Insert" parameterType="map" timeout="0">\n';
				txtArStr += '		<![CDATA[\n';
				txtArStr += '		/*\n';
				txtArStr += '		*\n';
				txtArStr += '		* ' + this.divSearch.form.shEdtNameSpace.value + '.' + camelStr + 'Insert \n';
				txtArStr += '		* ' + tableName + ' 등록\n';
				txtArStr += '		* @author dooresoft\n';
				txtArStr += '		* @since ' + this.fv_today + '\n';
				txtArStr += '		*/\n';
				txtArStr += '		]]]]><![CDATA[>\n';
				// txtArStr += '		INSERT INTO ' + tableSche + '.' + tableName + ' (\n';
				txtArStr += '		INSERT INTO ' + tableName + ' (\n';
				for(var i = 0; i < this.dsMain.rowcount; i++) {
					colName = this.dsMain.getColumn(i, "COLUMN_NAME");
					colComm = this.dsMain.getColumn(i, "COLUMN_COMMENT");
				
					if(i == 0 ) { 
						txtArStr += '                ' + this.gFn_rpad(colName, 50, " ")  + '-- ' + colComm + '\n';
						paramSql  = '                ' + this.gFn_rpad('#{' + colName + '}', 50, " ") + '-- ' + colComm + '\n';
					} 
					else {
						if(colName != "REG_DT" && colName != "RGTR_ID" && colName != "MDFCN_DT" && colName != "MDFR_ID") {
							txtArStr += '              , ' +  this.gFn_rpad(colName, 50, " ")  + '-- ' + colComm + '\n';
							paramSql  += '              , ' + this.gFn_rpad('#{' + colName + '}', 50, " ") + '-- ' + colComm + '\n';
						}
						else if(colName == "REG_DT") {
							txtArStr += '              , ' +  this.gFn_rpad(colName, 50, " ")  + '-- ' + colComm + '\n';
							paramSql  += '              , ' + this.gFn_rpad('NOW()', 50, " ")  + '-- ' + colComm + '\n';
						}
						else if(colName == "RGTR_ID") {
							txtArStr += '              , ' +  this.gFn_rpad(colName+")", 50, " ")  + '-- ' + colComm + '\n';
							paramSql  += '              , ' + this.gFn_rpad('#{_sessionUserCd}', 50, " ")  + '-- ' + colComm + '\n';
						}
					}
				} 
				txtArStr += '		VALUES (\n';
				txtArStr += paramSql;
				txtArStr += '		)\n';
				txtArStr += '	</insert>\n';				
				txtArStr += '\n';
				// UPDATE
				var updateSql = "";
				txtArStr += '	<update id="' + camelStr + 'Update" parameterType="map" timeout="0">\n';
				txtArStr += '		<![CDATA[\n';
				txtArStr += '		/*\n';
				txtArStr += '		*\n';
				txtArStr += '		* ' + this.divSearch.form.shEdtNameSpace.value + '.' + camelStr + 'Update \n';
				txtArStr += '		* ' + tableName + ' 수정\n';
				txtArStr += '		* @author dooresoft\n';
				txtArStr += '		* @since ' + this.fv_today + '\n';
				txtArStr += '		*/\n';
				txtArStr += '		]]]]><![CDATA[>\n';
				//txtArStr += '		UPDATE ' + tableSche + '.' + tableName + '\n';
				txtArStr += '		UPDATE ' + tableName + '\n';
				
				// txtArStr += '		SET    MDFCN_DT = DATE_FORMAT(NOW(), \'%Y%m%d%H%i%s\')\n';
				txtArStr += '		SET    MDFCN_DT =NOW()\n';
				txtArStr += '		     , MDFR_ID = #{_sessionUserCd}\n';
				var checkPk = 0;
				priSql = "";
				for(var i = 0; i < this.dsMain.rowcount; i++) {
					colName = this.dsMain.getColumn(i, "COLUMN_NAME");
					colComm = this.dsMain.getColumn(i, "COLUMN_COMMENT");
					
					if(this.dsMain.getColumn(i, "COLUMN_KEY") == "PRI" && checkPk == 0) {
						checkPk = 1;
						priSql += '		WHERE  ' + colName + ' = ' + '#{' +  colName  + '}\n';
					}
					else if(this.dsMain.getColumn(i, "COLUMN_KEY") == "PRI" && checkPk != 0) {
						priSql += '		AND    ' + colName + ' = ' + '#{' +  colName  + '}\n';
					}
					else if(colName != "REG_DT" && colName != "RGTR_ID" && colName != "MDFCN_DT" && colName != "MDFR_ID") {
						txtArStr += '		<if test=" ' + colName + ' != null and ' + colName + ' != \'\' ">\n';
						txtArStr += '		     , ' + this.gFn_rpad(colName + ' = #{' +  colName  + '}', 80, ' ') +'-- ' + colComm + '\n';
						txtArStr += '		</if>\n';
					}
				}
				txtArStr += priSql;
				txtArStr += '	</update>\n';				
				txtArStr += '\n';
				// DELETE
				txtArStr += '	<delete id="' + camelStr + 'Delete" parameterType="map" timeout="0">\n';
				txtArStr += '		<![CDATA[\n';
				txtArStr += '		/*\n';
				txtArStr += '		*\n';
				txtArStr += '		* ' + this.divSearch.form.shEdtNameSpace.value + '.' + camelStr + 'Delete \n';
				txtArStr += '		* ' + tableName + ' 삭제\n';
				txtArStr += '		* @author dooresoft\n';
				txtArStr += '		* @since ' + this.fv_today + '\n';
				txtArStr += '		*/\n';
				txtArStr += '		]]]]><![CDATA[>\n';
				// txtArStr += '		DELETE FROM ' + tableSche + '.' + tableName + '\n';
				txtArStr += '		DELETE FROM ' + tableName + '\n';
				txtArStr += '		WHERE  1 = 1\n';
				txtArStr += delSql;
				txtArStr +=  '	</delete>\n';
				txtArStr += '\n';
				// dataset 
				txtArStr += '      <Dataset id="ds' + this.gFn_getCamelString('0', tableName.substring(3)) + '">\n';
				txtArStr += '        <ColumnInfo>\n';
				txtArStr += dataSetStr;
				txtArStr += '        </ColumnInfo>\n';
				txtArStr += '      </Dataset>\n';
				
				this.divDetail.form.TextArea00.set_value(txtArStr);
				
			}
			break;
		case "Delete" : //삭제 콜백
            //Script
			take.alert(this, "", "삭제가 완료되었습니다.");
			this.fnSearch();
            break;
		case "Save" : //저장 콜백
			trace("\n\n############################################################### save 완\n\n");
			take.alert(this, "", "저장이 완료되었습니다.");
			this.fnSearch();
			break;
        default :
            break;
    }        
};

/*********************************************************
* 3 필수 FUNCTION 영역 (fnSearch, fnSave, fnAdd, fnDelRow)
********************************************************/
/**
 * fnSearch : 조회 transaction (필수) --> 공통 조회에서 호출할 디폴트값 세팅 필요
 * @param  {String} sTranId 트랜젝션 아이디
 * @return {N/A}    N/A
 * @example this.fnSearch("ID");
 */
this.fnSearch = function(sTranId)
{
     //공통 조회에서 호출할 디폴트값 세팅 필요
    if (take.nvl(sTranId, "")=="") sTranId = "Search";
	this.dsMain.clearData();
	this.dsSearch.setColumn(0, "schema", "doore");
	//this.dsSearch.setColumn(0, "tableName", "tb_arpln_reg_aply");
	take.tranSelect(this, "Search", "Doore.selectColumnList", "dsSearch", "dsMain", "", "fnCallback");
	
};

/*********************************************************
 * 4 각 COMPONENT 별 EVENT 영역
 ********************************************************/

this.divSearch_onkeyup = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo)
{
	if( e.keycode == 13 )
	{
		this.fnSearch();
	}
};


/*********************************************************
* 5 사용자 FUNCTION 영역
********************************************************/

/**
 * Camel String RETURN
 * @param {string}  reqType    		0 : 첫번째 문자 대문자로
 *        {string}  str				문자열
 * @return {string} returnStr
 */
this.gFn_getCamelString = function(reqType, str) {

	var returnStr = "";
	if(typeof(str) == "string") {
		returnStr = str.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (m, chr) => chr.toUpperCase());
		if(reqType == '0') returnStr =  returnStr.charAt(0).toUpperCase() + returnStr.slice(1);
		else returnStr;
	}
	else returnStr = str;
	return returnStr;
};

/**
 * 좌측문자열채우기
 * @params
 *  - str : 원 문자열
 *  - padLen : 최대 채우고자 하는 길이
 *  - padStr : 채우고자하는 문자(char)
 */
this.gFn_lpad = function(str, padLen, padStr) {
    if (padStr.length > padLen) {
        console.log("오류 : 채우고자 하는 문자열이 요청 길이보다 큽니다");
        return str;
    }
    str += ""; // 문자로
    padStr += ""; // 문자로
    while (str.length < padLen)
        str = padStr + str;
    str = str.length >= padLen ? str.substring(0, padLen) : str;
    return str;
};

/**
 * 우측문자열채우기
 * @params
 *  - str : 원 문자열
 *  - padLen : 최대 채우고자 하는 길이
 *  - padStr : 채우고자하는 문자(char)
 */
this.gFn_rpad = function(str, padLen, padStr) {
    if (padStr.length > padLen) {
        console.log("오류 : 채우고자 하는 문자열이 요청 길이보다 큽니다");
        return str + "";
    }
    str += ""; // 문자로
    padStr += ""; // 문자로
    while (str.length < padLen)
        str += padStr;
    str = str.length >= padLen ? str.substring(0, padLen) : str;
    return str;
};
]]></Script>
  </Form>
</FDL>
