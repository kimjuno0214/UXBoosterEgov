<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="BAS020P02" width="970" height="650" titletext="위해정보코드 선택" cssclass="fm_work" onload="Form_onload" ontimer="CM010P03_ontimer" background="#ffffff">
    <Layouts>
      <Layout height="650" mobileorientation="landscape" width="970">
        <Static id="Static02_00" taborder="0" text="W&#13;&#10;20" background="#fd9da0" opacity="0.5" textAlign="center" width="20" top="0" bottom="0" visible="false" left="0"/>
        <Static id="Static02_02" taborder="1" text="W&#13;&#10;20" background="#fd9da0" opacity="0.5" textAlign="center" top="0" bottom="0" visible="false" right="0" width="20"/>
        <Static id="Static01_00" taborder="2" text="H20" left="0" height="20" right="0" background="#fd9da0" opacity="0.5" textAlign="center" visible="false" top="0"/>
        <Static id="Static01_01" taborder="3" text="H20" left="0" height="20" right="0" background="#fd9da0" opacity="0.5" textAlign="center" visible="false" bottom="42"/>
        <Static id="Static01_02" taborder="4" text="H20" left="0" height="20" bottom="0" right="0" background="#fd9da0" opacity="0.5" textAlign="center" visible="false"/>
        <Button id="btnCancle" taborder="6" height="23" cssclass="btn_WF_cancel01" text="닫기" width="57" onclick="btnCancel_onclick" bottom="20" right="20"/>
        <Button id="btnEnter" taborder="5" height="23" cssclass="btn_WF_check01" text="확인" width="57" onclick="btnEnter_onclick" right="btnCancle:3" bottom="20"/>
        <Static id="Static24" taborder="7" text="위해정보코드 목록" left="20" top="20" height="21" cssclass="sta_WF_title02" right="160"/>
        <Grid id="grdList" taborder="8" left="20" top="Static24:5" binddataset="dsList" autofittype="col" right="20" oncelldblclick="btnEnter_onclick" bottom="62">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="100"/>
                <Column size="200"/>
                <Column size="500"/>
              </Columns>
              <Rows>
                <Row size="32" band="head"/>
                <Row size="30"/>
              </Rows>
              <Band id="head">
                <Cell text="위해정보코드"/>
                <Cell col="1" text="부적합 유형"/>
                <Cell col="2" text="위해정보"/>
              </Band>
              <Band id="body">
                <Cell text="bind:CODE_ID" textAlign="center"/>
                <Cell col="1" text="bind:CODE_NM" textAlign="left"/>
                <Cell col="2" text="bind:REF2" textAlign="left" wordWrap="char"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="REF1" type="STRING" size="256" description="프로젝트 코드"/>
          <Column id="USE_YN" type="STRING" size="256"/>
          <Column id="GROUP_ID" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/**
*  위해정보코드 선택
*
*  @MenuPath    기초정보관리 > 시험항목관리
*  @FileName    BAS020P02.xfdl 
*  @Creator     doore
*  @CreateDate  2023.01.26
*  @Version     1.0
*  @Desction    시험항목관리 화면에서 위해정보코드 선택 화면
* 
************** 소스 수정 이력 *************************************************
*    Date          Modifier            Description
*******************************************************************************
*  2023.01.26      doore               최초 생성 
*******************************************************************************
*/

//공통 라이브러리 호출

/*********************************************************
 * 1.1 FORM 변수 선언 영역
 ********************************************************/
this.fv_bWebOnload = false;
this.fv_sProjectCd = nexacro.getApplication().av_sProjectCd;
this.fv_objGdsUserInfo  = nexacro.getApplication().gdsUserInfo;
this.fv_sCertFldCd = take.nvl(this.parent.sCertFldCd, "");

/*********************************************************
* 1.2 FORM EVENT 영역(onload등)
********************************************************/
/**
* Form_onload 최초 로드시 발생되는 이벤트 (필수)
*/
this.Form_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
   this.fnSearch();
};

/*********************************************************
* 2 필수 FUNCTION 영역 (fnInit, fnSearch, fnSave, fnAddRow, fnDelRow)
********************************************************/
/**
 * fnSearch : 조회 transaction (필수) --> 공통 조회에서 호출할 디폴트값 세팅 필요
 * @param  {String} sTranId 트랜젝션 아이디
 * @return {N/A}    N/A
 * @example this.fnSearch("ID");
 */
this.fnSearch = function(sTranId)
{
    //공통 조회에서 호출할 디폴트값 세팅 필요
    if (take.nvl(sTranId, "")=="") sTranId = "Search";

	this.dsSearch.setColumn(0, "REF1", this.fv_sCertFldCd);
	this.dsSearch.setColumn(0, "USE_YN", "Y");
	this.dsSearch.setColumn(0, "GROUP_ID", "HARM_INFO_CD");
	
	take.tranSelect(this, "Search", "SystemCommon.codeInfoList", "dsSearch", "dsList", "", "fnCallback");
	
};

/**
 * fnSave : 저장 transaction (필수) -->공통 저장에서 호출할 디폴트값 세팅 필요
 * @param  {String} sTranId 트랜젝션 아이디
 * @return {N/A}    N/A
 * @example this.fnSave("ID");
 */
this.fnSave = function(sTranId)
{    
    //공통 조회에서 호출할 디폴트값 세팅 필요
    if (take.nvl(sTranId, "")=="") sTranId = "Save";
	
};

/**
 * fnDelRow : 행 삭제 함수 (필수) --> 공통 행삭제에서 호출할 디폴트값 세팅 필요
 * @param  {String} sGridId 그리드 아이디
 * @param  {Number, Array} arrnRow    deleteRow 리턴값
 * @return {N/A} N/A
 * @example this.fnDelRow(sGrdId, nRow);
 */
this.fnDelRow = function(sGrdId, arrnRow)
{
    //공통 행추가에서 호출할 디폴트값 세팅
    if (take.nvl(sGrdId, "")=="") sGrdId = "";

	take.transaction(this, "Delete", "SVC_LOC::cm/boardSave.do", "dsNotice=dsNotice", "", "", "fnCallback");
};

/*********************************************************
 * 3 각 COMPONENT 별 EVENT 영역
  ********************************************************/

/* 닫기 버튼 클릭 이벤트 */
this.btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.close();
};

/**
 * 그리드의 선택된 데이터 값 넘기기
 */
this.btnEnter_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var dsObj = this.dsList;
	var returnObj;
	
	if(dsObj.rowposition > -1){
		returnObj = gFn_dataset2Object(dsObj, dsObj.rowposition);
	}
	
	if(this.opener) 
	{
		this.opener.fv_harmInfo = returnObj;
		this.close();
	}
}

/*********************************************************
* 4 사용자 FUNCTION 영역
********************************************************/


/*********************************************************
 * 5 TRANSACTION OR CALLBACK 콜백 처리부분
 ********************************************************/
/**
* fnCallback : transaction callback
* @param  : sId      - 서비스 아이디 (공통 콜백에서 넘어옴)
* @param  : nErrCd   - 에러코드 (공통 콜백에서 넘어옴)
* @param  : sErrMsg  - 에러메세지 (공통 콜백에서 넘어옴)
* @return : N/A
* @example :  
*/
this.fnCallback = function(sId, nErrCd, sErrMsg)
{
    //Transaction 에러는 공통에서 처리
    
    //Transaction은 성공이나 실제 처리된게 없을 경우 처리
    if( sErrMsg == "SUCC" )
    {
        //Success Script      
    } else {
        //Etc Script
    }   
    
    switch(sId)
    {
        case "Save" : //저장 콜백
            break;
		case "Delete" : //삭제 콜백
			break;
        case "Search" :  //조회 콜백
            break;        
        default :
            break;
    }        
};]]></Script>
  </Form>
</FDL>
