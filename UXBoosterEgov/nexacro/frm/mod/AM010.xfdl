<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="AM010" width="1659" height="832" titletext="주소록_주소록_주소록목록" onload="Form_onload">
    <Layouts>
      <Layout height="832" mobileorientation="landscape" width="1659">
        <Div id="divSearch" taborder="0" left="10" top="0" height="43" right="10" cssclass="div_WF_searchBox01" text="" minwidth="1300" maxwidth="">
          <Layouts>
            <Layout>
              <Static id="staGroupT" taborder="0" text="그룹" left="20" top="10" width="80" height="21" cssclass="sta_WF_textR"/>
              <Combo id="cboGroup" taborder="1" text="Combo00" left="staGroupT:10" top="10" width="195" height="21" innerdataset="dsGroupCode" codecolumn="CODE" datacolumn="NAME"/>
              <Static id="staUserNmT" taborder="5" text="이름" left="cboGroup:50" top="10" width="80" height="21" cssclass="sta_WF_textR"/>
              <Edit id="edtUserNm" taborder="2" left="staUserNmT:10" top="10" width="195" height="21" inputfilter="space"/>
              <Static id="staUserMobileT" taborder="7" text="휴대폰번호" left="edtUserNm:50" top="10" width="80" height="21" cssclass="sta_WF_textR"/>
              <Edit id="edtUserMobile" taborder="3" left="staUserMobileT:10" top="10" width="195" height="21" text="010" inputfilter="alpha,comma,dot,sign,space,symbol"/>
              <Static id="staUserEmailT" taborder="6" text="이메일" left="edtUserMobile:50" top="10" width="80" height="21" cssclass="sta_WF_textR"/>
              <Edit id="edtUserEmail" taborder="4" left="staUserEmailT:10" top="10" width="195" height="21" inputfilter="space"/>
              <Static id="Static07" taborder="8" text="10" left="332" top="0" width="2" background="rgba(255,0,0,0.4)" visible="false" color="#ff0000" textAlign="center" bottom="0"/>
              <Static id="Static08" taborder="9" text="10" left="665" top="0" width="2" background="rgba(255,0,0,0.4)" visible="false" color="#ff0000" textAlign="center" bottom="0"/>
            </Layout>
          </Layouts>
        </Div>
        <Button id="btnShowHide" taborder="1" left="48.16%" top="divSearch:0" width="60" height="10" cssclass="btn_WF_fold01" onclick="btnHide_onclick"/>
        <Div id="divDetail" taborder="2" left="10" top="btnShowHide:20" right="10" bottom="10" minwidth="1300" maxwidth="">
          <Layouts>
            <Layout>
              <Static id="staTitleG" taborder="0" text="주소록그룹" left="0" top="0" height="30" width="280" cssclass="sta_WF_title02"/>
              <Button id="btnGroupAdd" taborder="23" text="그룹추가" top="4" height="21" onclick="btnGroupAdd_onclick" width="70" left="240"/>
              <Static id="staAddressbook" taborder="1" text="주소록목록" left="btnGroupAdd:20" top="0" height="30" cssclass="sta_WF_title02" width="400"/>
              <Grid id="grdAddressbookGroup" taborder="2" left="0" top="30" width="310" autofittype="col" treeinitstatus="expand,all" treeusecheckbox="false" treeuseline="false" bottom="0" binddataset="dsAddressbookGroup" oncellclick="grdAddressbookGroup_oncellclick" nodataimage="url('theme://images/Alert_nodataimage.png')">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="209"/>
                      <Column size="50"/>
                      <Column size="50"/>
                    </Columns>
                    <Rows>
                      <Row size="30"/>
                    </Rows>
                    <Band id="body">
                      <Cell text="bind:GROUP_NM" displaytype="treeitemcontrol" edittype="tree" treelevel="bind:LEV"/>
                      <Cell col="1" displaytype="expr:(dataset.getColumn( currow, 'LEV' ) == 0  || dataset.getColumn( currow, 'EXCEL_YN' ) == 'Y') ? 'none' : 'buttoncontrol'" edittype="expr:(dataset.getColumn( currow, 'LEV' ) == 0  || dataset.getColumn( currow, 'EXCEL_YN' ) == 'Y') ? 'none' : 'button'" text="expr:(dataset.getColumn( currow, 'LEV' ) == 0  || dataset.getColumn( currow, 'EXCEL_YN' ) == 'Y') ? '' : '수정'"/>
                      <Cell col="2" displaytype="expr:(dataset.getColumn( currow, 'LEV' ) == 0  || dataset.getColumn( currow, 'EXCEL_YN' ) == 'Y') ? 'none' : 'buttoncontrol'" edittype="expr:(dataset.getColumn( currow, 'LEV' ) == 0  || dataset.getColumn( currow, 'EXCEL_YN' ) == 'Y') ? 'none' : 'button'" text="expr:(dataset.getColumn( currow, 'LEV' ) == 0  || dataset.getColumn( currow, 'EXCEL_YN' ) == 'Y') ? '' : '삭제'"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
              <Grid id="grdAddressbookInfo" taborder="3" left="grdAddressbookGroup:20" top="65" autofittype="col" right="0" bottom="0" binddataset="dsAddressbookInfo" onheadclick="grdAddressbookInfo_onheadclick" oncelldblclick="grdAddressbookInfo_oncelldblclick" nodataimage="url('theme://images/Alert_nodataimage.png')">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="40"/>
                      <Column size="80"/>
                      <Column size="150"/>
                      <Column size="80"/>
                      <Column size="150"/>
                      <Column size="100"/>
                      <Column size="100"/>
                      <Column size="100"/>
                    </Columns>
                    <Rows>
                      <Row size="32" band="head"/>
                      <Row size="30"/>
                    </Rows>
                    <Band id="head">
                      <Cell displaytype="checkboxcontrol" edittype="checkbox"/>
                      <Cell col="1" text="그룹"/>
                      <Cell col="2" text="회사명"/>
                      <Cell col="3" text="이름"/>
                      <Cell col="4" text="E-mail"/>
                      <Cell col="5" text="휴대폰"/>
                      <Cell col="6" text="전화번호"/>
                      <Cell col="7" text="Fax"/>
                    </Band>
                    <Band id="body">
                      <Cell text="bind:CHK" displaytype="checkboxcontrol" edittype="checkbox" textAlign="center" checkboxfalsevalue="0" checkboxtruevalue="1"/>
                      <Cell col="1" text="bind:GROUP_NM" textAlign="center"/>
                      <Cell col="2" text="bind:COMPANY_NM" textAlign="center"/>
                      <Cell col="3" text="bind:USER_NM" textAlign="center"/>
                      <Cell col="4" text="bind:USER_EMAIL"/>
                      <Cell col="5" text="bind:USER_MOBILE" textAlign="center"/>
                      <Cell col="6" text="bind:USER_TEL" textAlign="center"/>
                      <Cell col="7" text="bind:USER_FAX" textAlign="center"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
              <Button id="btnAllSub" taborder="20" text="전체" top="32" width="50" height="23" left="grdAddressbookGroup:20" onclick="btnSub_onclick"/>
              <Button id="btnASub" taborder="4" text="ㄱ" top="32" width="23" height="23" left="btnAllSub:5" onclick="btnSub_onclick"/>
              <Button id="btnBSub" taborder="5" text="ㄴ" top="32" width="23" height="23" left="btnASub:5" onclick="btnSub_onclick"/>
              <Button id="btnCSub" taborder="6" text="ㄷ" top="32" width="23" height="23" left="btnBSub:5" onclick="btnSub_onclick"/>
              <Button id="btnDSub" taborder="19" text="ㄹ" top="32" width="23" height="23" left="btnCSub:5" onclick="btnSub_onclick"/>
              <Button id="btnESub" taborder="7" text="ㅁ" top="32" width="23" height="23" left="btnDSub:5" onclick="btnSub_onclick"/>
              <Button id="btnFSub" taborder="11" text="ㅂ" top="32" width="23" height="23" left="btnESub:5" onclick="btnSub_onclick"/>
              <Button id="btnGSub" taborder="8" text="ㅅ" top="32" width="23" height="23" left="btnFSub:5" onclick="btnSub_onclick"/>
              <Button id="btnHSub" taborder="9" text="ㅇ" top="32" width="23" height="23" left="btnGSub:5" onclick="btnSub_onclick"/>
              <Button id="btnISub" taborder="18" text="ㅈ" top="32" width="23" height="23" left="btnHSub:5" onclick="btnSub_onclick"/>
              <Button id="btnJSub" taborder="10" text="ㅊ" top="32" width="23" height="23" left="btnISub:5" onclick="btnSub_onclick"/>
              <Button id="btnKSub" taborder="15" text="ㅋ" top="32" width="23" height="23" left="btnJSub:5" onclick="btnSub_onclick"/>
              <Button id="btnLSub" taborder="12" text="ㅌ" top="32" width="23" height="23" left="btnKSub:5" onclick="btnSub_onclick"/>
              <Button id="btnMSub" taborder="13" text="ㅍ" top="32" width="23" height="23" left="btnLSub:5" onclick="btnSub_onclick"/>
              <Button id="btnNSub" taborder="17" text="ㅎ" top="32" width="23" height="23" left="btnMSub:5" onclick="btnSub_onclick"/>
              <Button id="btnAlphabetSub" taborder="14" text="A - Z" top="32" width="50" height="23" left="btnNSub:5" onclick="btnSub_onclick"/>
              <Button id="btnNumberSub" taborder="16" text="숫자" top="32" width="50" height="23" left="btnAlphabetSub:5" onclick="btnSub_onclick"/>
              <Static id="Static27" taborder="21" text="10" left="310" top="0" width="20" background="rgba(255,0,0,0.4)" visible="false" color="red" textAlign="center" bottom="-29"/>
              <Static id="Static06" taborder="22" text="10" left="310" top="55" height="10" background="rgba(255,0,0,0.4)" visible="false" color="red" textAlign="center" right="0"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="Static01" taborder="3" text="10" left="0" top="0" width="10" background="rgba(255,0,0,0.4)" bottom="0" visible="false" textAlign="center"/>
        <Static id="Static00" taborder="4" text="10" top="0" width="10" background="rgba(255,0,0,0.4)" bottom="0" visible="false" textAlign="center" right="0"/>
        <Static id="Static22" taborder="5" text="10" left="0" height="10" background="rgba(255,0,0,0.4)" visible="false" right="0" bottom="0" textAlign="center"/>
        <Static id="Static24" taborder="6" text="10" left="0" height="20" background="rgba(255,0,0,0.4)" visible="false" right="0" textAlign="center" top="btnShowHide:0"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsAddressbookGroup" onrowposchanged="dsAddressbookGroup_onrowposchanged">
        <ColumnInfo>
          <Column id="PROJECT_CD" type="STRING" size="256"/>
          <Column id="MENU_CD" type="STRING" size="256"/>
          <Column id="USER_CD" type="STRING" size="256"/>
          <Column id="GROUP_CD" type="STRING" size="256"/>
          <Column id="GROUP_NM" type="STRING" size="256"/>
          <Column id="PATH" type="STRING" size="256"/>
          <Column id="LEV" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsAddressbookInfo">
        <ColumnInfo>
          <Column id="CHK" type="STRING" size="256"/>
          <Column id="ROWNUM" type="STRING" size="256"/>
          <Column id="PROJECT_CD" type="STRING" size="256"/>
          <Column id="MENU_CD" type="STRING" size="256"/>
          <Column id="GROUP_CD" type="STRING" size="256"/>
          <Column id="USER_CD" type="STRING" size="256"/>
          <Column id="ADDRESS_SEQ" type="STRING" size="256"/>
          <Column id="GROUP_NM" type="STRING" size="256"/>
          <Column id="COMPANY_NM" type="STRING" size="256"/>
          <Column id="USER_NM" type="STRING" size="256"/>
          <Column id="USER_EMAIL" type="STRING" size="256"/>
          <Column id="USER_MOBILE" type="STRING" size="256"/>
          <Column id="USER_TEL" type="STRING" size="256"/>
          <Column id="USER_FAX" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsUseYnCode">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="NAME">사용</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="NAME">사용안함</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsGroupCode">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="PROJECT_CD" type="STRING" size="256" description="프로젝트 코드"/>
          <Column id="MENU_CD" type="STRING" size="256" description="메뉴 코드"/>
          <Column id="GROUP_CD" type="STRING" size="256" description="그룹코드(조회)"/>
          <Column id="USER_NM" type="STRING" size="256" description="이름(조회)"/>
          <Column id="USER_EMAIL" type="STRING" size="256" description="메일(조회)"/>
          <Column id="USER_MOBILE" type="STRING" size="256" description="휴대전화(조회)"/>
          <Column id="USE_YN" type="STRING" size="256" description="사용여부(조회)"/>
          <Column id="SUB_CD" type="STRING" size="256" description="검색 버튼 코드"/>
          <Column id="SUB_INITFROM" type="STRING" size="256" description="이니셜 코드"/>
          <Column id="SUB_INITTO" type="STRING" size="256" description="이니셜 코드"/>
          <Column id="NROW" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsGroupDel">
        <ColumnInfo>
          <Column id="PROJECT_CD" type="STRING" size="256"/>
          <Column id="MENU_CD" type="STRING" size="256"/>
          <Column id="USER_CD" type="STRING" size="256"/>
          <Column id="GROUP_CD" type="STRING" size="256"/>
          <Column id="GROUP_NM" type="STRING" size="256"/>
          <Column id="PATH" type="STRING" size="256"/>
          <Column id="LEV" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/**
*  주소록목록
*
*  @MenuPath    주소록 > 주소록 > 주소록목록
*  @FileName    AM010.xfdl
*  @Creator     전영찬
*  @CreateDate  2019.08.20
*  @Version     1.0
*  @Desction    설명
*
************** 소스 수정 이력 *************************************************
*    date          Modifier            Description
*******************************************************************************
*  2019.08.20      전영찬             최초 생성
*******************************************************************************
*/

//공통 라이브러리 호출
/*********************************************************
 * 1.1 FORM 변수 선언 영역
 ********************************************************/
this.fv_sProjectCd = nexacro.getApplication().av_sProjectCd;    // ProjectCd

/*********************************************************
* 1.2 FORM EVENT 영역(onload)
********************************************************/
/**
* Form_onload 최초 로드시 발생되는 이벤트 (필수)
*/
this.Form_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
    if (take.formOnLoad(this)) //공통 온로드(필수) : 최초 온로드시 공통으로 호출되는 함수 --> 필수
    {
        this.fnInit();      // 초기화함수(Reload)
    }
}

/*********************************************************
* 2 필수 FUNCTION 영역 (fnSearch, fnSave, fnAddRow, fnDelRow)
********************************************************/
/**
 * fnSearch : 조회 transaction (필수) --> 공통 조회에서 호출할 디폴트값 세팅 필요
 * @param  {String} sTranId 트랜젝션 아이디
 * @return {N/A}    N/A
 * @example this.fnSearch("ID");
 */
this.fnSearch = function(sTranId)
{
    //공통 조회에서 호출할 디폴트값 세팅 필요
    if (take.nvl(sTranId, "")=="") sTranId = "Group";

    this.dsAddressbookInfo.filter("");

    switch(sTranId) {
    case "Group":
        this.dsAddressbookGroup.clearData();

        var objDsSearch = this.dsSearch;
        var objDivS = this.divSearch.form;
        var sGroupCd, sUserNm, sMail, sMobile;

        sGroupCd    = take.nvl(objDivS.cboGroup.value, "");
        sUserNm     = take.nvl(objDivS.edtUserNm.value, "");
        sMail       = take.nvl(objDivS.edtUserEmail.value, "");
        sMobile     = take.nvl(objDivS.edtUserMobile.value, "");

        objDsSearch.setColumn(0, "PROJECT_CD",  this.fv_sProjectCd);
        objDsSearch.setColumn(0, "MENU_CD",     this.ProgId);
        objDsSearch.setColumn(0, "GROUP_CD",    sGroupCd);
        objDsSearch.setColumn(0, "USER_NM",     sUserNm);
        objDsSearch.setColumn(0, "USER_EMAIL",  sMail);
        objDsSearch.setColumn(0, "USER_MOBILE", sMobile);

        take.tranSelect(this, sTranId, "AddressbookManagement.addressbookGroupList", "dsSearch", "dsAddressbookGroup", "", "fnCallback");
    	break;
    case "List":
        var objDsGroup = this.dsAddressbookGroup;
        var nDsRow = objDsGroup.rowposition;
        var sProjectCd, sMenuCd, sGroupCd;

        this.dsAddressbookInfo.clearData();
		
        sProjectCd  = objDsGroup.getColumn(nDsRow, "PROJECT_CD");
        sMenuCd     = objDsGroup.getColumn(nDsRow, "MENU_CD");
        sGroupCd    = objDsGroup.getColumn(nDsRow, "GROUP_CD");

        this.dsSearch.setColumn(0, "PROJECT_CD", sProjectCd);
        this.dsSearch.setColumn(0, "MENU_CD", sMenuCd);
        this.dsSearch.setColumn(0, "GROUP_CD", sGroupCd);
		
        take.tranSelect(this, sTranId, "AddressbookManagement.addressbookInfoList", "dsSearch", "dsAddressbookInfo", "", "fnCallback");
    	break;
    default:
    }
}

/**
 * fnAddRow : 행 추가 함수 (필수)--> 공통 행추가에서 호출할 디폴트값 세팅 필요
 * @param  {String} sGridId 그리드 아이디
 * @param  {Number} nRow    addRow 리턴값(추가된 행 위치)
 * @example this.fnAddRow(sGrdId, nRow);
 */
this.fnAddRow = function(sGrdId, nRow)
{
    //공통 버튼 실행
    //trace("rowcount : " + this.dsAddressbookGroup.rowcount);
    //trace("pos : " + this.dsAddressbookGroup.rowposition);
    //trace("xml : " + this.dsAddressbookGroup.saveXML());

    if(this.dsAddressbookGroup.rowcount > 1) {
        // 주소록 신규 작성 팝업창 오픈
        this.fnNewAddress();
    } else {
        take.alert(this, "", "주소록 그룹추가를 먼저 진행해주세요.", "");
    }
}

/**
 * fnDelRow : 행 삭제 함수 (필수) --> 공통 행삭제에서 호출할 디폴트값 세팅 필요
 * @param  {String} sGridId 그리드 아이디
 * @param  {Number, Array} arrnRow    deleteRow 리턴값
 * @return {N/A} N/A
 * @example this.fnDelRow(sGrdId, nRow);
 */
this.fnDelRow = function(sGrdId, arrnRow)
{
    //공통 행추가에서 호출할 디폴트값 세팅
    if (take.nvl(sGrdId, "")=="") sGrdId = "grdAddressbookInfo";

    switch(sGrdId)
    {
        case "grdAddressbookGroup" : //그룹 삭제(그룹내 주소록 삭제)
            this.dsGroupDel.clearData();

            var objDsAddGr    = this.dsAddressbookGroup;
            var objDsGrDel    = this.dsGroupDel;
            var nRowPos     = objDsAddGr.rowposition;
            var nAddRow     = objDsGrDel.addRow();
            objDsGrDel.copyRow(nAddRow, objDsAddGr, nRowPos);

            objDsGrDel.set_enableevent(false);
            objDsGrDel.set_updatecontrol(false);
            objDsGrDel.setRowType(nAddRow, "D");
            objDsGrDel.set_updatecontrol(true);
            objDsGrDel.set_enableevent(true);

            //take.tranSave(this, "addDel", "AddressbookManagement.addressbookInfo", "dsGroupDel", "", "", function()
			take.transaction(this, "addDel", "SVC_LOC::ar/addressbookInfoSave.do", "dsGroupDel=dsGroupDel:U", "", "", function()
            {
                objDsAddGr.deleteRow(nRowPos);
                //take.tranSave(this, "DelGroup", "AddressbookManagement.addressbookGroup", "dsAddressbookGroup", "", "", "fnCallback");
				take.transaction(this, "DelGroup", "SVC_LOC::ar/addressbookGroupSave.do", "dsAddressbookGroup=dsAddressbookGroup:U", "", "", "fnCallback");
            });
            break;
        case "grdAddressbookInfo" :  // 주소록정보 삭제
            var arrChkRow = take.getChkRow(this.dsAddressbookInfo);
            if(arrChkRow.length == 0){
                alert("선택된 항목이 없습니다.");
                return;
            }

            var bRowDel = take.confirm(this, "question", "선택된 주소록을 삭제 하시겠습니까?");
            if (bRowDel){
                //var arrChkRow = take.getChkRow(this.dsAddressbookInfo,"chk");
                for(var i=0; i<arrChkRow.length; i++) {
                    this.dsAddressbookInfo.deleteRow(arrChkRow[i]);
                }
                this.dsAddressbookInfo.filter("");
                //take.tranSave(this, "Delete", "AddressbookManagement.addressbookInfo", "dsAddressbookInfo", "", "", "fnCallback");
				take.transaction(this, "addDel", "SVC_LOC::ar/addressbookInfoDelete.do", "dsAddressbookInfo=dsAddressbookInfo:U", "", "", "fnCallback");
            }

            break;
        default :
            break;
    }
}

/*********************************************************
 * 3 각 COMPONENT 별 EVENT 영역
  ********************************************************/
//그리트 헤더 클릭 Grid Sorting / 전체클릭
this.grdAddressbookInfo_onheadclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	if(e.col == 0){
        take.fnGridCheckAll(obj, e.cell, "CHK");
	}
};

//grdAddressbookGroup_oncellclick : 그리트 cell 클릭
this.grdAddressbookGroup_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
    var nCellPos = obj.getCellPos();
	var arrRowidx = parseInt(obj.getSelectedRows());
	var selCellText = obj.getCellText( arrRowidx, nCellPos );

    if(e.clickitem == "") {
        if(e.oldrow != e.row) {
            this.dsAddressbookInfo.filter("");
            this.fnSearch('List');
        }
    } else if(e.clickitem == "control") {
        if(selCellText == "수정") {
            this.fnGroupAdd("Modify");
        } else {    // '삭제'
            var bRowDel = take.confirm(this, "question", "선택한 그룹을 삭제 하시겠습니까?");
            if (bRowDel){
                this.fnDelRow("grdAddressbookGroup");
            }
        }
    }
};

//dsAddressbookGroup_onrowposchanged : 트리 선택 dsAddressbookGroup
this.dsAddressbookGroup_onrowposchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo)
{
	//0번로우 (주소록) 선택시 상단 로우 선택되게 처리.
    if( obj.rowposition == 0 ){
		obj.set_rowposition(1);
	}
};

//btnSub_onclick : sub버튼 클릭 이벤트(ㄱ,ㄴ,ㄷ....)
this.btnSub_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
    var objDivS = this.divSearch.form;
    var sValue = obj.text;  //버튼 텍스트값(ex. 전체)

    if(sValue == "A - Z") { // A-Z
        this.dsAddressbookInfo.filter("this.parent.fnAlphaCheck(String(USER_NM)) == 'Y'");
    } else if(sValue == "숫자") { // 숫자
        this.dsAddressbookInfo.filter("this.parent.fnNumberCheck(String(USER_NM)) == 'Y'");
    } else if(sValue == "전체"){    // 전체
        this.dsAddressbookInfo.filter("");
    } else {        // (ㄱ,ㄴ,ㄷ....)
        this.dsAddressbookInfo.filter("this.parent.fnHangul(String(USER_NM).substr(0,1)) == '" + sValue + "'");
    }
};

// 디테일영역 그리드 클릭 상세 팝업오픈
this.grdAddressbookInfo_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	if(e.col != 0) {
        var objDs	   = this.dsAddressbookInfo;
		var nRow 	   = this.dsAddressbookGroup.rowposition;
		var sEntry 	   = "U";
		var sProjectCd = this.fv_sProjectCd;
		var sMenuCd	   = this.ProgId;
		var sGroupCd   = objDs.getColumn(objDs.rowposition, "GROUP_CD");
		var sAdressSeq = objDs.getColumn(objDs.rowposition, "ADDRESS_SEQ");
        var aAgrKey    = {sEntry:sEntry, sProjectCd:sProjectCd, sMenuCd:sMenuCd, nRow:nRow, sAdressSeq:sAdressSeq, sGroupCd:sGroupCd};
        var sOptions   = "titletext='" + "주소록 상세(수정)" + "'";
		
        //var sOptions = "showtitlebar=true layered=true titletext='" + "주소록 상세(수정)" + "'";
        take.openPopup(this, "AM010P01" , "frm::mod/AM010P01.xfdl"
                                        , aAgrKey
                                        //, sOptions
                                        , ""
                                        , "", false);
    }
};

// 그룹추가 버튼
this.btnGroupAdd_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
    this.fnGroupAdd("Add");
};
/*********************************************************
* 4 사용자 FUNCTION 영역
********************************************************/
/**
 * fnInit : 초기화 함수
 * @param  {String} N/A
 * @example this.fnInit();
 */
this.fnInit = function()
{
    var objParam = "PROJECT_CD='" + this.fv_sProjectCd + "' MENU_CD='" + this.ProgId + "'";

    take.tranSelect(this, "GroupCode", "AddressbookManagement.addressbookGroupCode", "", "dsGroupCode", objParam, function()
    {
        this.dsGroupCode.insertRow(0);
        this.dsGroupCode.setColumn(0, "CODE", "G");
        this.dsGroupCode.setColumn(0, "NAME", "전체");
        this.divSearch.form.cboGroup.set_index(0);

        this.fnSearch('Group');  //그룹리스트
    });
}

// 그룹추가, 수정 팝업오픈 이벤트
this.fnGroupAdd = function(sType)
{
    var objDs 	= this.dsAddressbookGroup;
	var sOrder	= objDs.getColumn((objDs.rowcount - 1),"GROUP_ORDER");
	var aAgrKey;
	//var sOptions;
	
    if(sType == "Add") {
        aAgrKey = {sTitle:sType, sProjectCd:this.fv_sProjectCd, sMenuCd:this.ProgId, sOrder:sOrder};
        //sOptions = "titletext='" + "그룹 추가" + "'";
    } else { // 수정
        var sGroupCd = objDs.getColumn(objDs.rowposition, "GROUP_CD");
        aAgrKey = {sTitle:sType, sProjectCd:this.fv_sProjectCd, sMenuCd:this.ProgId, sOrder:sOrder, sGroupCd:sGroupCd};
        //sOptions = "titletext='" + "그룹 수정" + "'";
    }

    //var sOptions = "showtitlebar=true layered=true titletext='" + "주소록 상세(수정)" + "'";

    take.openPopup(this, "AM010P02" , "frm::mod/AM010P02.xfdl"
									, aAgrKey
                                    //, sOptions
                                    , ""
									, "", false);
}

// 주소록 신규작성
this.fnNewAddress = function()
{
    var nRow = this.dsAddressbookGroup.rowposition;
    var sCode = this.dsAddressbookGroup.getColumn(nRow, "GROUP_CD");
    var aAgrKey = {sTitle:"주소록 등록", sEntry:"C", sProjectCd:this.fv_sProjectCd, sMenuCd:this.ProgId, nRow:nRow, sCode:sCode};
    var sOptions = "titletext='" + "주소록 신규작성" + "'";
    //var sOptions = "showtitlebar=true layered=true titletext='" + "주소록 상세(수정)" + "'";

	take.openPopup(this, "AM010P01" , "frm::mod/AM010P01.xfdl"
									, aAgrKey
                                    //, sOptions
                                    , ""
									, "", false);
}

/**
 * fnHangul : 이니셜 버튼클릭 함수
 * @param  {String} sHangul 문자형 인자
 * @example this.fnHangul(sHangul);
 */
this.fnHangul = function(sHangul)
{
  var arrCho = ["ㄱ","ㄲ","ㄴ","ㄷ","ㄸ","ㄹ","ㅁ","ㅂ","ㅃ","ㅅ","ㅆ","ㅇ","ㅈ","ㅉ","ㅊ","ㅋ","ㅌ","ㅍ","ㅎ"];
  var sResult = "";
  for(i=0;i<sHangul.length;i++) {
    code = sHangul.charCodeAt(i)-44032;
    if(code>-1 && code<11172) sResult += arrCho[Math.floor(code/588)];
  }
  return sResult;
}

/**
 * fnNumberCheck : 숫자 버튼클릭 함수
 * @param  {String} sName 문자형 인자
 * @example this.fnNumberCheck(sName);
 */
this.fnNumberCheck = function(sName)
{
    var sFilter = sName.replace(/[^0-9]/g, '');

    if(!isNaN(sFilter)) {
        if(sFilter.length>0) {
            return "Y";
        }
    }
};

/**
 * fnAlphaCheck : 알파벳 버튼클릭 함수
 * @param  {String} sName 문자형 인자
 * @example this.fnAlphaCheck(sName);
 */
this.fnAlphaCheck = function(sName)
{
    var sFilter = sName.replace(/[^a-zA-Z]/g, '');

    if(sFilter.length>0) {
        return "Y";
    }
};

/*********************************************************
 * 5 TRANSACTION OR CALLBACK 콜백 처리부분
 ********************************************************/
/**
* fnCallback : transaction callback
* @param  : svcId   - 서비스 아이디 (공통 콜백에서 넘어옴)
* @param  : errCd   - 에러코드 (공통 콜백에서 넘어옴)
* @param  : errMsg   - 에러메세지 (공통 콜백에서 넘어옴)
* @return : N/A
* @example :
*/
this.fnCallback = function(sId, nErrCd, sErrMsg)
{
    //Transaction 에러는 공통에서 처리

    //Transaction은 성공이나 실제 처리된게 없을 경우 처리
    if( sErrMsg == "SUCC" )
    {
        //Success Script
    } else {
        //Etc Script
    }

    switch(sId)
    {
        case "Group" : //그룹코드 콜백
			trace(this.dsAddressbookGroup.saveXML());
             this.fnSearch('List');
            break;
        case "List" :  //조회 콜백
            //Script
            var nCnt = this.dsAddressbookInfo.rowcount;
            this.divDetail.form.staAddressbook.set_text("주소록목록 (총 " + nCnt + "건)");

            this.dsSearch.clearData();
            this.dsSearch.addRow();
            break;
        case "Delete" : //삭제(저장) 콜백
            take.alert(this, "Info", "선택한 주소록이 삭제 되었습니다.");
			this.fnSearch('List');
            break;
        case "DelGroup" : //그룹 삭제 콜백
            take.alert(this, "Info", "그룹 삭제가 정상처리 되었습니다.");
			//this.fnInit();
            this.reload();
            break;

        default :
            break;
    }
}

/**
* fnPopCallback : popup callback
* @param  : N/A
* @return : N/A
* @example :
*/
this.fnPopCallback = function(sPopId, sArg)
{
    switch(sPopId)
    {
        case "AM010P01" : // 주소록추가 콜백
             this.fnSearch('List');
            break;
        case "AM010P02" :  //그룹추가 콜백
            this.fnInit();
            break;
        default :
            break;
    }
}
]]></Script>
  </Form>
</FDL>
