<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="srcMaker_Popup" width="980" height="700" titletext="EasyBAM Source Maker_PopUp" onload="srcMaker_Popup_onload" background="#ffffff">
    <Layouts>
      <Layout height="700" mobileorientation="landscape" width="980">
        <Grid id="grdSub" taborder="0" left="450" top="80" bottom="0" right="0" binddataset="dsQuery" autofittype="col" oncellclick="grdSub_oncellclick">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="40"/>
                <Column size="500"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="선택"/>
                <Cell col="1" text="QueryNamespace.ID"/>
              </Band>
              <Band id="body">
                <Cell text="bind:CHK" displaytype="checkboxcontrol" edittype="checkbox"/>
                <Cell col="1" text="bind:QUERY_ID" displaytype="normal" imagestretch="fixaspectratio" textAlign="left"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btnOk" taborder="1" text="선택" left="10" top="10" height="40" right="10" onclick="btnOk_onclick"/>
        <Grid id="grdMain" taborder="2" left="0" top="80" right="540" bottom="0" binddataset="dsCode" autofittype="col" treeuseimage="true" treeasynctoggle="false">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="40"/>
                <Column size="100"/>
                <Column size="250"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="선택"/>
                <Cell col="1" text="코드그룹 ID"/>
                <Cell col="2" text="코드그룹 명"/>
              </Band>
              <Band id="body">
                <Cell text="bind:CHK" displaytype="checkboxcontrol" edittype="checkbox"/>
                <Cell col="1" text="bind:CODE_ID" textAlign="center"/>
                <Cell col="2" text="bind:CODE_NM"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="staLable02" taborder="3" text="Code선택" top="41" cssclass="sta_WF_title02" usedecorate="true" width="154" height="40" left="1"/>
        <Static id="staLable00" taborder="4" text="View Query선택" top="41" cssclass="sta_WF_title02" usedecorate="true" width="154" height="40" left="451"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsQuery">
        <ColumnInfo>
          <Column id="CHK" type="STRING" size="256"/>
          <Column id="QUERY_ID" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsCode">
        <ColumnInfo>
          <Column id="CHK" type="STRING" size="256" description="선택"/>
          <Column id="CODE_KEY" type="STRING" size="256" description="코드KEY"/>
          <Column id="GROUP_ID" type="STRING" size="256" description="그룹ID"/>
          <Column id="CODE_ID" type="STRING" size="256" description="코드ID"/>
          <Column id="PARENT_KEY" type="STRING" size="256" description="부모KEY"/>
          <Column id="CODE_NM" type="STRING" size="256" description="코드명"/>
          <Column id="ML_CD" type="STRING" size="256" description="다국어코드"/>
          <Column id="REF1" type="STRING" size="256" description="참조1"/>
          <Column id="REF2" type="STRING" size="256" description="참조2"/>
          <Column id="REF3" type="STRING" size="256" description="참조3"/>
          <Column id="DESC_TXT" type="STRING" size="256" description="상세설명"/>
          <Column id="CODE_ORDER " type="STRING" size="256" description="코드정렬순서"/>
          <Column id="USE_YN" type="STRING" size="256" description="사용여부"/>
          <Column id="REG_DT" type="STRING" size="256" description="등록일시"/>
          <Column id="REG_CD" type="STRING" size="256" description="등록자코드"/>
          <Column id="REG_NM" type="STRING" size="256" description="등록자명"/>
          <Column id="MOD_DT" type="STRING" size="256" description="수정일시"/>
          <Column id="MOD_CD" type="STRING" size="256" description="수정자코드"/>
          <Column id="MOD_NM" type="STRING" size="256" description="수정자명"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/**
*  SYSTEM FORM NAME
*
*  @MenuPath    1DEPTH > 2DEPTH
*  @FileName    *.xfdl 
*  @Creator     홍길동
*  @CreateDate  yyyy.MM.DD 
*  @Version     1.0
*  @Desction    설명
* 
************** 소스 수정 이력 *************************************************
*    date          Modifier            Description
*******************************************************************************
*  YYYY.MM.DD      홍길동             최초 생성 
*******************************************************************************
*/

//공통 라이브러리 호출

/*********************************************************
 * 1.1 FORM 변수 선언 영역
 ********************************************************/
this.fv_sGrdNm = null;		//쿼리 ID
this.fv_sFlag  = "QCodeY";  //폼 구분값

/*********************************************************
* 1.2 FORM EVENT 영역(onload)
********************************************************/
/**
* formid_onload 최초 로드시 발생되는 이벤트 (필수)
*/
this.srcMaker_Popup_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
   if (take.formOnLoad(this)) //공통 온로드(필수) : 최초 온로드시 공통으로 호출되는 함수 --> 필수
   {
		take.transaction(this
							, "Init"
							, "SVC_LOC::srcmaker/CodeQuerySelect.do"
							, ""
							, "dsCode=dsCode dsQuery=dsQuery"
							, ""
							, "fnCallback");
   }
}

/*********************************************************
* 2.1 TRANSACTION 서비스 호출 처리
 ********************************************************/
/**
 * fnTran : 조회 transaction (필수) --> 공통 조회에서 호출할 디폴트값 세팅 필요
 * @param  {String} sTranId 트랜젝션 아이디
 * @return {N/A}    N/A
 * @example this.fnTran("ID");
 */
this.fnTran = function(sTranId)
{
    //공통 조회에서 호출할 디폴트값 세팅 필요
    if (take.nvl(sTranId, "")=="") sTranId = "Transation id";
    
    //변수선언
    var sUrl   = "",      //서비스 URL
        sInDs  = "",      //데이터셋을 검색조건으로 보낼경우 사용 -->선택
        sOutDs = "",      //데이터를 받아올 데이터셋 지정
        sParam = "",      //파라메터 사용 안 할 경우       
        sCallBack = "";        //콜백 처리 함수

    sCallBack  = "fnCallback" ; 
    
    switch(sTranId)
    {
        case "Transaction id 01" :  
            Dataset.clearData();
            //Script
            break;
        case "Transaction id 02" :  //코드 조회
            Dataset.clearData();//Script
            //Script
            break;
        case "Transaction id 03" : //다국어 조회
            Dataset.clearData();//Script
            //Script
            break;
        case "Save transation id 01" :  
            //Script            
            break;
        case "Save transation id 01" :  //코드저장
            //Script            
            break; 
        default :
            break;
    }
    
    //트랜젝션 공통함수 호출 -->필수(모든 트랜젝션을 공통으로 처리)
    take.transaction(this,sTranId, sUrl, sInDs, sOutDs, sParam, sCallBack);
}

/*********************************************************
 * 2.2 CALLBACK 콜백 처리부분
 ********************************************************/
/**
* fnCallback : transaction callback
* @param  : svcId   - 서비스 아이디 (공통 콜백에서 넘어옴)
* @param  : errCd   - 에러코드 (공통 콜백에서 넘어옴)
* @param  : errMsg   - 에러메세지 (공통 콜백에서 넘어옴)
* @return : N/A
* @example :  
*/
this.fnCallback = function(sId, nErrCd, sErrMsg)
{
    //Transaction 에러는 공통에서 처리
    
    //Transaction은 성공이나 실제 처리된게 없을 경우 처리
    if( sErrMsg == "SUCC" )
    {
        //Success Script      
    } else {
        //Etc Script
    }   
    
    switch(sId)
    {
        case "Transation id 01" : //조회 콜백
            //Script
            break;
        case "Transation id 02" :  //조회 콜백
            //Script
            break;
        case "Transation id 03" : //조회 콜백
            //Script
            break;
        case "Save transation id 01" :  //저장 콜백
            //Script
            break;
        case "Save transation id 01" :  //저장 콜백
            //Script
            break;
        default :
            break;
    }        
} 

/*********************************************************
* 3 필수 FUNCTION 영역 (fnSearch, fnSave, fnAddRow, fnDelRow)
********************************************************/
/**
 * fnSearch : 조회 transaction (필수) --> 공통 조회에서 호출할 디폴트값 세팅 필요
 * @param  {String} sTranId 트랜젝션 아이디
 * @return {N/A}    N/A
 * @example this.fnSearch("ID");
 */
this.fnSearch = function(sTranId)
{
    //공통 조회에서 호출할 디폴트값 세팅 필요
    if (take.nvl(sTranId, "")=="") sTranId = "Transation id";
    
    this.fnTran(sTranId);
}
/**
 * fnSave : 저장 transaction (필수) -->공통 저장에서 호출할 디폴트값 세팅 필요
 * @param  {String} sTranId 트랜젝션 아이디
 * @return {N/A}    N/A
 * @example this.fnSave("ID");
 */
this.fnSave = function(sTranId)
{    
    //공통 조회에서 호출할 디폴트값 세팅 필요
    if (take.nvl(sTranId, "")=="") sTranId = "Save transation id";
    
    this.fnTran(sTranId);
}
/**
 * fnAddRow : 행 추가 함수 (필수)--> 공통 행추가에서 호출할 디폴트값 세팅 필요
 * @param  {String} sGridId 그리드 아이디
 * @param  {Number} nRow    addRow 리턴값(추가된 행 위치)
 * @example this.fnAddRow(sGrdId, nRow);
 */
this.fnAddRow = function(sGrdId, nRow)
{
    //공통 행추가에서 호출할 디폴트값 세팅
    if (take.nvl(sGrdId, "")=="") sGrdId = "Grid00";
    
    //Script
}

/**
 * fnDelRow : 행 삭제 함수 (필수) --> 공통 행삭제에서 호출할 디폴트값 세팅 필요
 * @param  {String} sGridId 그리드 아이디
 * @param  {Number, Array} arrnRow    deleteRow 리턴값
 * @return {N/A} N/A
 * @example this.fnDelRow(sGrdId, nRow); 
 */
this.fnDelRow = function(sGrdId, arrnRow)
{    
    //공통 행추가에서 호출할 디폴트값 세팅
    if (take.nvl(sGrdId, "")=="") sGrdId = "Grid00";
    
    //Script
}

/*********************************************************
 * 4 각 COMPONENT 별 EVENT 영역
  ********************************************************/
/**
* btnOk_onclick : 확인 버튼 클릭
*/
this.btnOk_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//var objDs = this.dsInfo;
	//
	//for (var i=0; i<objDs.rowcount; i++)
	//{
	//	if (objDs.getColumn(i, "CHK") == 1)
	//	{
	//		var index = i;
	//		this.fv_sGrdNm = objDs.getColumn(i, "ID");
	//	}
	//}
	//this.fnSendChildValue(this.fv_sGrdNm,this.fv_sFlag);
	
	var dsObj = this.dsCode;
	var returnObj;

	if(dsObj.rowposition == -1 || dsObj.getRowCount() == 0){
		return;
	}
	
	this.fvIsMultiSel = true;
	if(!this.fvIsMultiSel){
		//싱글
		if(dsObj.rowposition > -1){
			returnObj = this.fnDataset2Object(dsObj, dsObj.rowposition);
		}
	}else{
		//멀티
		returnObj	= new Array();
		
		var arrChkRow = take.getChkRow(dsObj, "CHK");
		for (var i=0; i<arrChkRow.length; i++){
			// Dataset의 특정 Row 값을 JSON Object로 변환한다.
			var objRtn = this.fnDataset2Object(dsObj, arrChkRow[i]);
			returnObj.push(objRtn);
		}
	}
	this.fnClose(this, returnObj);
};

/**
 * fnClose : 부모창으로 변수 전달
 */
this.fnClose = function(o, variant)
{
	var pThis  = o;
	
	if (pThis.opener && typeof variant != "string") {
		variant = take.nvl(variant, "");
		pThis.opener.oInfo = variant;
		pThis.close();
	}else{
		pThis.close(variant);
	}
};

/**
 * fnDataset2Object : dataset 특정행을 object로 변환
 */
this.fnDataset2Object = function(obj, nRow)
{
	var objRtn	= {};
	
	for (var i=0; i<obj.getColCount(); i++)
	{
		var strColId	 = obj.getColID(i);
		objRtn[strColId] = obj.getColumn(nRow, strColId);
	}
	return objRtn;
};

/**
* grdSub_oncellclick : 그리드 셀 클릭 이벤트
*/
this.grdSub_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	var objDs 	= this.dsInfo;
	if (e.cell == 0)
	{
		for(var i=0; i<objDs.rowcount; i++)
		{
			objDs.setColumn(i, "CHK", 0);	
		}
		objDs.setColumn(e.row, "CHK", 1);
	}
};

/*********************************************************
* 5 사용자 FUNCTION 영역
********************************************************/
/**
 * fnSendChildValue : 부모창으로 선택한 그리드명칭을 전달
 * @param  {String} name 선택한 그리드 명칭
 * @param  {String} code 구분값
 * @example this.fnSendChildValue(name);
 */
this.fnSendChildValue = function(name, code)
{
	this.opener.fnSetChildValue(name, code);
    this.close();
}]]></Script>
  </Form>
</FDL>
